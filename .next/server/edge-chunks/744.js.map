{"version":3,"file":"edge-chunks/744.js","mappings":"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0E;AAC1E,+BAA+B;AAC/B,2BAA2B;AAC3B,yBAAyB;AACzB,sBAAsB;AACtB,0BAA0B;AAC1B,KAAK;AACE,MAAMC,0BAA0B,iDAAC;;;;;;;AAOxC,CAAC,GAAC;AAEK,MAAMC,kBAAkB,cAAc;AACtC,MAAMC,yBAAyB,aAAa;AAE5C,MAAMC,sBAA8C;IACzDC,SAAS;IACT,eAAe;IACf,0BAA0B;IAC1B,uBAAuB;IACvB,UAAU;IACV,qBAAqB;IACrB,eAAe;IACf,0BAA0B;IAC1B,wBAAwB;IACxB,sBAAsB;IACtB,wGAAwG;IACxG,cAAc;IACd,qBAAqB;AACvB,EAAE;AAEF,MAAMC,eAAe;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAMC,eAAe;IACnB;IACA;IACA;IACA;CACD;AAED,MAAMC,kBAAkB;IACtB;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAMC,cAAc;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAMC,kBAAkB;IACtB;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAMC,eAAe;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAMtJ,iBAAiB;OACzBiJ,aAAaxI,GAAG,CAAC,CAACmB,OAAU;YAC7BA;YACA2H,WAAW;YACXC,UAAU;gBACRtC,IAAI;gBACJuC,cAAc;gBACdC,cAAc;YAChB;QACF;OACGT,aAAaxI,GAAG,CAAC,CAACmB,OAAU;YAC7BA;YACA2H,WAAW;YACXC,UAAU;gBACRtC,IAAI;gBACJuC,cAAc;gBACdC,cAAc;YAChB;QACF;OACGR,aAAazI,GAAG,CAAC,CAACmB,OAAU;YAC7BA;YACA2H,WAAW;YACXC,UAAU;gBACRtC,IAAI;gBACJuC,cAAc;gBACdC,cAAc;YAChB;QACF;OACGP,gBAAgB1I,GAAG,CAAC,CAACmB,OAAU;YAChCA;YACA2H,WAAW;YACXC,UAAU;gBACRtC,IAAI;gBACJuC,c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","sources":["webpack://_N_E/./app/api/auth.ts","webpack://_N_E/./app/config/server.ts","webpack://_N_E/./app/constant.ts","webpack://_N_E/./app/utils/format.ts","webpack://_N_E/./app/utils/model.ts"],"sourcesContent":["import { NextRequest } from \"next/server\";\nimport { getServerSideConfig } from \"../config/server\";\nimport md5 from \"spark-md5\";\nimport { ACCESS_CODE_PREFIX, ModelProvider } from \"../constant\";\n\nfunction getIP(req: NextRequest) {\n  let ip = req.ip ?? req.headers.get(\"x-real-ip\");\n  const forwardedFor = req.headers.get(\"x-forwarded-for\");\n\n  if (!ip && forwardedFor) {\n    ip = forwardedFor.split(\",\").at(0) ?? \"\";\n  }\n\n  return ip;\n}\n\nfunction parseApiKey(bearToken: string) {\n  const token = bearToken.trim().replaceAll(\"Bearer \", \"\").trim();\n  const isApiKey = !token.startsWith(ACCESS_CODE_PREFIX);\n\n  return {\n    accessCode: isApiKey ? \"\" : token.slice(ACCESS_CODE_PREFIX.length),\n    apiKey: isApiKey ? token : \"\",\n  };\n}\n\nexport function auth(req: NextRequest, modelProvider: ModelProvider) {\n  const authToken = req.headers.get(\"Authorization\") ?? \"\";\n\n  // check if it is openai api key or user token\n  const { accessCode, apiKey } = parseApiKey(authToken);\n\n  const hashedCode = md5.hash(accessCode ?? \"\").trim();\n\n  const serverConfig = getServerSideConfig();\n  console.log(\"[Auth] allowed hashed codes: \", [...serverConfig.codes]);\n  console.log(\"[Auth] got access code:\", accessCode);\n  console.log(\"[Auth] hashed access code:\", hashedCode);\n  console.log(\"[User IP] \", getIP(req));\n  console.log(\"[Time] \", new Date().toLocaleString());\n\n  if (serverConfig.needCode && !serverConfig.codes.has(hashedCode) && !apiKey) {\n    return {\n      error: true,\n      msg: !accessCode ? \"empty access code\" : \"wrong access code\",\n    };\n  }\n\n  if (serverConfig.hideUserApiKey && !!apiKey) {\n    return {\n      error: true,\n      msg: \"you are not allowed to access with your own api key\",\n    };\n  }\n\n  // if user does not provide an api key, inject system api key\n  if (!apiKey) {\n    const serverConfig = getServerSideConfig();\n\n    // const systemApiKey =\n    //   modelProvider === ModelProvider.GeminiPro\n    //     ? serverConfig.googleApiKey\n    //     : serverConfig.isAzure\n    //     ? serverConfig.azureApiKey\n    //     : serverConfig.apiKey;\n\n    let systemApiKey: string | undefined;\n\n    switch (modelProvider) {\n      case ModelProvider.Stability:\n        systemApiKey = serverConfig.stabilityApiKey;\n        break;\n      case ModelProvider.GeminiPro:\n        systemApiKey = serverConfig.googleApiKey;\n        break;\n      case ModelProvider.Claude:\n        systemApiKey = serverConfig.anthropicApiKey;\n        break;\n      case ModelProvider.Doubao:\n        systemApiKey = serverConfig.bytedanceApiKey;\n        break;\n      case ModelProvider.Ernie:\n        systemApiKey = serverConfig.baiduApiKey;\n        break;\n      case ModelProvider.Qwen:\n        systemApiKey = serverConfig.alibabaApiKey;\n        break;\n      case ModelProvider.GPT:\n      default:\n        if (req.nextUrl.pathname.includes(\"azure/deployments\")) {\n          systemApiKey = serverConfig.azureApiKey;\n        } else {\n          systemApiKey = serverConfig.apiKey;\n        }\n    }\n\n    if (systemApiKey) {\n      console.log(\"[Auth] use system api key\");\n      req.headers.set(\"Authorization\", `Bearer ${systemApiKey}`);\n    } else {\n      console.log(\"[Auth] admin did not provide an api key\");\n    }\n  } else {\n    console.log(\"[Auth] use user api key\");\n  }\n\n  return {\n    error: false,\n  };\n}\n","import md5 from \"spark-md5\";\nimport { DEFAULT_MODELS } from \"../constant\";\n\ndeclare global {\n  namespace NodeJS {\n    interface ProcessEnv {\n      PROXY_URL?: string; // docker only\n\n      OPENAI_API_KEY?: string;\n      CODE?: string;\n\n      BASE_URL?: string;\n      OPENAI_ORG_ID?: string; // openai only\n\n      VERCEL?: string;\n      BUILD_MODE?: \"standalone\" | \"export\";\n      BUILD_APP?: string; // is building desktop app\n\n      HIDE_USER_API_KEY?: string; // disable user's api key input\n      DISABLE_GPT4?: string; // allow user to use gpt-4 or not\n      ENABLE_BALANCE_QUERY?: string; // allow user to query balance or not\n      DISABLE_FAST_LINK?: string; // disallow parse settings from url or not\n      CUSTOM_MODELS?: string; // to control custom models\n      DEFAULT_MODEL?: string; // to control default model in every new chat window\n\n      // stability only\n      STABILITY_URL?: string;\n      STABILITY_API_KEY?: string;\n\n      // azure only\n      AZURE_URL?: string; // https://{azure-url}/openai/deployments/{deploy-name}\n      AZURE_API_KEY?: string;\n      AZURE_API_VERSION?: string;\n\n      // google only\n      GOOGLE_API_KEY?: string;\n      GOOGLE_URL?: string;\n\n      // google tag manager\n      GTM_ID?: string;\n\n      // anthropic only\n      ANTHROPIC_URL?: string;\n      ANTHROPIC_API_KEY?: string;\n      ANTHROPIC_API_VERSION?: string;\n\n      // baidu only\n      BAIDU_URL?: string;\n      BAIDU_API_KEY?: string;\n      BAIDU_SECRET_KEY?: string;\n\n      // bytedance only\n      BYTEDANCE_URL?: string;\n      BYTEDANCE_API_KEY?: string;\n\n      // alibaba only\n      ALIBABA_URL?: string;\n      ALIBABA_API_KEY?: string;\n\n      // custom template for preprocessing user input\n      DEFAULT_INPUT_TEMPLATE?: string;\n    }\n  }\n}\n\nconst ACCESS_CODES = (function getAccessCodes(): Set<string> {\n  const code = process.env.CODE;\n\n  try {\n    const codes = (code?.split(\",\") ?? [])\n      .filter((v) => !!v)\n      .map((v) => md5.hash(v.trim()));\n    return new Set(codes);\n  } catch (e) {\n    return new Set();\n  }\n})();\n\nfunction getApiKey(keys?: string) {\n  const apiKeyEnvVar = keys ?? \"\";\n  const apiKeys = apiKeyEnvVar.split(\",\").map((v) => v.trim());\n  const randomIndex = Math.floor(Math.random() * apiKeys.length);\n  const apiKey = apiKeys[randomIndex];\n  if (apiKey) {\n    console.log(\n      `[Server Config] using ${randomIndex + 1} of ${\n        apiKeys.length\n      } api key - ${apiKey}`,\n    );\n  }\n\n  return apiKey;\n}\n\nexport const getServerSideConfig = () => {\n  if (typeof process === \"undefined\") {\n    throw Error(\n      \"[Server Config] you are importing a nodejs-only module outside of nodejs\",\n    );\n  }\n\n  const disableGPT4 = !!process.env.DISABLE_GPT4;\n  let customModels = process.env.CUSTOM_MODELS ?? \"\";\n  let defaultModel = process.env.DEFAULT_MODEL ?? \"\";\n\n  if (disableGPT4) {\n    if (customModels) customModels += \",\";\n    customModels += DEFAULT_MODELS.filter((m) => m.name.startsWith(\"gpt-4\"))\n      .map((m) => \"-\" + m.name)\n      .join(\",\");\n    if (defaultModel.startsWith(\"gpt-4\")) defaultModel = \"\";\n  }\n\n  const isStability = !!process.env.STABILITY_API_KEY;\n\n  const isAzure = !!process.env.AZURE_URL;\n  const isGoogle = !!process.env.GOOGLE_API_KEY;\n  const isAnthropic = !!process.env.ANTHROPIC_API_KEY;\n\n  const isBaidu = !!process.env.BAIDU_API_KEY;\n  const isBytedance = !!process.env.BYTEDANCE_API_KEY;\n  const isAlibaba = !!process.env.ALIBABA_API_KEY;\n  // const apiKeyEnvVar = process.env.OPENAI_API_KEY ?? \"\";\n  // const apiKeys = apiKeyEnvVar.split(\",\").map((v) => v.trim());\n  // const randomIndex = Math.floor(Math.random() * apiKeys.length);\n  // const apiKey = apiKeys[randomIndex];\n  // console.log(\n  //   `[Server Config] using ${randomIndex + 1} of ${apiKeys.length} api key`,\n  // );\n\n  const allowedWebDevEndpoints = (\n    process.env.WHITE_WEBDEV_ENDPOINTS ?? \"\"\n  ).split(\",\");\n\n  return {\n    baseUrl: process.env.BASE_URL,\n    apiKey: getApiKey(process.env.OPENAI_API_KEY),\n    openaiOrgId: process.env.OPENAI_ORG_ID,\n\n    isStability,\n    stabilityUrl: process.env.STABILITY_URL,\n    stabilityApiKey: getApiKey(process.env.STABILITY_API_KEY),\n\n    isAzure,\n    azureUrl: process.env.AZURE_URL,\n    azureApiKey: getApiKey(process.env.AZURE_API_KEY),\n    azureApiVersion: process.env.AZURE_API_VERSION,\n\n    isGoogle,\n    googleApiKey: getApiKey(process.env.GOOGLE_API_KEY),\n    googleUrl: process.env.GOOGLE_URL,\n\n    isAnthropic,\n    anthropicApiKey: getApiKey(process.env.ANTHROPIC_API_KEY),\n    anthropicApiVersion: process.env.ANTHROPIC_API_VERSION,\n    anthropicUrl: process.env.ANTHROPIC_URL,\n\n    isBaidu,\n    baiduUrl: process.env.BAIDU_URL,\n    baiduApiKey: getApiKey(process.env.BAIDU_API_KEY),\n    baiduSecretKey: process.env.BAIDU_SECRET_KEY,\n\n    isBytedance,\n    bytedanceApiKey: getApiKey(process.env.BYTEDANCE_API_KEY),\n    bytedanceUrl: process.env.BYTEDANCE_URL,\n\n    isAlibaba,\n    alibabaUrl: process.env.ALIBABA_URL,\n    alibabaApiKey: getApiKey(process.env.ALIBABA_API_KEY),\n\n    gtmId: process.env.GTM_ID,\n\n    needCode: ACCESS_CODES.size > 0,\n    code: process.env.CODE,\n    codes: ACCESS_CODES,\n\n    proxyUrl: process.env.PROXY_URL,\n    isVercel: !!process.env.VERCEL,\n\n    hideUserApiKey: !!process.env.HIDE_USER_API_KEY,\n    disableGPT4,\n    hideBalanceQuery: !process.env.ENABLE_BALANCE_QUERY,\n    disableFastLink: !!process.env.DISABLE_FAST_LINK,\n    customModels,\n    defaultModel,\n    allowedWebDevEndpoints,\n  };\n};\n","export const OWNER = \"Yidadaa\";\nexport const REPO = \"ChatGPT-Next-Web\";\nexport const REPO_URL = `https://github.com/${OWNER}/${REPO}`;\nexport const ISSUE_URL = `https://github.com/${OWNER}/${REPO}/issues`;\nexport const UPDATE_URL = `${REPO_URL}#keep-updated`;\nexport const RELEASE_URL = `${REPO_URL}/releases`;\nexport const FETCH_COMMIT_URL = `https://api.github.com/repos/${OWNER}/${REPO}/commits?per_page=1`;\nexport const FETCH_TAG_URL = `https://api.github.com/repos/${OWNER}/${REPO}/tags?per_page=1`;\nexport const RUNTIME_CONFIG_DOM = \"danger-runtime-config\";\n\nexport const STABILITY_BASE_URL = \"https://api.stability.ai\";\n\nexport const DEFAULT_API_HOST = \"https://api.nextchat.dev\";\nexport const OPENAI_BASE_URL = \"https://api.openai.com\";\nexport const ANTHROPIC_BASE_URL = \"https://api.anthropic.com\";\n\nexport const GEMINI_BASE_URL = \"https://generativelanguage.googleapis.com/\";\n\nexport const BAIDU_BASE_URL = \"https://aip.baidubce.com\";\nexport const BAIDU_OATUH_URL = `${BAIDU_BASE_URL}/oauth/2.0/token`;\n\nexport const BYTEDANCE_BASE_URL = \"https://ark.cn-beijing.volces.com\";\n\nexport const ALIBABA_BASE_URL = \"https://dashscope.aliyuncs.com/api/\";\n\nexport const CACHE_URL_PREFIX = \"/api/cache\";\nexport const UPLOAD_URL = `${CACHE_URL_PREFIX}/upload`;\n\nexport enum Path {\n  Home = \"/\",\n  Chat = \"/chat\",\n  Settings = \"/settings\",\n  NewChat = \"/new-chat\",\n  Masks = \"/masks\",\n  Auth = \"/auth\",\n  Sd = \"/sd\",\n  SdNew = \"/sd-new\",\n}\n\nexport enum ApiPath {\n  Cors = \"\",\n  Azure = \"/api/azure\",\n  OpenAI = \"/api/openai\",\n  Anthropic = \"/api/anthropic\",\n  Google = \"/api/google\",\n  Baidu = \"/api/baidu\",\n  ByteDance = \"/api/bytedance\",\n  Alibaba = \"/api/alibaba\",\n  Stability = \"/api/stability\",\n}\n\nexport enum SlotID {\n  AppBody = \"app-body\",\n  CustomModel = \"custom-model\",\n}\n\nexport enum FileName {\n  Masks = \"masks.json\",\n  Prompts = \"prompts.json\",\n}\n\nexport enum StoreKey {\n  Chat = \"chat-next-web-store\",\n  Access = \"access-control\",\n  Config = \"app-config\",\n  Mask = \"mask-store\",\n  Prompt = \"prompt-store\",\n  Update = \"chat-update\",\n  Sync = \"sync\",\n  SdList = \"sd-list\",\n}\n\nexport const DEFAULT_SIDEBAR_WIDTH = 300;\nexport const MAX_SIDEBAR_WIDTH = 500;\nexport const MIN_SIDEBAR_WIDTH = 230;\nexport const NARROW_SIDEBAR_WIDTH = 100;\n\nexport const ACCESS_CODE_PREFIX = \"nk-\";\n\nexport const LAST_INPUT_KEY = \"last-input\";\nexport const UNFINISHED_INPUT = (id: string) => \"unfinished-input-\" + id;\n\nexport const STORAGE_KEY = \"chatgpt-next-web\";\n\nexport const REQUEST_TIMEOUT_MS = 60000;\n\nexport const EXPORT_MESSAGE_CLASS_NAME = \"export-markdown\";\n\nexport enum ServiceProvider {\n  OpenAI = \"OpenAI\",\n  Azure = \"Azure\",\n  Google = \"Google\",\n  Anthropic = \"Anthropic\",\n  Baidu = \"Baidu\",\n  ByteDance = \"ByteDance\",\n  Alibaba = \"Alibaba\",\n  Stability = \"Stability\",\n}\n\n// Google API safety settings, see https://ai.google.dev/gemini-api/docs/safety-settings\n// BLOCK_NONE will not block any content, and BLOCK_ONLY_HIGH will block only high-risk content.\nexport enum GoogleSafetySettingsThreshold {\n  BLOCK_NONE = \"BLOCK_NONE\",\n  BLOCK_ONLY_HIGH = \"BLOCK_ONLY_HIGH\",\n  BLOCK_MEDIUM_AND_ABOVE = \"BLOCK_MEDIUM_AND_ABOVE\",\n  BLOCK_LOW_AND_ABOVE = \"BLOCK_LOW_AND_ABOVE\",\n}\n\nexport enum ModelProvider {\n  Stability = \"Stability\",\n  GPT = \"GPT\",\n  GeminiPro = \"GeminiPro\",\n  Claude = \"Claude\",\n  Ernie = \"Ernie\",\n  Doubao = \"Doubao\",\n  Qwen = \"Qwen\",\n}\n\nexport const Stability = {\n  GeneratePath: \"v2beta/stable-image/generate\",\n  ExampleEndpoint: \"https://api.stability.ai\",\n};\n\nexport const Anthropic = {\n  ChatPath: \"v1/messages\",\n  ChatPath1: \"v1/complete\",\n  ExampleEndpoint: \"https://api.anthropic.com\",\n  Vision: \"2023-06-01\",\n};\n\nexport const OpenaiPath = {\n  ChatPath: \"v1/chat/completions\",\n  UsagePath: \"dashboard/billing/usage\",\n  SubsPath: \"dashboard/billing/subscription\",\n  ListModelPath: \"v1/models\",\n};\n\nexport const Azure = {\n  ChatPath: (deployName: string, apiVersion: string) =>\n    `deployments/${deployName}/chat/completions?api-version=${apiVersion}`,\n  ExampleEndpoint: \"https://{resource-url}/openai/deployments/{deploy-id}\",\n};\n\nexport const Google = {\n  ExampleEndpoint: \"https://generativelanguage.googleapis.com/\",\n  ChatPath: (modelName: string) =>\n    `v1beta/models/${modelName}:streamGenerateContent`,\n};\n\nexport const Baidu = {\n  ExampleEndpoint: BAIDU_BASE_URL,\n  ChatPath: (modelName: string) => {\n    let endpoint = modelName;\n    if (modelName === \"ernie-4.0-8k\") {\n      endpoint = \"completions_pro\";\n    }\n    if (modelName === \"ernie-4.0-8k-preview-0518\") {\n      endpoint = \"completions_adv_pro\";\n    }\n    if (modelName === \"ernie-3.5-8k\") {\n      endpoint = \"completions\";\n    }\n    if (modelName === \"ernie-speed-8k\") {\n      endpoint = \"ernie_speed\";\n    }\n    return `rpc/2.0/ai_custom/v1/wenxinworkshop/chat/${endpoint}`;\n  },\n};\n\nexport const ByteDance = {\n  ExampleEndpoint: \"https://ark.cn-beijing.volces.com/api/\",\n  ChatPath: \"api/v3/chat/completions\",\n};\n\nexport const Alibaba = {\n  ExampleEndpoint: ALIBABA_BASE_URL,\n  ChatPath: \"v1/services/aigc/text-generation/generation\",\n};\n\nexport const DEFAULT_INPUT_TEMPLATE = `{{input}}`; // input / time / model / lang\n// export const DEFAULT_SYSTEM_TEMPLATE = `\n// You are ChatGPT, a large language model trained by {{ServiceProvider}}.\n// Knowledge cutoff: {{cutoff}}\n// Current model: {{model}}\n// Current time: {{time}}\n// Latex inline: $x^2$\n// Latex block: $$e=mc^2$$\n// `;\nexport const DEFAULT_SYSTEM_TEMPLATE = `\nYou are ChatGPT, a large language model trained by {{ServiceProvider}}.\nKnowledge cutoff: {{cutoff}}\nCurrent model: {{model}}\nCurrent time: {{time}}\nLatex inline: \\\\(x^2\\\\) \nLatex block: $$e=mc^2$$\n`;\n\nexport const SUMMARIZE_MODEL = \"gpt-4o-mini\";\nexport const GEMINI_SUMMARIZE_MODEL = \"gemini-pro\";\n\nexport const KnowledgeCutOffDate: Record<string, string> = {\n  default: \"2021-09\",\n  \"gpt-4-turbo\": \"2023-12\",\n  \"gpt-4-turbo-2024-04-09\": \"2023-12\",\n  \"gpt-4-turbo-preview\": \"2023-12\",\n  \"gpt-4o\": \"2023-10\",\n  \"gpt-4o-2024-05-13\": \"2023-10\",\n  \"gpt-4o-mini\": \"2023-10\",\n  \"gpt-4o-mini-2024-07-18\": \"2023-10\",\n  \"gpt-4-vision-preview\": \"2023-04\",\n  // After improvements,\n  // it's now easier to add \"KnowledgeCutOffDate\" instead of stupid hardcoding it, as was done previously.\n  \"gemini-pro\": \"2023-12\",\n  \"gemini-pro-vision\": \"2023-12\",\n};\n\nconst openaiModels = [\n  \"gpt-3.5-turbo\",\n  \"gpt-3.5-turbo-1106\",\n  \"gpt-3.5-turbo-0125\",\n  \"gpt-4\",\n  \"gpt-4-0613\",\n  \"gpt-4-32k\",\n  \"gpt-4-32k-0613\",\n  \"gpt-4-turbo\",\n  \"gpt-4-turbo-preview\",\n  \"gpt-4o\",\n  \"gpt-4o-2024-05-13\",\n  \"gpt-4o-mini\",\n  \"gpt-4o-mini-2024-07-18\",\n  \"gpt-4-vision-preview\",\n  \"gpt-4-turbo-2024-04-09\",\n  \"gpt-4-1106-preview\",\n];\n\nconst googleModels = [\n  \"gemini-1.0-pro\",\n  \"gemini-1.5-pro-latest\",\n  \"gemini-1.5-flash-latest\",\n  \"gemini-pro-vision\",\n];\n\nconst anthropicModels = [\n  \"claude-instant-1.2\",\n  \"claude-2.0\",\n  \"claude-2.1\",\n  \"claude-3-sonnet-20240229\",\n  \"claude-3-opus-20240229\",\n  \"claude-3-haiku-20240307\",\n  \"claude-3-5-sonnet-20240620\",\n];\n\nconst baiduModels = [\n  \"ernie-4.0-turbo-8k\",\n  \"ernie-4.0-8k\",\n  \"ernie-4.0-8k-preview\",\n  \"ernie-4.0-8k-preview-0518\",\n  \"ernie-4.0-8k-latest\",\n  \"ernie-3.5-8k\",\n  \"ernie-3.5-8k-0205\",\n  \"ernie-speed-128k\",\n  \"ernie-speed-8k\",\n  \"ernie-lite-8k\",\n  \"ernie-tiny-8k\",\n];\n\nconst bytedanceModels = [\n  \"Doubao-lite-4k\",\n  \"Doubao-lite-32k\",\n  \"Doubao-lite-128k\",\n  \"Doubao-pro-4k\",\n  \"Doubao-pro-32k\",\n  \"Doubao-pro-128k\",\n];\n\nconst alibabaModes = [\n  \"qwen-turbo\",\n  \"qwen-plus\",\n  \"qwen-max\",\n  \"qwen-max-0428\",\n  \"qwen-max-0403\",\n  \"qwen-max-0107\",\n  \"qwen-max-longcontext\",\n];\n\nexport const DEFAULT_MODELS = [\n  ...openaiModels.map((name) => ({\n    name,\n    available: true,\n    provider: {\n      id: \"openai\",\n      providerName: \"OpenAI\",\n      providerType: \"openai\",\n    },\n  })),\n  ...openaiModels.map((name) => ({\n    name,\n    available: true,\n    provider: {\n      id: \"azure\",\n      providerName: \"Azure\",\n      providerType: \"azure\",\n    },\n  })),\n  ...googleModels.map((name) => ({\n    name,\n    available: true,\n    provider: {\n      id: \"google\",\n      providerName: \"Google\",\n      providerType: \"google\",\n    },\n  })),\n  ...anthropicModels.map((name) => ({\n    name,\n    available: true,\n    provider: {\n      id: \"anthropic\",\n      providerName: \"Anthropic\",\n      providerType: \"anthropic\",\n    },\n  })),\n  ...baiduModels.map((name) => ({\n    name,\n    available: true,\n    provider: {\n      id: \"baidu\",\n      providerName: \"Baidu\",\n      providerType: \"baidu\",\n    },\n  })),\n  ...bytedanceModels.map((name) => ({\n    name,\n    available: true,\n    provider: {\n      id: \"bytedance\",\n      providerName: \"ByteDance\",\n      providerType: \"bytedance\",\n    },\n  })),\n  ...alibabaModes.map((name) => ({\n    name,\n    available: true,\n    provider: {\n      id: \"alibaba\",\n      providerName: \"Alibaba\",\n      providerType: \"alibaba\",\n    },\n  })),\n] as const;\n\nexport const CHAT_PAGE_SIZE = 15;\nexport const MAX_RENDER_MSG_COUNT = 45;\n\n// some famous webdav endpoints\nexport const internalAllowedWebDavEndpoints = [\n  \"https://dav.jianguoyun.com/dav/\",\n  \"https://dav.dropdav.com/\",\n  \"https://dav.box.com/dav\",\n  \"https://nanao.teracloud.jp/dav/\",\n  \"https://bora.teracloud.jp/dav/\",\n  \"https://webdav.4shared.com/\",\n  \"https://dav.idrivesync.com\",\n  \"https://webdav.yandex.com\",\n  \"https://app.koofr.net/dav/Koofr\",\n];\n\nexport const PLUGINS = [{ name: \"Stable Diffusion\", path: Path.Sd }];\n","export function prettyObject(msg: any) {\n  const obj = msg;\n  if (typeof msg !== \"string\") {\n    msg = JSON.stringify(msg, null, \"  \");\n  }\n  if (msg === \"{}\") {\n    return obj.toString();\n  }\n  if (msg.startsWith(\"```json\")) {\n    return msg;\n  }\n  return [\"```json\", msg, \"```\"].join(\"\\n\");\n}\n\nexport function* chunks(s: string, maxBytes = 1000 * 1000) {\n  const decoder = new TextDecoder(\"utf-8\");\n  let buf = new TextEncoder().encode(s);\n  while (buf.length) {\n    let i = buf.lastIndexOf(32, maxBytes + 1);\n    // If no space found, try forward search\n    if (i < 0) i = buf.indexOf(32, maxBytes);\n    // If there's no space at all, take all\n    if (i < 0) i = buf.length;\n    // This is a safe cut-off point; never half-way a multi-byte\n    yield decoder.decode(buf.slice(0, i));\n    buf = buf.slice(i + 1); // Skip space (if any)\n  }\n}\n","import { DEFAULT_MODELS } from \"../constant\";\nimport { LLMModel } from \"../client/api\";\n\nconst customProvider = (providerName: string) => ({\n  id: providerName.toLowerCase(),\n  providerName: providerName,\n  providerType: \"custom\",\n});\n\nexport function collectModelTable(\n  models: readonly LLMModel[],\n  customModels: string,\n) {\n  const modelTable: Record<\n    string,\n    {\n      available: boolean;\n      name: string;\n      displayName: string;\n      provider?: LLMModel[\"provider\"]; // Marked as optional\n      isDefault?: boolean;\n    }\n  > = {};\n\n  // default models\n  models.forEach((m) => {\n    // using <modelName>@<providerId> as fullName\n    modelTable[`${m.name}@${m?.provider?.id}`] = {\n      ...m,\n      displayName: m.name, // 'provider' is copied over if it exists\n    };\n  });\n\n  // server custom models\n  customModels\n    .split(\",\")\n    .filter((v) => !!v && v.length > 0)\n    .forEach((m) => {\n      const available = !m.startsWith(\"-\");\n      const nameConfig =\n        m.startsWith(\"+\") || m.startsWith(\"-\") ? m.slice(1) : m;\n      let [name, displayName] = nameConfig.split(\"=\");\n\n      // enable or disable all models\n      if (name === \"all\") {\n        Object.values(modelTable).forEach(\n          (model) => (model.available = available),\n        );\n      } else {\n        // 1. find model by name, and set available value\n        const [customModelName, customProviderName] = name.split(\"@\");\n        let count = 0;\n        for (const fullName in modelTable) {\n          const [modelName, providerName] = fullName.split(\"@\");\n          if (\n            customModelName == modelName &&\n            (customProviderName === undefined ||\n              customProviderName === providerName)\n          ) {\n            count += 1;\n            modelTable[fullName][\"available\"] = available;\n            // swap name and displayName for bytedance\n            if (providerName === \"bytedance\") {\n              [name, displayName] = [displayName, modelName];\n              modelTable[fullName][\"name\"] = name;\n            }\n            if (displayName) {\n              modelTable[fullName][\"displayName\"] = displayName;\n            }\n          }\n        }\n        // 2. if model not exists, create new model with available value\n        if (count === 0) {\n          let [customModelName, customProviderName] = name.split(\"@\");\n          const provider = customProvider(\n            customProviderName || customModelName,\n          );\n          // swap name and displayName for bytedance\n          if (displayName && provider.providerName == \"ByteDance\") {\n            [customModelName, displayName] = [displayName, customModelName];\n          }\n          modelTable[`${customModelName}@${provider?.id}`] = {\n            name: customModelName,\n            displayName: displayName || customModelName,\n            available,\n            provider, // Use optional chaining\n          };\n        }\n      }\n    });\n\n  return modelTable;\n}\n\nexport function collectModelTableWithDefaultModel(\n  models: readonly LLMModel[],\n  customModels: string,\n  defaultModel: string,\n) {\n  let modelTable = collectModelTable(models, customModels);\n  if (defaultModel && defaultModel !== \"\") {\n    if (defaultModel.includes('@')) {\n      if (defaultModel in modelTable) {\n        modelTable[defaultModel].isDefault = true;\n      }\n    } else {\n      for (const key of Object.keys(modelTable)) {\n        if (modelTable[key].available && key.split('@').shift() == defaultModel) {\n          modelTable[key].isDefault = true;\n          break;\n        }\n      }\n    }\n  }\n  return modelTable;\n}\n\n/**\n * Generate full model table.\n */\nexport function collectModels(\n  models: readonly LLMModel[],\n  customModels: string,\n) {\n  const modelTable = collectModelTable(models, customModels);\n  const allModels = Object.values(modelTable);\n\n  return allModels;\n}\n\nexport function collectModelsWithDefaultModel(\n  models: readonly LLMModel[],\n  customModels: string,\n  defaultModel: string,\n) {\n  const modelTable = collectModelTableWithDefaultModel(\n    models,\n    customModels,\n    defaultModel,\n  );\n  const allModels = Object.values(modelTable);\n  return allModels;\n}\n\nexport function isModelAvailableInServer(\n  customModels: string,\n  modelName: string,\n  providerName: string,\n) {\n  const fullName = `${modelName}@${providerName}`;\n  const modelTable = collectModelTable(DEFAULT_MODELS, customModels);\n  return modelTable[fullName]?.available === false;\n}\n"],"names":["getServerSideConfig","md5","ACCESS_CODE_PREFIX","ModelProvider","getIP","req","ip","headers","get","forwardedFor","split","at","parseApiKey","bearToken","token","trim","replaceAll","isApiKey","startsWith","accessCode","slice","length","apiKey","auth","modelProvider","authToken","hashedCode","hash","serverConfig","console","log","codes","Date","toLocaleString","needCode","has","error","msg","hideUserApiKey","systemApiKey","Stability","stabilityApiKey","GeminiPro","googleApiKey","Claude","anthropicApiKey","Doubao","bytedanceApiKey","Ernie","baiduApiKey","Qwen","alibabaApiKey","GPT","nextUrl","pathname","includes","azureApiKey","set","DEFAULT_MODELS","ACCESS_CODES","getAccessCodes","code","process","env","CODE","filter","v","map","Set","e","getApiKey","keys","apiKeyEnvVar","apiKeys","randomIndex","Math","floor","random","Error","disableGPT4","DISABLE_GPT4","customModels","CUSTOM_MODELS","defaultModel","DEFAULT_MODEL","m","name","join","isStability","STABILITY_API_KEY","isAzure","AZURE_URL","isGoogle","GOOGLE_API_KEY","isAnthropic","ANTHROPIC_API_KEY","isBaidu","BAIDU_API_KEY","isBytedance","BYTEDANCE_API_KEY","isAlibaba","ALIBABA_API_KEY","allowedWebDevEndpoints","WHITE_WEBDEV_ENDPOINTS","baseUrl","BASE_URL","OPENAI_API_KEY","openaiOrgId","OPENAI_ORG_ID","stabilityUrl","STABILITY_URL","azureUrl","AZURE_API_KEY","azureApiVersion","AZURE_API_VERSION","googleUrl","GOOGLE_URL","anthropicApiVersion","ANTHROPIC_API_VERSION","anthropicUrl","ANTHROPIC_URL","baiduUrl","BAIDU_URL","baiduSecretKey","BAIDU_SECRET_KEY","bytedanceUrl","BYTEDANCE_URL","alibabaUrl","ALIBABA_URL","gtmId","GTM_ID","size","proxyUrl","PROXY_URL","isVercel","VERCEL","HIDE_USER_API_KEY","hideBalanceQuery","ENABLE_BALANCE_QUERY","disableFastLink","DISABLE_FAST_LINK","OWNER","REPO","REPO_URL","ISSUE_URL","UPDATE_URL","RELEASE_URL","FETCH_COMMIT_URL","FETCH_TAG_URL","RUNTIME_CONFIG_DOM","STABILITY_BASE_URL","DEFAULT_API_HOST","OPENAI_BASE_URL","ANTHROPIC_BASE_URL","GEMINI_BASE_URL","BAIDU_BASE_URL","BAIDU_OATUH_URL","BYTEDANCE_BASE_URL","ALIBABA_BASE_URL","CACHE_URL_PREFIX","UPLOAD_URL","Path","ApiPath","SlotID","FileName","StoreKey","DEFAULT_SIDEBAR_WIDTH","MAX_SIDEBAR_WIDTH","MIN_SIDEBAR_WIDTH","NARROW_SIDEBAR_WIDTH","LAST_INPUT_KEY","UNFINISHED_INPUT","id","STORAGE_KEY","REQUEST_TIMEOUT_MS","EXPORT_MESSAGE_CLASS_NAME","ServiceProvider","GoogleSafetySettingsThreshold","GeneratePath","ExampleEndpoint","Anthropic","ChatPath","ChatPath1","Vision","OpenaiPath","UsagePath","SubsPath","ListModelPath","Azure","deployName","apiVersion","Google","modelName","Baidu","endpoint","ByteDance","Alibaba","DEFAULT_INPUT_TEMPLATE","DEFAULT_SYSTEM_TEMPLATE","SUMMARIZE_MODEL","GEMINI_SUMMARIZE_MODEL","KnowledgeCutOffDate","default","openaiModels","googleModels","anthropicModels","baiduModels","bytedanceModels","alibabaModes","available","provider","providerName","providerType","CHAT_PAGE_SIZE","MAX_RENDER_MSG_COUNT","internalAllowedWebDavEndpoints","PLUGINS","path","prettyObject","obj","JSON","stringify","toString","chunks","s","maxBytes","decoder","TextDecoder","buf","TextEncoder","encode","i","lastIndexOf","indexOf","decode","customProvider","toLowerCase","collectModelTable","models","modelTable","forEach","displayName","nameConfig","Object","values","model","customModelName","customProviderName","count","fullName","undefined","collectModelTableWithDefaultModel","isDefault","key","shift","collectModels","allModels","collectModelsWithDefaultModel","isModelAvailableInServer"],"sourceRoot":""}
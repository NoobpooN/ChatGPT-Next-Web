(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[729],{2067:e=>{"use strict";e.exports=require("node:async_hooks")},6195:e=>{"use strict";e.exports=require("node:buffer")},7604:(e,t,a)=>{"use strict";a.r(t),a.d(t,{ComponentMod:()=>v,default:()=>C});var o={};a.r(o),a.d(o,{GET:()=>f,POST:()=>h,runtime:()=>g});var n={};a.r(n),a.d(n,{headerHooks:()=>_,originalPathname:()=>y,patchFetch:()=>T,requestAsyncStorage:()=>b,routeModule:()=>k,serverHooks:()=>P,staticGenerationAsyncStorage:()=>E,staticGenerationBailout:()=>m});var i=a(7875),r=a(8381),s=a(2251),u=a(9845),d=a(572);let l=(0,a(9579).g)(),p={needCode:l.needCode,hideUserApiKey:l.hideUserApiKey,disableGPT4:l.disableGPT4,hideBalanceQuery:l.hideBalanceQuery,disableFastLink:l.disableFastLink,customModels:l.customModels,defaultModel:l.defaultModel};async function c(){return d.xk.json(p)}let f=c,h=c,g="edge",k=new r.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/config/route",pathname:"/api/config",filename:"route",bundlePath:"app/api/config/route"},resolvedPagePath:"/Volumes/D/github/ChatGPT-Next-Web/app/api/config/route.ts",nextConfigOutput:"standalone",userland:o}),{requestAsyncStorage:b,staticGenerationAsyncStorage:E,serverHooks:P,headerHooks:_,staticGenerationBailout:m}=k,y="/api/config/route";function T(){return(0,u.XH)({serverHooks:P,staticGenerationAsyncStorage:E})}let v=n,C=i.a.wrap(k)}},e=>{var t=t=>e(e.s=t);e.O(0,[297,45,579],()=>t(7604));var a=e.O();(_ENTRIES="undefined"==typeof _ENTRIES?{}:_ENTRIES)["middleware_app/api/config/route"]=a}]);
//# sourceMappingURL=route.js.map
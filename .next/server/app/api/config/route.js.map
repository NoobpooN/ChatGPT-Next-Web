{"version":3,"file":"app/api/config/route.js","mappings":"oFAAAA,CAAAA,EAAAC,OAAA,CAAAC,QAAA,0CCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,gaCIA,IAAMC,EAAeC,CAAAA,EAAAA,QAAAA,CAAAA,IAIfC,EAAgB,CACpBC,SAAUH,EAAaG,QAAQ,CAC/BC,eAAgBJ,EAAaI,cAAc,CAC3CC,YAAaL,EAAaK,WAAW,CACrCC,iBAAkBN,EAAaM,gBAAgB,CAC/CC,gBAAiBP,EAAaO,eAAe,CAC7CC,aAAcR,EAAaQ,YAAY,CACvCC,aAAcT,EAAaS,YAAY,EAOzC,eAAeC,IACb,OAAOC,EAAAA,EAAYA,CAACC,IAAI,CAACV,EAC3B,CAEO,IAAMW,EAAMH,EACNI,EAAOJ,EAEPK,EAAU,OCtBvBC,EAAA,IAAwBC,EAAAC,mBAAmB,EAC3CC,WAAA,CACAC,KAAcC,EAAAC,CAAS,CAAAC,SAAA,CACvBC,KAAA,oBACAC,SAAA,cACAC,SAAA,QACAC,WAAA,sBACA,EACAC,iBAAA,6DACAC,iBAVA,aAWAC,SAAYC,CACZ,GAIA,CAAQC,oBAAAA,CAAA,CAAAC,6BAAAA,CAAA,CAAAC,YAAAA,CAAA,CAAAC,YAAAA,CAAA,CAAAC,wBAAAA,CAAA,EAAuGpB,EAC/GqB,EAAA,oBACA,SAAAC,IACA,MAAW,GAAAC,EAAAC,EAAA,EAAW,CACtBN,YAAAA,EACAD,6BAAAA,CACA,EACA,CC1BO,IAAAQ,EAAqBC,EAC5BC,EAAeC,EAAAC,CAAsB,CAAAC,IAAA,CAAM9B","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./app/api/config/route.ts","webpack://_N_E/./app/api/config/route.ts?27c9","webpack://_N_E/","webpack://_N_E/<anon>"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import { NextResponse } from \"next/server\";\n\nimport { getServerSideConfig } from \"../../config/server\";\n\nconst serverConfig = getServerSideConfig();\n\n// Danger! Do not hard code any secret value here!\n// 警告！不要在这里写入任何敏感信息！\nconst DANGER_CONFIG = {\n  needCode: serverConfig.needCode,\n  hideUserApiKey: serverConfig.hideUserApiKey,\n  disableGPT4: serverConfig.disableGPT4,\n  hideBalanceQuery: serverConfig.hideBalanceQuery,\n  disableFastLink: serverConfig.disableFastLink,\n  customModels: serverConfig.customModels,\n  defaultModel: serverConfig.defaultModel,\n};\n\ndeclare global {\n  type DangerConfig = typeof DANGER_CONFIG;\n}\n\nasync function handle() {\n  return NextResponse.json(DANGER_CONFIG);\n}\n\nexport const GET = handle;\nexport const POST = handle;\n\nexport const runtime = \"edge\";\n","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/Volumes/D/github/ChatGPT-Next-Web/app/api/config/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/config/route\",\n        pathname: \"/api/config\",\n        filename: \"route\",\n        bundlePath: \"app/api/config/route\"\n    },\n    resolvedPagePath: \"/Volumes/D/github/ChatGPT-Next-Web/app/api/config/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/config/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fconfig%2Froute&page=%2Fapi%2Fconfig%2Froute&pagePath=private-next-app-dir%2Fapi%2Fconfig%2Froute.ts&appDir=%2FVolumes%2FD%2Fgithub%2FChatGPT-Next-Web%2Fapp&appPaths=%2Fapi%2Fconfig%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/config/route.ts?__next_edge_ssr_entry__\";\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule);\n\n//# sourceMappingURL=edge-app-route.js.map"],"names":["module","exports","require","serverConfig","getServerSideConfig","DANGER_CONFIG","needCode","hideUserApiKey","disableGPT4","hideBalanceQuery","disableFastLink","customModels","defaultModel","handle","NextResponse","json","GET","POST","runtime","routeModule","module_compiled","AppRouteRouteModule","definition","kind","route_kind","x","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","requestAsyncStorage","staticGenerationAsyncStorage","serverHooks","headerHooks","staticGenerationBailout","originalPathname","patchFetch","patch_fetch","XH","ComponentMod","route_next_edge_ssr_entry_namespaceObject","next_edge_app_route_loaderabsolutePagePath_private_next_app_dir_2Fapi_2Fconfig_2Froute_ts_page_2Fapi_2Fconfig_2Froute_appDirLoader_bmV4dC1hcHAtbG9hZGVyP25hbWU9YXBwJTJGYXBpJTJGY29uZmlnJTJGcm91dGUmcGFnZT0lMkZhcGklMkZjb25maWclMkZyb3V0ZSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmNvbmZpZyUyRnJvdXRlLnRzJmFwcERpcj0lMkZWb2x1bWVzJTJGRCUyRmdpdGh1YiUyRkNoYXRHUFQtTmV4dC1XZWIlMkZhcHAmYXBwUGF0aHM9JTJGYXBpJTJGY29uZmlnJTJGcm91dGUmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9c3RhbmRhbG9uZSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEIQ_3D_3D_nextConfigOutput_standalone_preferredRegion_middlewareConfig_e30_3D_","edge_route_module_wrapper","a","wrap"],"sourceRoot":""}
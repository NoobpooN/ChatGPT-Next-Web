{"version":3,"file":"app/api/artifacts/route.js","mappings":"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","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./app/api/artifacts/route.ts","webpack://_N_E/./app/api/artifacts/route.ts?cb63","webpack://_N_E/?921f","webpack://_N_E/./app/config/server.ts","webpack://_N_E/./app/constant.ts","webpack://_N_E/<anon>"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import md5 from \"spark-md5\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { getServerSideConfig } from \"@/app/config/server\";\n\nasync function handle(req: NextRequest, res: NextResponse) {\n  const serverConfig = getServerSideConfig();\n  const storeUrl = () =>\n    `https://api.cloudflare.com/client/v4/accounts/${serverConfig.cloudflareAccountId}/storage/kv/namespaces/${serverConfig.cloudflareKVNamespaceId}`;\n  const storeHeaders = () => ({\n    Authorization: `Bearer ${serverConfig.cloudflareKVApiKey}`,\n  });\n  if (req.method === \"POST\") {\n    const clonedBody = await req.text();\n    const hashedCode = md5.hash(clonedBody).trim();\n    const body: {\n      key: string;\n      value: string;\n      expiration_ttl?: number;\n    } = {\n      key: hashedCode,\n      value: clonedBody,\n    };\n    try {\n      const ttl = parseInt(serverConfig.cloudflareKVTTL as string);\n      if (ttl > 60) {\n        body[\"expiration_ttl\"] = ttl;\n      }\n    } catch (e) {\n      console.error(e);\n    }\n    const res = await fetch(`${storeUrl()}/bulk`, {\n      headers: {\n        ...storeHeaders(),\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"PUT\",\n      body: JSON.stringify([body]),\n    });\n    const result = await res.json();\n    console.log(\"save data\", result);\n    if (result?.success) {\n      return NextResponse.json(\n        { code: 0, id: hashedCode, result },\n        { status: res.status },\n      );\n    }\n    return NextResponse.json(\n      { error: true, msg: \"Save data error\" },\n      { status: 400 },\n    );\n  }\n  if (req.method === \"GET\") {\n    const id = req?.nextUrl?.searchParams?.get(\"id\");\n    const res = await fetch(`${storeUrl()}/values/${id}`, {\n      headers: storeHeaders(),\n      method: \"GET\",\n    });\n    return new Response(res.body, {\n      status: res.status,\n      statusText: res.statusText,\n      headers: res.headers,\n    });\n  }\n  return NextResponse.json(\n    { error: true, msg: \"Invalid request\" },\n    { status: 400 },\n  );\n}\n\nexport const POST = handle;\nexport const GET = handle;\n\nexport const runtime = \"edge\";\n","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/Volumes/D/github/ChatGPT-Next-Web/app/api/artifacts/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/artifacts/route\",\n        pathname: \"/api/artifacts\",\n        filename: \"route\",\n        bundlePath: \"app/api/artifacts/route\"\n    },\n    resolvedPagePath: \"/Volumes/D/github/ChatGPT-Next-Web/app/api/artifacts/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/artifacts/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fartifacts%2Froute&page=%2Fapi%2Fartifacts%2Froute&pagePath=private-next-app-dir%2Fapi%2Fartifacts%2Froute.ts&appDir=%2FVolumes%2FD%2Fgithub%2FChatGPT-Next-Web%2Fapp&appPaths=%2Fapi%2Fartifacts%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/artifacts/route.ts?__next_edge_ssr_entry__\";\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule);\n\n//# sourceMappingURL=edge-app-route.js.map","import md5 from \"spark-md5\";\nimport { DEFAULT_MODELS, DEFAULT_GA_ID } from \"../constant\";\n\ndeclare global {\n  namespace NodeJS {\n    interface ProcessEnv {\n      PROXY_URL?: string; // docker only\n\n      OPENAI_API_KEY?: string;\n      CODE?: string;\n\n      BASE_URL?: string;\n      OPENAI_ORG_ID?: string; // openai only\n\n      VERCEL?: string;\n      BUILD_MODE?: \"standalone\" | \"export\";\n      BUILD_APP?: string; // is building desktop app\n\n      HIDE_USER_API_KEY?: string; // disable user's api key input\n      DISABLE_GPT4?: string; // allow user to use gpt-4 or not\n      ENABLE_BALANCE_QUERY?: string; // allow user to query balance or not\n      DISABLE_FAST_LINK?: string; // disallow parse settings from url or not\n      CUSTOM_MODELS?: string; // to control custom models\n      DEFAULT_MODEL?: string; // to control default model in every new chat window\n\n      // stability only\n      STABILITY_URL?: string;\n      STABILITY_API_KEY?: string;\n\n      // azure only\n      AZURE_URL?: string; // https://{azure-url}/openai/deployments/{deploy-name}\n      AZURE_API_KEY?: string;\n      AZURE_API_VERSION?: string;\n\n      // google only\n      GOOGLE_API_KEY?: string;\n      GOOGLE_URL?: string;\n\n      // google tag manager\n      GTM_ID?: string;\n\n      // anthropic only\n      ANTHROPIC_URL?: string;\n      ANTHROPIC_API_KEY?: string;\n      ANTHROPIC_API_VERSION?: string;\n\n      // baidu only\n      BAIDU_URL?: string;\n      BAIDU_API_KEY?: string;\n      BAIDU_SECRET_KEY?: string;\n\n      // bytedance only\n      BYTEDANCE_URL?: string;\n      BYTEDANCE_API_KEY?: string;\n\n      // alibaba only\n      ALIBABA_URL?: string;\n      ALIBABA_API_KEY?: string;\n\n      // tencent only\n      TENCENT_URL?: string;\n      TENCENT_SECRET_KEY?: string;\n      TENCENT_SECRET_ID?: string;\n\n      // moonshot only\n      MOONSHOT_URL?: string;\n      MOONSHOT_API_KEY?: string;\n\n      // iflytek only\n      IFLYTEK_URL?: string;\n      IFLYTEK_API_KEY?: string;\n      IFLYTEK_API_SECRET?: string;\n\n      // custom template for preprocessing user input\n      DEFAULT_INPUT_TEMPLATE?: string;\n    }\n  }\n}\n\nconst ACCESS_CODES = (function getAccessCodes(): Set<string> {\n  const code = process.env.CODE;\n\n  try {\n    const codes = (code?.split(\",\") ?? [])\n      .filter((v) => !!v)\n      .map((v) => md5.hash(v.trim()));\n    return new Set(codes);\n  } catch (e) {\n    return new Set();\n  }\n})();\n\nfunction getApiKey(keys?: string) {\n  const apiKeyEnvVar = keys ?? \"\";\n  const apiKeys = apiKeyEnvVar.split(\",\").map((v) => v.trim());\n  const randomIndex = Math.floor(Math.random() * apiKeys.length);\n  const apiKey = apiKeys[randomIndex];\n  if (apiKey) {\n    console.log(\n      `[Server Config] using ${randomIndex + 1} of ${\n        apiKeys.length\n      } api key - ${apiKey}`,\n    );\n  }\n\n  return apiKey;\n}\n\nexport const getServerSideConfig = () => {\n  if (typeof process === \"undefined\") {\n    throw Error(\n      \"[Server Config] you are importing a nodejs-only module outside of nodejs\",\n    );\n  }\n\n  const disableGPT4 = !!process.env.DISABLE_GPT4;\n  let customModels = process.env.CUSTOM_MODELS ?? \"\";\n  let defaultModel = process.env.DEFAULT_MODEL ?? \"\";\n\n  if (disableGPT4) {\n    if (customModels) customModels += \",\";\n    customModels += DEFAULT_MODELS.filter(\n      (m) => m.name.startsWith(\"gpt-4\") && !m.name.startsWith(\"gpt-4o-mini\"),\n    )\n      .map((m) => \"-\" + m.name)\n      .join(\",\");\n    if (\n      defaultModel.startsWith(\"gpt-4\") &&\n      !defaultModel.startsWith(\"gpt-4o-mini\")\n    )\n      defaultModel = \"\";\n  }\n\n  const isStability = !!process.env.STABILITY_API_KEY;\n\n  const isAzure = !!process.env.AZURE_URL;\n  const isGoogle = !!process.env.GOOGLE_API_KEY;\n  const isAnthropic = !!process.env.ANTHROPIC_API_KEY;\n  const isTencent = !!process.env.TENCENT_API_KEY;\n\n  const isBaidu = !!process.env.BAIDU_API_KEY;\n  const isBytedance = !!process.env.BYTEDANCE_API_KEY;\n  const isAlibaba = !!process.env.ALIBABA_API_KEY;\n  const isMoonshot = !!process.env.MOONSHOT_API_KEY;\n  const isIflytek = !!process.env.IFLYTEK_API_KEY;\n  // const apiKeyEnvVar = process.env.OPENAI_API_KEY ?? \"\";\n  // const apiKeys = apiKeyEnvVar.split(\",\").map((v) => v.trim());\n  // const randomIndex = Math.floor(Math.random() * apiKeys.length);\n  // const apiKey = apiKeys[randomIndex];\n  // console.log(\n  //   `[Server Config] using ${randomIndex + 1} of ${apiKeys.length} api key`,\n  // );\n\n  const allowedWebDevEndpoints = (\n    process.env.WHITE_WEBDEV_ENDPOINTS ?? \"\"\n  ).split(\",\");\n\n  return {\n    baseUrl: process.env.BASE_URL,\n    apiKey: getApiKey(process.env.OPENAI_API_KEY),\n    openaiOrgId: process.env.OPENAI_ORG_ID,\n\n    isStability,\n    stabilityUrl: process.env.STABILITY_URL,\n    stabilityApiKey: getApiKey(process.env.STABILITY_API_KEY),\n\n    isAzure,\n    azureUrl: process.env.AZURE_URL,\n    azureApiKey: getApiKey(process.env.AZURE_API_KEY),\n    azureApiVersion: process.env.AZURE_API_VERSION,\n\n    isGoogle,\n    googleApiKey: getApiKey(process.env.GOOGLE_API_KEY),\n    googleUrl: process.env.GOOGLE_URL,\n\n    isAnthropic,\n    anthropicApiKey: getApiKey(process.env.ANTHROPIC_API_KEY),\n    anthropicApiVersion: process.env.ANTHROPIC_API_VERSION,\n    anthropicUrl: process.env.ANTHROPIC_URL,\n\n    isBaidu,\n    baiduUrl: process.env.BAIDU_URL,\n    baiduApiKey: getApiKey(process.env.BAIDU_API_KEY),\n    baiduSecretKey: process.env.BAIDU_SECRET_KEY,\n\n    isBytedance,\n    bytedanceApiKey: getApiKey(process.env.BYTEDANCE_API_KEY),\n    bytedanceUrl: process.env.BYTEDANCE_URL,\n\n    isAlibaba,\n    alibabaUrl: process.env.ALIBABA_URL,\n    alibabaApiKey: getApiKey(process.env.ALIBABA_API_KEY),\n\n    isTencent,\n    tencentUrl: process.env.TENCENT_URL,\n    tencentSecretKey: getApiKey(process.env.TENCENT_SECRET_KEY),\n    tencentSecretId: process.env.TENCENT_SECRET_ID,\n\n    isMoonshot,\n    moonshotUrl: process.env.MOONSHOT_URL,\n    moonshotApiKey: getApiKey(process.env.MOONSHOT_API_KEY),\n\n    isIflytek,\n    iflytekUrl: process.env.IFLYTEK_URL,\n    iflytekApiKey: process.env.IFLYTEK_API_KEY,\n    iflytekApiSecret: process.env.IFLYTEK_API_SECRET,\n\n    cloudflareAccountId: process.env.CLOUDFLARE_ACCOUNT_ID,\n    cloudflareKVNamespaceId: process.env.CLOUDFLARE_KV_NAMESPACE_ID,\n    cloudflareKVApiKey: getApiKey(process.env.CLOUDFLARE_KV_API_KEY),\n    cloudflareKVTTL: process.env.CLOUDFLARE_KV_TTL,\n\n    gtmId: process.env.GTM_ID,\n    gaId: process.env.GA_ID || DEFAULT_GA_ID,\n\n    needCode: ACCESS_CODES.size > 0,\n    code: process.env.CODE,\n    codes: ACCESS_CODES,\n\n    proxyUrl: process.env.PROXY_URL,\n    isVercel: !!process.env.VERCEL,\n\n    hideUserApiKey: !!process.env.HIDE_USER_API_KEY,\n    disableGPT4,\n    hideBalanceQuery: !process.env.ENABLE_BALANCE_QUERY,\n    disableFastLink: !!process.env.DISABLE_FAST_LINK,\n    customModels,\n    defaultModel,\n    allowedWebDevEndpoints,\n  };\n};\n","import path from \"path\";\n\nexport const OWNER = \"ChatGPTNextWeb\";\nexport const REPO = \"ChatGPT-Next-Web\";\nexport const REPO_URL = `https://github.com/${OWNER}/${REPO}`;\nexport const ISSUE_URL = `https://github.com/${OWNER}/${REPO}/issues`;\nexport const UPDATE_URL = `${REPO_URL}#keep-updated`;\nexport const RELEASE_URL = `${REPO_URL}/releases`;\nexport const FETCH_COMMIT_URL = `https://api.github.com/repos/${OWNER}/${REPO}/commits?per_page=1`;\nexport const FETCH_TAG_URL = `https://api.github.com/repos/${OWNER}/${REPO}/tags?per_page=1`;\nexport const RUNTIME_CONFIG_DOM = \"danger-runtime-config\";\n\nexport const STABILITY_BASE_URL = \"https://api.stability.ai\";\n\nexport const DEFAULT_API_HOST = \"https://api.nextchat.dev\";\nexport const OPENAI_BASE_URL = \"https://api.openai.com\";\nexport const ANTHROPIC_BASE_URL = \"https://api.anthropic.com\";\n\nexport const GEMINI_BASE_URL = \"https://generativelanguage.googleapis.com/\";\n\nexport const BAIDU_BASE_URL = \"https://aip.baidubce.com\";\nexport const BAIDU_OATUH_URL = `${BAIDU_BASE_URL}/oauth/2.0/token`;\n\nexport const BYTEDANCE_BASE_URL = \"https://ark.cn-beijing.volces.com\";\n\nexport const ALIBABA_BASE_URL = \"https://dashscope.aliyuncs.com/api/\";\n\nexport const TENCENT_BASE_URL = \"https://hunyuan.tencentcloudapi.com\";\n\nexport const MOONSHOT_BASE_URL = \"https://api.moonshot.cn\";\nexport const IFLYTEK_BASE_URL = \"https://spark-api-open.xf-yun.com\";\n\nexport const CACHE_URL_PREFIX = \"/api/cache\";\nexport const UPLOAD_URL = `${CACHE_URL_PREFIX}/upload`;\n\nexport enum Path {\n  Home = \"/\",\n  Chat = \"/chat\",\n  Settings = \"/settings\",\n  NewChat = \"/new-chat\",\n  Masks = \"/masks\",\n  Auth = \"/auth\",\n  Sd = \"/sd\",\n  SdNew = \"/sd-new\",\n  Artifacts = \"/artifacts\",\n  SearchChat = \"/search-chat\",\n}\n\nexport enum ApiPath {\n  Cors = \"\",\n  Azure = \"/api/azure\",\n  OpenAI = \"/api/openai\",\n  Anthropic = \"/api/anthropic\",\n  Google = \"/api/google\",\n  Baidu = \"/api/baidu\",\n  ByteDance = \"/api/bytedance\",\n  Alibaba = \"/api/alibaba\",\n  Tencent = \"/api/tencent\",\n  Moonshot = \"/api/moonshot\",\n  Iflytek = \"/api/iflytek\",\n  Stability = \"/api/stability\",\n  Artifacts = \"/api/artifacts\",\n}\n\nexport enum SlotID {\n  AppBody = \"app-body\",\n  CustomModel = \"custom-model\",\n}\n\nexport enum FileName {\n  Masks = \"masks.json\",\n  Prompts = \"prompts.json\",\n}\n\nexport enum Plugin {\n  Artifacts = \"artifacts\",\n}\n\nexport enum StoreKey {\n  Chat = \"chat-next-web-store\",\n  Access = \"access-control\",\n  Config = \"app-config\",\n  Mask = \"mask-store\",\n  Prompt = \"prompt-store\",\n  Update = \"chat-update\",\n  Sync = \"sync\",\n  SdList = \"sd-list\",\n}\n\nexport const DEFAULT_SIDEBAR_WIDTH = 300;\nexport const MAX_SIDEBAR_WIDTH = 500;\nexport const MIN_SIDEBAR_WIDTH = 230;\nexport const NARROW_SIDEBAR_WIDTH = 100;\n\nexport const ACCESS_CODE_PREFIX = \"nk-\";\n\nexport const LAST_INPUT_KEY = \"last-input\";\nexport const UNFINISHED_INPUT = (id: string) => \"unfinished-input-\" + id;\n\nexport const STORAGE_KEY = \"chatgpt-next-web\";\n\nexport const REQUEST_TIMEOUT_MS = 60000;\n\nexport const EXPORT_MESSAGE_CLASS_NAME = \"export-markdown\";\n\nexport enum ServiceProvider {\n  OpenAI = \"OpenAI\",\n  Azure = \"Azure\",\n  Google = \"Google\",\n  Anthropic = \"Anthropic\",\n  Baidu = \"Baidu\",\n  ByteDance = \"ByteDance\",\n  Alibaba = \"Alibaba\",\n  Tencent = \"Tencent\",\n  Moonshot = \"Moonshot\",\n  Stability = \"Stability\",\n  Iflytek = \"Iflytek\",\n}\n\n// Google API safety settings, see https://ai.google.dev/gemini-api/docs/safety-settings\n// BLOCK_NONE will not block any content, and BLOCK_ONLY_HIGH will block only high-risk content.\nexport enum GoogleSafetySettingsThreshold {\n  BLOCK_NONE = \"BLOCK_NONE\",\n  BLOCK_ONLY_HIGH = \"BLOCK_ONLY_HIGH\",\n  BLOCK_MEDIUM_AND_ABOVE = \"BLOCK_MEDIUM_AND_ABOVE\",\n  BLOCK_LOW_AND_ABOVE = \"BLOCK_LOW_AND_ABOVE\",\n}\n\nexport enum ModelProvider {\n  Stability = \"Stability\",\n  GPT = \"GPT\",\n  GeminiPro = \"GeminiPro\",\n  Claude = \"Claude\",\n  Ernie = \"Ernie\",\n  Doubao = \"Doubao\",\n  Qwen = \"Qwen\",\n  Hunyuan = \"Hunyuan\",\n  Moonshot = \"Moonshot\",\n  Iflytek = \"Iflytek\",\n}\n\nexport const Stability = {\n  GeneratePath: \"v2beta/stable-image/generate\",\n  ExampleEndpoint: \"https://api.stability.ai\",\n};\n\nexport const Anthropic = {\n  ChatPath: \"v1/messages\",\n  ChatPath1: \"v1/complete\",\n  ExampleEndpoint: \"https://api.anthropic.com\",\n  Vision: \"2023-06-01\",\n};\n\nexport const OpenaiPath = {\n  ChatPath: \"v1/chat/completions\",\n  ImagePath: \"v1/images/generations\",\n  UsagePath: \"dashboard/billing/usage\",\n  SubsPath: \"dashboard/billing/subscription\",\n  ListModelPath: \"v1/models\",\n};\n\nexport const Azure = {\n  ChatPath: (deployName: string, apiVersion: string) =>\n    `deployments/${deployName}/chat/completions?api-version=${apiVersion}`,\n  // https://<your_resource_name>.openai.azure.com/openai/deployments/<your_deployment_name>/images/generations?api-version=<api_version>\n  ImagePath: (deployName: string, apiVersion: string) =>\n    `deployments/${deployName}/images/generations?api-version=${apiVersion}`,\n  ExampleEndpoint: \"https://{resource-url}/openai\",\n};\n\nexport const Google = {\n  ExampleEndpoint: \"https://generativelanguage.googleapis.com/\",\n  ChatPath: (modelName: string) =>\n    `v1beta/models/${modelName}:streamGenerateContent`,\n};\n\nexport const Baidu = {\n  ExampleEndpoint: BAIDU_BASE_URL,\n  ChatPath: (modelName: string) => {\n    let endpoint = modelName;\n    if (modelName === \"ernie-4.0-8k\") {\n      endpoint = \"completions_pro\";\n    }\n    if (modelName === \"ernie-4.0-8k-preview-0518\") {\n      endpoint = \"completions_adv_pro\";\n    }\n    if (modelName === \"ernie-3.5-8k\") {\n      endpoint = \"completions\";\n    }\n    if (modelName === \"ernie-speed-8k\") {\n      endpoint = \"ernie_speed\";\n    }\n    return `rpc/2.0/ai_custom/v1/wenxinworkshop/chat/${endpoint}`;\n  },\n};\n\nexport const ByteDance = {\n  ExampleEndpoint: \"https://ark.cn-beijing.volces.com/api/\",\n  ChatPath: \"api/v3/chat/completions\",\n};\n\nexport const Alibaba = {\n  ExampleEndpoint: ALIBABA_BASE_URL,\n  ChatPath: \"v1/services/aigc/text-generation/generation\",\n};\n\nexport const Tencent = {\n  ExampleEndpoint: TENCENT_BASE_URL,\n};\n\nexport const Moonshot = {\n  ExampleEndpoint: MOONSHOT_BASE_URL,\n  ChatPath: \"v1/chat/completions\",\n};\n\nexport const Iflytek = {\n  ExampleEndpoint: IFLYTEK_BASE_URL,\n  ChatPath: \"v1/chat/completions\",\n};\n\nexport const DEFAULT_INPUT_TEMPLATE = `{{input}}`; // input / time / model / lang\n// export const DEFAULT_SYSTEM_TEMPLATE = `\n// You are ChatGPT, a large language model trained by {{ServiceProvider}}.\n// Knowledge cutoff: {{cutoff}}\n// Current model: {{model}}\n// Current time: {{time}}\n// Latex inline: $x^2$\n// Latex block: $$e=mc^2$$\n// `;\nexport const DEFAULT_SYSTEM_TEMPLATE = `\nYou are ChatGPT, a large language model trained by {{ServiceProvider}}.\nKnowledge cutoff: {{cutoff}}\nCurrent model: {{model}}\nCurrent time: {{time}}\nLatex inline: \\\\(x^2\\\\) \nLatex block: $$e=mc^2$$\n`;\n\nexport const SUMMARIZE_MODEL = \"gpt-4o-mini\";\nexport const GEMINI_SUMMARIZE_MODEL = \"gemini-pro\";\n\nexport const KnowledgeCutOffDate: Record<string, string> = {\n  default: \"2021-09\",\n  \"gpt-4-turbo\": \"2023-12\",\n  \"gpt-4-turbo-2024-04-09\": \"2023-12\",\n  \"gpt-4-turbo-preview\": \"2023-12\",\n  \"gpt-4o\": \"2023-10\",\n  \"gpt-4o-2024-05-13\": \"2023-10\",\n  \"gpt-4o-2024-08-06\": \"2023-10\",\n  \"gpt-4o-mini\": \"2023-10\",\n  \"gpt-4o-mini-2024-07-18\": \"2023-10\",\n  \"gpt-4-vision-preview\": \"2023-04\",\n  // After improvements,\n  // it's now easier to add \"KnowledgeCutOffDate\" instead of stupid hardcoding it, as was done previously.\n  \"gemini-pro\": \"2023-12\",\n  \"gemini-pro-vision\": \"2023-12\",\n};\n\nconst openaiModels = [\n  \"gpt-3.5-turbo\",\n  \"gpt-3.5-turbo-1106\",\n  \"gpt-3.5-turbo-0125\",\n  \"gpt-4\",\n  \"gpt-4-0613\",\n  \"gpt-4-32k\",\n  \"gpt-4-32k-0613\",\n  \"gpt-4-turbo\",\n  \"gpt-4-turbo-preview\",\n  \"gpt-4o\",\n  \"gpt-4o-2024-05-13\",\n  \"gpt-4o-2024-08-06\",\n  \"gpt-4o-mini\",\n  \"gpt-4o-mini-2024-07-18\",\n  \"gpt-4-vision-preview\",\n  \"gpt-4-turbo-2024-04-09\",\n  \"gpt-4-1106-preview\",\n  \"dall-e-3\",\n];\n\nconst googleModels = [\n  \"gemini-1.0-pro\",\n  \"gemini-1.5-pro-latest\",\n  \"gemini-1.5-flash-latest\",\n  \"gemini-pro-vision\",\n];\n\nconst anthropicModels = [\n  \"claude-instant-1.2\",\n  \"claude-2.0\",\n  \"claude-2.1\",\n  \"claude-3-sonnet-20240229\",\n  \"claude-3-opus-20240229\",\n  \"claude-3-haiku-20240307\",\n  \"claude-3-5-sonnet-20240620\",\n];\n\nconst baiduModels = [\n  \"ernie-4.0-turbo-8k\",\n  \"ernie-4.0-8k\",\n  \"ernie-4.0-8k-preview\",\n  \"ernie-4.0-8k-preview-0518\",\n  \"ernie-4.0-8k-latest\",\n  \"ernie-3.5-8k\",\n  \"ernie-3.5-8k-0205\",\n  \"ernie-speed-128k\",\n  \"ernie-speed-8k\",\n  \"ernie-lite-8k\",\n  \"ernie-tiny-8k\",\n];\n\nconst bytedanceModels = [\n  \"Doubao-lite-4k\",\n  \"Doubao-lite-32k\",\n  \"Doubao-lite-128k\",\n  \"Doubao-pro-4k\",\n  \"Doubao-pro-32k\",\n  \"Doubao-pro-128k\",\n];\n\nconst alibabaModes = [\n  \"qwen-turbo\",\n  \"qwen-plus\",\n  \"qwen-max\",\n  \"qwen-max-0428\",\n  \"qwen-max-0403\",\n  \"qwen-max-0107\",\n  \"qwen-max-longcontext\",\n];\n\nconst tencentModels = [\n  \"hunyuan-pro\",\n  \"hunyuan-standard\",\n  \"hunyuan-lite\",\n  \"hunyuan-role\",\n  \"hunyuan-functioncall\",\n  \"hunyuan-code\",\n  \"hunyuan-vision\",\n];\n\nconst moonshotModes = [\"moonshot-v1-8k\", \"moonshot-v1-32k\", \"moonshot-v1-128k\"];\n\nconst iflytekModels = [\n  \"general\",\n  \"generalv3\",\n  \"pro-128k\",\n  \"generalv3.5\",\n  \"4.0Ultra\",\n];\n\nlet seq = 1000; // 内置的模型序号生成器从1000开始\nexport const DEFAULT_MODELS = [\n  ...openaiModels.map((name) => ({\n    name,\n    available: true,\n    sorted: seq++, // Global sequence sort(index)\n    provider: {\n      id: \"openai\",\n      providerName: \"OpenAI\",\n      providerType: \"openai\",\n      sorted: 1, // 这里是固定的，确保顺序与之前内置的版本一致\n    },\n  })),\n  ...openaiModels.map((name) => ({\n    name,\n    available: true,\n    sorted: seq++,\n    provider: {\n      id: \"azure\",\n      providerName: \"Azure\",\n      providerType: \"azure\",\n      sorted: 2,\n    },\n  })),\n  ...googleModels.map((name) => ({\n    name,\n    available: true,\n    sorted: seq++,\n    provider: {\n      id: \"google\",\n      providerName: \"Google\",\n      providerType: \"google\",\n      sorted: 3,\n    },\n  })),\n  ...anthropicModels.map((name) => ({\n    name,\n    available: true,\n    sorted: seq++,\n    provider: {\n      id: \"anthropic\",\n      providerName: \"Anthropic\",\n      providerType: \"anthropic\",\n      sorted: 4,\n    },\n  })),\n  ...baiduModels.map((name) => ({\n    name,\n    available: true,\n    sorted: seq++,\n    provider: {\n      id: \"baidu\",\n      providerName: \"Baidu\",\n      providerType: \"baidu\",\n      sorted: 5,\n    },\n  })),\n  ...bytedanceModels.map((name) => ({\n    name,\n    available: true,\n    sorted: seq++,\n    provider: {\n      id: \"bytedance\",\n      providerName: \"ByteDance\",\n      providerType: \"bytedance\",\n      sorted: 6,\n    },\n  })),\n  ...alibabaModes.map((name) => ({\n    name,\n    available: true,\n    sorted: seq++,\n    provider: {\n      id: \"alibaba\",\n      providerName: \"Alibaba\",\n      providerType: \"alibaba\",\n      sorted: 7,\n    },\n  })),\n  ...tencentModels.map((name) => ({\n    name,\n    available: true,\n    sorted: seq++,\n    provider: {\n      id: \"tencent\",\n      providerName: \"Tencent\",\n      providerType: \"tencent\",\n      sorted: 8,\n    },\n  })),\n  ...moonshotModes.map((name) => ({\n    name,\n    available: true,\n    sorted: seq++,\n    provider: {\n      id: \"moonshot\",\n      providerName: \"Moonshot\",\n      providerType: \"moonshot\",\n      sorted: 9,\n    },\n  })),\n  ...iflytekModels.map((name) => ({\n    name,\n    available: true,\n    sorted: seq++,\n    provider: {\n      id: \"iflytek\",\n      providerName: \"Iflytek\",\n      providerType: \"iflytek\",\n      sorted: 10,\n    },\n  })),\n] as const;\n\nexport const CHAT_PAGE_SIZE = 15;\nexport const MAX_RENDER_MSG_COUNT = 45;\n\n// some famous webdav endpoints\nexport const internalAllowedWebDavEndpoints = [\n  \"https://dav.jianguoyun.com/dav/\",\n  \"https://dav.dropdav.com/\",\n  \"https://dav.box.com/dav\",\n  \"https://nanao.teracloud.jp/dav/\",\n  \"https://bora.teracloud.jp/dav/\",\n  \"https://webdav.4shared.com/\",\n  \"https://dav.idrivesync.com\",\n  \"https://webdav.yandex.com\",\n  \"https://app.koofr.net/dav/Koofr\",\n];\n\nexport const DEFAULT_GA_ID = \"G-89WN60ZK2E\";\nexport const PLUGINS = [\n  { name: \"Stable Diffusion\", path: Path.Sd },\n  { name: \"Search Chat\", path: Path.SearchChat },\n];\n"],"names":["module","exports","require","handle","req","res","serverConfig","getServerSideConfig","storeUrl","cloudflareAccountId","cloudflareKVNamespaceId","storeHeaders","Authorization","cloudflareKVApiKey","method","clonedBody","text","hashedCode","md5","trim","body","key","value","ttl","parseInt","cloudflareKVTTL","e","console","error","fetch","headers","JSON","stringify","result","json","log","success","NextResponse","code","id","status","msg","nextUrl","searchParams","get","Response","statusText","POST","GET","runtime","routeModule","module_compiled","AppRouteRouteModule","definition","kind","route_kind","x","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","requestAsyncStorage","staticGenerationAsyncStorage","serverHooks","headerHooks","staticGenerationBailout","originalPathname","patchFetch","patch_fetch","XH","ComponentMod","route_next_edge_ssr_entry_namespaceObject","next_edge_app_route_loaderabsolutePagePath_private_next_app_dir_2Fapi_2Fartifacts_2Froute_ts_page_2Fapi_2Fartifacts_2Froute_appDirLoader_bmV4dC1hcHAtbG9hZGVyP25hbWU9YXBwJTJGYXBpJTJGYXJ0aWZhY3RzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZhcnRpZmFjdHMlMkZyb3V0ZSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmFydGlmYWN0cyUyRnJvdXRlLnRzJmFwcERpcj0lMkZWb2x1bWVzJTJGRCUyRmdpdGh1YiUyRkNoYXRHUFQtTmV4dC1XZWIlMkZhcHAmYXBwUGF0aHM9JTJGYXBpJTJGYXJ0aWZhY3RzJTJGcm91dGUmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9c3RhbmRhbG9uZSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEIQ_3D_3D_nextConfigOutput_standalone_preferredRegion_middlewareConfig_e30_3D_","edge_route_module_wrapper","a","wrap","ACCESS_CODES","process","env","CODE","codes","split","filter","v","map","Set","getApiKey","keys","apiKeys","apiKeyEnvVar","randomIndex","Math","floor","random","length","apiKey","Error","disableGPT4","DISABLE_GPT4","customModels","CUSTOM_MODELS","defaultModel","DEFAULT_MODEL","DEFAULT_MODELS","m","name","startsWith","join","isStability","STABILITY_API_KEY","isAzure","AZURE_URL","isGoogle","GOOGLE_API_KEY","isAnthropic","ANTHROPIC_API_KEY","isTencent","TENCENT_API_KEY","isBaidu","BAIDU_API_KEY","isBytedance","BYTEDANCE_API_KEY","isAlibaba","ALIBABA_API_KEY","isMoonshot","MOONSHOT_API_KEY","isIflytek","IFLYTEK_API_KEY","allowedWebDevEndpoints","WHITE_WEBDEV_ENDPOINTS","baseUrl","BASE_URL","OPENAI_API_KEY","openaiOrgId","OPENAI_ORG_ID","stabilityUrl","STABILITY_URL","stabilityApiKey","azureUrl","azureApiKey","AZURE_API_KEY","azureApiVersion","AZURE_API_VERSION","googleApiKey","googleUrl","GOOGLE_URL","anthropicApiKey","anthropicApiVersion","ANTHROPIC_API_VERSION","anthropicUrl","ANTHROPIC_URL","baiduUrl","BAIDU_URL","baiduApiKey","baiduSecretKey","BAIDU_SECRET_KEY","bytedanceApiKey","bytedanceUrl","BYTEDANCE_URL","alibabaUrl","ALIBABA_URL","alibabaApiKey","tencentUrl","TENCENT_URL","tencentSecretKey","TENCENT_SECRET_KEY","tencentSecretId","TENCENT_SECRET_ID","moonshotUrl","MOONSHOT_URL","moonshotApiKey","iflytekUrl","IFLYTEK_URL","iflytekApiKey","iflytekApiSecret","IFLYTEK_API_SECRET","CLOUDFLARE_ACCOUNT_ID","CLOUDFLARE_KV_NAMESPACE_ID","CLOUDFLARE_KV_API_KEY","CLOUDFLARE_KV_TTL","gtmId","GTM_ID","gaId","GA_ID","DEFAULT_GA_ID","needCode","size","proxyUrl","PROXY_URL","isVercel","VERCEL","hideUserApiKey","HIDE_USER_API_KEY","hideBalanceQuery","ENABLE_BALANCE_QUERY","disableFastLink","DISABLE_FAST_LINK","STABILITY_BASE_URL","OPENAI_BASE_URL","ANTHROPIC_BASE_URL","GEMINI_BASE_URL","BAIDU_BASE_URL","BAIDU_OATUH_URL","BYTEDANCE_BASE_URL","ALIBABA_BASE_URL","TENCENT_BASE_URL","MOONSHOT_BASE_URL","IFLYTEK_BASE_URL","Path","ApiPath","SlotID","FileName","Plugin","StoreKey","ACCESS_CODE_PREFIX","STORAGE_KEY","ServiceProvider","GoogleSafetySettingsThreshold","ModelProvider","Anthropic","ChatPath","ChatPath1","ExampleEndpoint","Vision","OpenaiPath","ImagePath","UsagePath","SubsPath","ListModelPath","openaiModels","seq","available","sorted","provider","providerName","providerType","googleModels","anthropicModels","baiduModels","bytedanceModels","alibabaModes","tencentModels","moonshotModes","iflytekModels","internalAllowedWebDavEndpoints"],"sourceRoot":""}
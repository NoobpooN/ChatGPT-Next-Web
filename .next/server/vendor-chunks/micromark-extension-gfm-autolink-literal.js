"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/micromark-extension-gfm-autolink-literal";
exports.ids = ["vendor-chunks/micromark-extension-gfm-autolink-literal"];
exports.modules = {

/***/ "(ssr)/./node_modules/micromark-extension-gfm-autolink-literal/dev/lib/html.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-autolink-literal/dev/lib/html.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   gfmAutolinkLiteralHtml: () => (/* binding */ gfmAutolinkLiteralHtml)\n/* harmony export */ });\n/* harmony import */ var micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-sanitize-uri */ \"(ssr)/./node_modules/micromark-util-sanitize-uri/dev/index.js\");\n/**\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').Handle} Handle\n * @typedef {import('micromark-util-types').CompileContext} CompileContext\n * @typedef {import('micromark-util-types').Token} Token\n */ \n/** @type {HtmlExtension} */ const gfmAutolinkLiteralHtml = {\n    exit: {\n        literalAutolinkEmail,\n        literalAutolinkHttp,\n        literalAutolinkWww\n    }\n};\n/** @type {Handle} */ function literalAutolinkWww(token) {\n    anchorFromToken.call(this, token, \"http://\");\n}\n/** @type {Handle} */ function literalAutolinkEmail(token) {\n    anchorFromToken.call(this, token, \"mailto:\");\n}\n/** @type {Handle} */ function literalAutolinkHttp(token) {\n    anchorFromToken.call(this, token);\n}\n/**\n * @this CompileContext\n * @param {Token} token\n * @param {string} [protocol]\n * @returns {void}\n */ function anchorFromToken(token, protocol) {\n    const url = this.sliceSerialize(token);\n    this.tag('<a href=\"' + (0,micromark_util_sanitize_uri__WEBPACK_IMPORTED_MODULE_0__.sanitizeUri)((protocol || \"\") + url) + '\">');\n    this.raw(this.encode(url));\n    this.tag(\"</a>\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tYXV0b2xpbmstbGl0ZXJhbC9kZXYvbGliL2h0bWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7Q0FLQyxHQUVzRDtBQUV2RCwwQkFBMEIsR0FDbkIsTUFBTUMseUJBQXlCO0lBQ3BDQyxNQUFNO1FBQUNDO1FBQXNCQztRQUFxQkM7SUFBa0I7QUFDdEUsRUFBQztBQUVELG1CQUFtQixHQUNuQixTQUFTQSxtQkFBbUJDLEtBQUs7SUFDL0JDLGdCQUFnQkMsSUFBSSxDQUFDLElBQUksRUFBRUYsT0FBTztBQUNwQztBQUVBLG1CQUFtQixHQUNuQixTQUFTSCxxQkFBcUJHLEtBQUs7SUFDakNDLGdCQUFnQkMsSUFBSSxDQUFDLElBQUksRUFBRUYsT0FBTztBQUNwQztBQUVBLG1CQUFtQixHQUNuQixTQUFTRixvQkFBb0JFLEtBQUs7SUFDaENDLGdCQUFnQkMsSUFBSSxDQUFDLElBQUksRUFBRUY7QUFDN0I7QUFFQTs7Ozs7Q0FLQyxHQUNELFNBQVNDLGdCQUFnQkQsS0FBSyxFQUFFRyxRQUFRO0lBQ3RDLE1BQU1DLE1BQU0sSUFBSSxDQUFDQyxjQUFjLENBQUNMO0lBQ2hDLElBQUksQ0FBQ00sR0FBRyxDQUFDLGNBQWNaLHdFQUFXQSxDQUFDLENBQUNTLFlBQVksRUFBQyxJQUFLQyxPQUFPO0lBQzdELElBQUksQ0FBQ0csR0FBRyxDQUFDLElBQUksQ0FBQ0MsTUFBTSxDQUFDSjtJQUNyQixJQUFJLENBQUNFLEdBQUcsQ0FBQztBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGNoYXQvLi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tYXV0b2xpbmstbGl0ZXJhbC9kZXYvbGliL2h0bWwuanM/NjFmNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuSHRtbEV4dGVuc2lvbn0gSHRtbEV4dGVuc2lvblxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5IYW5kbGV9IEhhbmRsZVxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Db21waWxlQ29udGV4dH0gQ29tcGlsZUNvbnRleHRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW59IFRva2VuXG4gKi9cblxuaW1wb3J0IHtzYW5pdGl6ZVVyaX0gZnJvbSAnbWljcm9tYXJrLXV0aWwtc2FuaXRpemUtdXJpJ1xuXG4vKiogQHR5cGUge0h0bWxFeHRlbnNpb259ICovXG5leHBvcnQgY29uc3QgZ2ZtQXV0b2xpbmtMaXRlcmFsSHRtbCA9IHtcbiAgZXhpdDoge2xpdGVyYWxBdXRvbGlua0VtYWlsLCBsaXRlcmFsQXV0b2xpbmtIdHRwLCBsaXRlcmFsQXV0b2xpbmtXd3d9XG59XG5cbi8qKiBAdHlwZSB7SGFuZGxlfSAqL1xuZnVuY3Rpb24gbGl0ZXJhbEF1dG9saW5rV3d3KHRva2VuKSB7XG4gIGFuY2hvckZyb21Ub2tlbi5jYWxsKHRoaXMsIHRva2VuLCAnaHR0cDovLycpXG59XG5cbi8qKiBAdHlwZSB7SGFuZGxlfSAqL1xuZnVuY3Rpb24gbGl0ZXJhbEF1dG9saW5rRW1haWwodG9rZW4pIHtcbiAgYW5jaG9yRnJvbVRva2VuLmNhbGwodGhpcywgdG9rZW4sICdtYWlsdG86Jylcbn1cblxuLyoqIEB0eXBlIHtIYW5kbGV9ICovXG5mdW5jdGlvbiBsaXRlcmFsQXV0b2xpbmtIdHRwKHRva2VuKSB7XG4gIGFuY2hvckZyb21Ub2tlbi5jYWxsKHRoaXMsIHRva2VuKVxufVxuXG4vKipcbiAqIEB0aGlzIENvbXBpbGVDb250ZXh0XG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICogQHBhcmFtIHtzdHJpbmd9IFtwcm90b2NvbF1cbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5mdW5jdGlvbiBhbmNob3JGcm9tVG9rZW4odG9rZW4sIHByb3RvY29sKSB7XG4gIGNvbnN0IHVybCA9IHRoaXMuc2xpY2VTZXJpYWxpemUodG9rZW4pXG4gIHRoaXMudGFnKCc8YSBocmVmPVwiJyArIHNhbml0aXplVXJpKChwcm90b2NvbCB8fCAnJykgKyB1cmwpICsgJ1wiPicpXG4gIHRoaXMucmF3KHRoaXMuZW5jb2RlKHVybCkpXG4gIHRoaXMudGFnKCc8L2E+Jylcbn1cbiJdLCJuYW1lcyI6WyJzYW5pdGl6ZVVyaSIsImdmbUF1dG9saW5rTGl0ZXJhbEh0bWwiLCJleGl0IiwibGl0ZXJhbEF1dG9saW5rRW1haWwiLCJsaXRlcmFsQXV0b2xpbmtIdHRwIiwibGl0ZXJhbEF1dG9saW5rV3d3IiwidG9rZW4iLCJhbmNob3JGcm9tVG9rZW4iLCJjYWxsIiwicHJvdG9jb2wiLCJ1cmwiLCJzbGljZVNlcmlhbGl6ZSIsInRhZyIsInJhdyIsImVuY29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/micromark-extension-gfm-autolink-literal/dev/lib/html.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/micromark-extension-gfm-autolink-literal/dev/lib/syntax.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/micromark-extension-gfm-autolink-literal/dev/lib/syntax.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   gfmAutolinkLiteral: () => (/* binding */ gfmAutolinkLiteral)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(ssr)/./node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-character */ \"(ssr)/./node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(ssr)/./node_modules/micromark-util-symbol/codes.js\");\n/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */ \n\n\nconst www = {\n    tokenize: tokenizeWww,\n    partial: true\n};\nconst domain = {\n    tokenize: tokenizeDomain,\n    partial: true\n};\nconst path = {\n    tokenize: tokenizePath,\n    partial: true\n};\nconst punctuation = {\n    tokenize: tokenizePunctuation,\n    partial: true\n};\nconst namedCharacterReference = {\n    tokenize: tokenizeNamedCharacterReference,\n    partial: true\n};\nconst wwwAutolink = {\n    tokenize: tokenizeWwwAutolink,\n    previous: previousWww\n};\nconst httpAutolink = {\n    tokenize: tokenizeHttpAutolink,\n    previous: previousHttp\n};\nconst emailAutolink = {\n    tokenize: tokenizeEmailAutolink,\n    previous: previousEmail\n};\n/** @type {ConstructRecord} */ const text = {};\n/** @type {Extension} */ const gfmAutolinkLiteral = {\n    text\n};\nlet code = micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.digit0;\n// Add alphanumerics.\nwhile(code < micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftCurlyBrace){\n    text[code] = emailAutolink;\n    code++;\n    if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.colon) code = micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.uppercaseA;\n    else if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftSquareBracket) code = micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lowercaseA;\n}\ntext[micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.plusSign] = emailAutolink;\ntext[micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash] = emailAutolink;\ntext[micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dot] = emailAutolink;\ntext[micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.underscore] = emailAutolink;\ntext[micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.uppercaseH] = [\n    emailAutolink,\n    httpAutolink\n];\ntext[micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lowercaseH] = [\n    emailAutolink,\n    httpAutolink\n];\ntext[micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.uppercaseW] = [\n    emailAutolink,\n    wwwAutolink\n];\ntext[micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lowercaseW] = [\n    emailAutolink,\n    wwwAutolink\n];\n/** @type {Tokenizer} */ function tokenizeEmailAutolink(effects, ok, nok) {\n    const self = this;\n    /** @type {boolean} */ let hasDot;\n    /** @type {boolean|undefined} */ let hasDigitInLastSegment;\n    return start;\n    /** @type {State} */ function start(code) {\n        if (!gfmAtext(code) || !previousEmail(self.previous) || previousUnbalanced(self.events)) {\n            return nok(code);\n        }\n        effects.enter(\"literalAutolink\");\n        effects.enter(\"literalAutolinkEmail\");\n        return atext(code);\n    }\n    /** @type {State} */ function atext(code) {\n        if (gfmAtext(code)) {\n            effects.consume(code);\n            return atext;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.atSign) {\n            effects.consume(code);\n            return label;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function label(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dot) {\n            return effects.check(punctuation, done, dotContinuation)(code);\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.underscore) {\n            return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code);\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.asciiAlphanumeric)(code)) {\n            if (!hasDigitInLastSegment && (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.asciiDigit)(code)) {\n                hasDigitInLastSegment = true;\n            }\n            effects.consume(code);\n            return label;\n        }\n        return done(code);\n    }\n    /** @type {State} */ function dotContinuation(code) {\n        effects.consume(code);\n        hasDot = true;\n        hasDigitInLastSegment = undefined;\n        return label;\n    }\n    /** @type {State} */ function dashOrUnderscoreContinuation(code) {\n        effects.consume(code);\n        return afterDashOrUnderscore;\n    }\n    /** @type {State} */ function afterDashOrUnderscore(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dot) {\n            return effects.check(punctuation, nok, dotContinuation)(code);\n        }\n        return label(code);\n    }\n    /** @type {State} */ function done(code) {\n        if (hasDot && !hasDigitInLastSegment) {\n            effects.exit(\"literalAutolinkEmail\");\n            effects.exit(\"literalAutolink\");\n            return ok(code);\n        }\n        return nok(code);\n    }\n}\n/** @type {Tokenizer} */ function tokenizeWwwAutolink(effects, ok, nok) {\n    const self = this;\n    return start;\n    /** @type {State} */ function start(code) {\n        if (code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.uppercaseW && code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lowercaseW || !previousWww(self.previous) || previousUnbalanced(self.events)) {\n            return nok(code);\n        }\n        effects.enter(\"literalAutolink\");\n        effects.enter(\"literalAutolinkWww\");\n        // For `www.` we check instead of attempt, because when it matches, GH\n        // treats it as part of a domain (yes, it says a valid domain must come\n        // after `www.`, but that’s not how it’s implemented by them).\n        return effects.check(www, effects.attempt(domain, effects.attempt(path, done), nok), nok)(code);\n    }\n    /** @type {State} */ function done(code) {\n        effects.exit(\"literalAutolinkWww\");\n        effects.exit(\"literalAutolink\");\n        return ok(code);\n    }\n}\n/** @type {Tokenizer} */ function tokenizeHttpAutolink(effects, ok, nok) {\n    const self = this;\n    return start;\n    /** @type {State} */ function start(code) {\n        if (code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.uppercaseH && code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lowercaseH || !previousHttp(self.previous) || previousUnbalanced(self.events)) {\n            return nok(code);\n        }\n        effects.enter(\"literalAutolink\");\n        effects.enter(\"literalAutolinkHttp\");\n        effects.consume(code);\n        return t1;\n    }\n    /** @type {State} */ function t1(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.uppercaseT || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lowercaseT) {\n            effects.consume(code);\n            return t2;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function t2(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.uppercaseT || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lowercaseT) {\n            effects.consume(code);\n            return p;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function p(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.uppercaseP || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lowercaseP) {\n            effects.consume(code);\n            return s;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function s(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.uppercaseS || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lowercaseS) {\n            effects.consume(code);\n            return colon;\n        }\n        return colon(code);\n    }\n    /** @type {State} */ function colon(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.colon) {\n            effects.consume(code);\n            return slash1;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function slash1(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.slash) {\n            effects.consume(code);\n            return slash2;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function slash2(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.slash) {\n            effects.consume(code);\n            return after;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function after(code) {\n        return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.asciiControl)(code) || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.unicodeWhitespace)(code) || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.unicodePunctuation)(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, done), nok)(code);\n    }\n    /** @type {State} */ function done(code) {\n        effects.exit(\"literalAutolinkHttp\");\n        effects.exit(\"literalAutolink\");\n        return ok(code);\n    }\n}\n/** @type {Tokenizer} */ function tokenizeWww(effects, ok, nok) {\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.uppercaseW || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lowercaseW, \"expected `w`\");\n        effects.consume(code);\n        return w2;\n    }\n    /** @type {State} */ function w2(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.uppercaseW || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lowercaseW) {\n            effects.consume(code);\n            return w3;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function w3(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.uppercaseW || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lowercaseW) {\n            effects.consume(code);\n            return dot;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function dot(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dot) {\n            effects.consume(code);\n            return after;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function after(code) {\n        return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.markdownLineEnding)(code) ? nok(code) : ok(code);\n    }\n}\n/** @type {Tokenizer} */ function tokenizeDomain(effects, ok, nok) {\n    /** @type {boolean|undefined} */ let hasUnderscoreInLastSegment;\n    /** @type {boolean|undefined} */ let hasUnderscoreInLastLastSegment;\n    return domain;\n    /** @type {State} */ function domain(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.ampersand) {\n            return effects.check(namedCharacterReference, done, punctuationContinuation)(code);\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dot || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.underscore) {\n            return effects.check(punctuation, done, punctuationContinuation)(code);\n        }\n        // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n        // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n        // so that’s Unicode.\n        // Instead of some new production for Unicode alphanumerics, markdown\n        // already has that for Unicode punctuation and whitespace, so use those.\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.asciiControl)(code) || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.unicodeWhitespace)(code) || code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash && (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.unicodePunctuation)(code)) {\n            return done(code);\n        }\n        effects.consume(code);\n        return domain;\n    }\n    /** @type {State} */ function punctuationContinuation(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dot) {\n            hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment;\n            hasUnderscoreInLastSegment = undefined;\n            effects.consume(code);\n            return domain;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.underscore) hasUnderscoreInLastSegment = true;\n        effects.consume(code);\n        return domain;\n    }\n    /** @type {State} */ function done(code) {\n        if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n            return ok(code);\n        }\n        return nok(code);\n    }\n}\n/** @type {Tokenizer} */ function tokenizePath(effects, ok) {\n    let balance = 0;\n    return inPath;\n    /** @type {State} */ function inPath(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.ampersand) {\n            return effects.check(namedCharacterReference, ok, continuedPunctuation)(code);\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftParenthesis) {\n            balance++;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightParenthesis) {\n            return effects.check(punctuation, parenAtPathEnd, continuedPunctuation)(code);\n        }\n        if (pathEnd(code)) {\n            return ok(code);\n        }\n        if (trailingPunctuation(code)) {\n            return effects.check(punctuation, ok, continuedPunctuation)(code);\n        }\n        effects.consume(code);\n        return inPath;\n    }\n    /** @type {State} */ function continuedPunctuation(code) {\n        effects.consume(code);\n        return inPath;\n    }\n    /** @type {State} */ function parenAtPathEnd(code) {\n        balance--;\n        return balance < 0 ? ok(code) : continuedPunctuation(code);\n    }\n}\n/** @type {Tokenizer} */ function tokenizeNamedCharacterReference(effects, ok, nok) {\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.ampersand, \"expected `&`\");\n        effects.consume(code);\n        return inside;\n    }\n    /** @type {State} */ function inside(code) {\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.asciiAlpha)(code)) {\n            effects.consume(code);\n            return inside;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.semicolon) {\n            effects.consume(code);\n            return after;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function after(code) {\n        // If the named character reference is followed by the end of the path, it’s\n        // not continued punctuation.\n        return pathEnd(code) ? ok(code) : nok(code);\n    }\n}\n/** @type {Tokenizer} */ function tokenizePunctuation(effects, ok, nok) {\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash || trailingPunctuation(code), \"expected punctuation\");\n        effects.consume(code);\n        return after;\n    }\n    /** @type {State} */ function after(code) {\n        // Check the next.\n        if (trailingPunctuation(code)) {\n            effects.consume(code);\n            return after;\n        }\n        // If the punctuation marker is followed by the end of the path, it’s not\n        // continued punctuation.\n        return pathEnd(code) ? ok(code) : nok(code);\n    }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */ function trailingPunctuation(code) {\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.exclamationMark || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.quotationMark || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.apostrophe || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightParenthesis || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.asterisk || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.comma || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dot || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.colon || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.semicolon || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lessThan || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.questionMark || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.underscore || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.tilde;\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */ function pathEnd(code) {\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lessThan || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.markdownLineEndingOrSpace)(code);\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */ function gfmAtext(code) {\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.plusSign || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dot || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.underscore || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.asciiAlphanumeric)(code);\n}\n/** @type {Previous} */ function previousWww(code) {\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftParenthesis || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.asterisk || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.underscore || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.tilde || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.markdownLineEndingOrSpace)(code);\n}\n/** @type {Previous} */ function previousHttp(code) {\n    return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || !(0,micromark_util_character__WEBPACK_IMPORTED_MODULE_2__.asciiAlpha)(code);\n}\n/** @type {Previous} */ function previousEmail(code) {\n    return code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.slash && previousHttp(code);\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */ function previousUnbalanced(events) {\n    let index = events.length;\n    let result = false;\n    while(index--){\n        const token = events[index][1];\n        if ((token.type === \"labelLink\" || token.type === \"labelImage\") && !token._balanced) {\n            result = true;\n            break;\n        }\n        // @ts-expect-error If we’ve seen this token, and it was marked as not\n        // having any unbalanced bracket before it, we can exit.\n        if (token._gfmAutolinkLiteralWalkedInto) {\n            result = false;\n            break;\n        }\n    }\n    if (events.length > 0 && !result) {\n        // @ts-expect-error Mark the last token as “walked into” w/o finding\n        // anything.\n        events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/micromark-extension-gfm-autolink-literal/dev/lib/syntax.js\n");

/***/ })

};
;
"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/hast-util-from-html";
exports.ids = ["vendor-chunks/hast-util-from-html"];
exports.modules = {

/***/ "(ssr)/./node_modules/hast-util-from-html/lib/errors.js":
/*!********************************************************!*\
  !*** ./node_modules/hast-util-from-html/lib/errors.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   errors: () => (/* binding */ errors)\n/* harmony export */ });\nconst errors = {\n    abandonedHeadElementChild: {\n        reason: \"Unexpected metadata element after head\",\n        description: \"Unexpected element after head. Expected the element before `</head>`\",\n        url: false\n    },\n    abruptClosingOfEmptyComment: {\n        reason: \"Unexpected abruptly closed empty comment\",\n        description: \"Unexpected `>` or `->`. Expected `-->` to close comments\"\n    },\n    abruptDoctypePublicIdentifier: {\n        reason: \"Unexpected abruptly closed public identifier\",\n        description: \"Unexpected `>`. Expected a closing `\\\"` or `'` after the public identifier\"\n    },\n    abruptDoctypeSystemIdentifier: {\n        reason: \"Unexpected abruptly closed system identifier\",\n        description: \"Unexpected `>`. Expected a closing `\\\"` or `'` after the identifier identifier\"\n    },\n    absenceOfDigitsInNumericCharacterReference: {\n        reason: \"Unexpected non-digit at start of numeric character reference\",\n        description: \"Unexpected `%c`. Expected `[0-9]` for decimal references or `[0-9a-fA-F]` for hexadecimal references\"\n    },\n    cdataInHtmlContent: {\n        reason: \"Unexpected CDATA section in HTML\",\n        description: \"Unexpected `<![CDATA[` in HTML. Remove it, use a comment, or encode special characters instead\"\n    },\n    characterReferenceOutsideUnicodeRange: {\n        reason: \"Unexpected too big numeric character reference\",\n        description: \"Unexpectedly high character reference. Expected character references to be at most hexadecimal 10ffff (or decimal 1114111)\"\n    },\n    closingOfElementWithOpenChildElements: {\n        reason: \"Unexpected closing tag with open child elements\",\n        description: \"Unexpectedly closing tag. Expected other tags to be closed first\",\n        url: false\n    },\n    controlCharacterInInputStream: {\n        reason: \"Unexpected control character\",\n        description: \"Unexpected control character `%x`. Expected a non-control code point, 0x00, or ASCII whitespace\"\n    },\n    controlCharacterReference: {\n        reason: \"Unexpected control character reference\",\n        description: \"Unexpectedly control character in reference. Expected a non-control code point, 0x00, or ASCII whitespace\"\n    },\n    disallowedContentInNoscriptInHead: {\n        reason: \"Disallowed content inside `<noscript>` in `<head>`\",\n        description: \"Unexpected text character `%c`. Only use text in `<noscript>`s in `<body>`\",\n        url: false\n    },\n    duplicateAttribute: {\n        reason: \"Unexpected duplicate attribute\",\n        description: \"Unexpectedly double attribute. Expected attributes to occur only once\"\n    },\n    endTagWithAttributes: {\n        reason: \"Unexpected attribute on closing tag\",\n        description: \"Unexpected attribute. Expected `>` instead\"\n    },\n    endTagWithTrailingSolidus: {\n        reason: \"Unexpected slash at end of closing tag\",\n        description: \"Unexpected `%c-1`. Expected `>` instead\"\n    },\n    endTagWithoutMatchingOpenElement: {\n        reason: \"Unexpected unopened end tag\",\n        description: \"Unexpected end tag. Expected no end tag or another end tag\",\n        url: false\n    },\n    eofBeforeTagName: {\n        reason: \"Unexpected end of file\",\n        description: \"Unexpected end of file. Expected tag name instead\"\n    },\n    eofInCdata: {\n        reason: \"Unexpected end of file in CDATA\",\n        description: \"Unexpected end of file. Expected `]]>` to close the CDATA\"\n    },\n    eofInComment: {\n        reason: \"Unexpected end of file in comment\",\n        description: \"Unexpected end of file. Expected `-->` to close the comment\"\n    },\n    eofInDoctype: {\n        reason: \"Unexpected end of file in doctype\",\n        description: \"Unexpected end of file. Expected a valid doctype (such as `<!doctype html>`)\"\n    },\n    eofInElementThatCanContainOnlyText: {\n        reason: \"Unexpected end of file in element that can only contain text\",\n        description: \"Unexpected end of file. Expected text or a closing tag\",\n        url: false\n    },\n    eofInScriptHtmlCommentLikeText: {\n        reason: \"Unexpected end of file in comment inside script\",\n        description: \"Unexpected end of file. Expected `-->` to close the comment\"\n    },\n    eofInTag: {\n        reason: \"Unexpected end of file in tag\",\n        description: \"Unexpected end of file. Expected `>` to close the tag\"\n    },\n    incorrectlyClosedComment: {\n        reason: \"Incorrectly closed comment\",\n        description: \"Unexpected `%c-1`. Expected `-->` to close the comment\"\n    },\n    incorrectlyOpenedComment: {\n        reason: \"Incorrectly opened comment\",\n        description: \"Unexpected `%c`. Expected `<!--` to open the comment\"\n    },\n    invalidCharacterSequenceAfterDoctypeName: {\n        reason: \"Invalid sequence after doctype name\",\n        description: \"Unexpected sequence at `%c`. Expected `public` or `system`\"\n    },\n    invalidFirstCharacterOfTagName: {\n        reason: \"Invalid first character in tag name\",\n        description: \"Unexpected `%c`. Expected an ASCII letter instead\"\n    },\n    misplacedDoctype: {\n        reason: \"Misplaced doctype\",\n        description: \"Unexpected doctype. Expected doctype before head\",\n        url: false\n    },\n    misplacedStartTagForHeadElement: {\n        reason: \"Misplaced `<head>` start tag\",\n        description: \"Unexpected start tag `<head>`. Expected `<head>` directly after doctype\",\n        url: false\n    },\n    missingAttributeValue: {\n        reason: \"Missing attribute value\",\n        description: \"Unexpected `%c-1`. Expected an attribute value or no `%c-1` instead\"\n    },\n    missingDoctype: {\n        reason: \"Missing doctype before other content\",\n        description: \"Expected a `<!doctype html>` before anything else\",\n        url: false\n    },\n    missingDoctypeName: {\n        reason: \"Missing doctype name\",\n        description: \"Unexpected doctype end at `%c`. Expected `html` instead\"\n    },\n    missingDoctypePublicIdentifier: {\n        reason: \"Missing public identifier in doctype\",\n        description: \"Unexpected `%c`. Expected identifier for `public` instead\"\n    },\n    missingDoctypeSystemIdentifier: {\n        reason: \"Missing system identifier in doctype\",\n        description: 'Unexpected `%c`. Expected identifier for `system` instead (suggested: `\"about:legacy-compat\"`)'\n    },\n    missingEndTagName: {\n        reason: \"Missing name in end tag\",\n        description: \"Unexpected `%c`. Expected an ASCII letter instead\"\n    },\n    missingQuoteBeforeDoctypePublicIdentifier: {\n        reason: \"Missing quote before public identifier in doctype\",\n        description: \"Unexpected `%c`. Expected `\\\"` or `'` instead\"\n    },\n    missingQuoteBeforeDoctypeSystemIdentifier: {\n        reason: \"Missing quote before system identifier in doctype\",\n        description: \"Unexpected `%c`. Expected `\\\"` or `'` instead\"\n    },\n    missingSemicolonAfterCharacterReference: {\n        reason: \"Missing semicolon after character reference\",\n        description: \"Unexpected `%c`. Expected `;` instead\"\n    },\n    missingWhitespaceAfterDoctypePublicKeyword: {\n        reason: \"Missing whitespace after public identifier in doctype\",\n        description: \"Unexpected `%c`. Expected ASCII whitespace instead\"\n    },\n    missingWhitespaceAfterDoctypeSystemKeyword: {\n        reason: \"Missing whitespace after system identifier in doctype\",\n        description: \"Unexpected `%c`. Expected ASCII whitespace instead\"\n    },\n    missingWhitespaceBeforeDoctypeName: {\n        reason: \"Missing whitespace before doctype name\",\n        description: \"Unexpected `%c`. Expected ASCII whitespace instead\"\n    },\n    missingWhitespaceBetweenAttributes: {\n        reason: \"Missing whitespace between attributes\",\n        description: \"Unexpected `%c`. Expected ASCII whitespace instead\"\n    },\n    missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: {\n        reason: \"Missing whitespace between public and system identifiers in doctype\",\n        description: \"Unexpected `%c`. Expected ASCII whitespace instead\"\n    },\n    nestedComment: {\n        reason: \"Unexpected nested comment\",\n        description: \"Unexpected `<!--`. Expected `-->`\"\n    },\n    nestedNoscriptInHead: {\n        reason: \"Unexpected nested `<noscript>` in `<head>`\",\n        description: \"Unexpected `<noscript>`. Expected a closing tag or a meta element\",\n        url: false\n    },\n    nonConformingDoctype: {\n        reason: \"Unexpected non-conforming doctype declaration\",\n        description: 'Expected `<!doctype html>` or `<!doctype html system \"about:legacy-compat\">`',\n        url: false\n    },\n    nonVoidHtmlElementStartTagWithTrailingSolidus: {\n        reason: \"Unexpected trailing slash on start tag of non-void element\",\n        description: \"Unexpected `/`. Expected `>` instead\"\n    },\n    noncharacterCharacterReference: {\n        reason: \"Unexpected noncharacter code point referenced by character reference\",\n        description: \"Unexpected code point. Do not use noncharacters in HTML\"\n    },\n    noncharacterInInputStream: {\n        reason: \"Unexpected noncharacter character\",\n        description: \"Unexpected code point `%x`. Do not use noncharacters in HTML\"\n    },\n    nullCharacterReference: {\n        reason: \"Unexpected NULL character referenced by character reference\",\n        description: \"Unexpected code point. Do not use NULL characters in HTML\"\n    },\n    openElementsLeftAfterEof: {\n        reason: \"Unexpected end of file\",\n        description: \"Unexpected end of file. Expected closing tag instead\",\n        url: false\n    },\n    surrogateCharacterReference: {\n        reason: \"Unexpected surrogate character referenced by character reference\",\n        description: \"Unexpected code point. Do not use lone surrogate characters in HTML\"\n    },\n    surrogateInInputStream: {\n        reason: \"Unexpected surrogate character\",\n        description: \"Unexpected code point `%x`. Do not use lone surrogate characters in HTML\"\n    },\n    unexpectedCharacterAfterDoctypeSystemIdentifier: {\n        reason: \"Invalid character after system identifier in doctype\",\n        description: \"Unexpected character at `%c`. Expected `>`\"\n    },\n    unexpectedCharacterInAttributeName: {\n        reason: \"Unexpected character in attribute name\",\n        description: \"Unexpected `%c`. Expected whitespace, `/`, `>`, `=`, or probably an ASCII letter\"\n    },\n    unexpectedCharacterInUnquotedAttributeValue: {\n        reason: \"Unexpected character in unquoted attribute value\",\n        description: \"Unexpected `%c`. Quote the attribute value to include it\"\n    },\n    unexpectedEqualsSignBeforeAttributeName: {\n        reason: \"Unexpected equals sign before attribute name\",\n        description: \"Unexpected `%c`. Add an attribute name before it\"\n    },\n    unexpectedNullCharacter: {\n        reason: \"Unexpected NULL character\",\n        description: \"Unexpected code point `%x`. Do not use NULL characters in HTML\"\n    },\n    unexpectedQuestionMarkInsteadOfTagName: {\n        reason: \"Unexpected question mark instead of tag name\",\n        description: \"Unexpected `%c`. Expected an ASCII letter instead\"\n    },\n    unexpectedSolidusInTag: {\n        reason: \"Unexpected slash in tag\",\n        description: \"Unexpected `%c-1`. Expected it followed by `>` or in a quoted attribute value\"\n    },\n    unknownNamedCharacterReference: {\n        reason: \"Unexpected unknown named character reference\",\n        description: \"Unexpected character reference. Expected known named character references\"\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-from-html/lib/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-from-html/lib/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/hast-util-from-html/lib/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromHtml: () => (/* binding */ fromHtml)\n/* harmony export */ });\n/* harmony import */ var parse5__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! parse5 */ \"(ssr)/./node_modules/parse5/dist/index.js\");\n/* harmony import */ var vfile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vfile */ \"(ssr)/./node_modules/vfile/lib/index.js\");\n/* harmony import */ var vfile_message__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vfile-message */ \"(ssr)/./node_modules/vfile-message/lib/index.js\");\n/* harmony import */ var hast_util_from_parse5__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hast-util-from-parse5 */ \"(ssr)/./node_modules/hast-util-from-parse5/lib/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/./node_modules/hast-util-from-html/lib/errors.js\");\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n */ /**\n * @typedef {Pick<import('hast-util-from-parse5').Options, 'space' | 'verbose'>} FromParse5Options\n *\n * @typedef {keyof errors} ErrorCode\n *   Known names of parse errors.\n * @typedef {0 | 1 | 2 | boolean} ErrorSeverity\n *   Error severity:\n *\n *   * `0` or `false`\n *     — turn the parse error off\n *   * `1` or `true`\n *     — turn the parse error into a warning\n *   * `2`\n *     — turn the parse error into an actual error: processing stops.\n * @typedef {Partial<Record<ErrorCode, ErrorSeverity | null | undefined>>} ErrorFields\n *   Error configuration.\n *\n * @typedef Error\n *   Error from `parse5`.\n * @property {string} code\n * @property {number} startLine\n * @property {number} startCol\n * @property {number} startOffset\n * @property {number} endLine\n * @property {number} endCol\n * @property {number} endOffset\n *\n * @callback OnError\n *   Handle errors.\n * @param {VFileMessage} error\n *   Message.\n * @returns {void}\n *   Nothing.\n *\n * @typedef ParseFields\n * @property {boolean | null | undefined} [fragment=false]\n *   Specify whether to parse a fragment, instead of a complete document.\n *\n *   In document mode, unopened `html`, `head`, and `body` elements are opened\n *   in just the right places.\n * @property {OnError | null | undefined} [onerror]\n *   Call `onerror` with parse errors while parsing.\n *\n *   > 👉 **Note**: parse errors are currently being added to HTML.\n *   > Not all errors emitted by parse5 (or us) are specced yet.\n *   > Some documentation may still be missing.\n *\n *   Specific rules can be turned off by setting them to `false` (or `0`).\n *   The default, when `emitParseErrors: true`, is `true` (or `1`), and means\n *   that rules emit as warnings.\n *   Rules can also be configured with `2`, to turn them into fatal errors.\n *\n * @typedef {FromParse5Options & ParseFields & ErrorFields} Options\n *   Configuration.\n */ \n\n\n\n\nconst base = \"https://html.spec.whatwg.org/multipage/parsing.html#parse-error-\";\nconst fatalities = {\n    2: true,\n    1: false,\n    0: null\n};\n/**\n * Turn serialized HTML into a hast tree.\n *\n * @param {VFileCompatible} value\n *   Serialized HTML to parse.\n * @param {Options | null | undefined} [options={}]\n *   Configuration (optional).\n * @returns {Root}\n *   Tree.\n */ function fromHtml(value, options) {\n    const settings = options || {};\n    const warn = settings.onerror || null;\n    const file = value instanceof vfile__WEBPACK_IMPORTED_MODULE_1__.VFile ? value : new vfile__WEBPACK_IMPORTED_MODULE_1__.VFile(value);\n    const fn = settings.fragment ? parse5__WEBPACK_IMPORTED_MODULE_0__.parseFragment : parse5__WEBPACK_IMPORTED_MODULE_0__.parse;\n    const doc = String(file);\n    const p5doc = fn(doc, {\n        sourceCodeLocationInfo: true,\n        onParseError: settings.onerror ? onerror : null,\n        scriptingEnabled: false\n    });\n    // @ts-expect-error: `parse5` returns document or fragment, which are always\n    // mapped to roots.\n    return (0,hast_util_from_parse5__WEBPACK_IMPORTED_MODULE_2__.fromParse5)(p5doc, {\n        file,\n        space: settings.space,\n        verbose: settings.verbose\n    });\n    /**\n   * @param {Error} error\n   */ function onerror(error) {\n        const code = error.code;\n        const name = camelcase(code);\n        const setting = settings[name];\n        const config = setting === undefined || setting === null ? true : setting;\n        const level = typeof config === \"number\" ? config : config ? 1 : 0;\n        const start = {\n            line: error.startLine,\n            column: error.startCol,\n            offset: error.startOffset\n        };\n        const end = {\n            line: error.endLine,\n            column: error.endCol,\n            offset: error.endOffset\n        };\n        if (level) {\n            /* c8 ignore next */ const info = _errors_js__WEBPACK_IMPORTED_MODULE_3__.errors[name] || {\n                reason: \"\",\n                description: \"\",\n                url: \"\"\n            };\n            const message = new vfile_message__WEBPACK_IMPORTED_MODULE_4__.VFileMessage(format(info.reason), {\n                start,\n                end\n            });\n            if (file.path) {\n                message.name = file.path + \":\" + message.name;\n                message.file = file.path;\n            }\n            message.source = \"parse-error\";\n            message.ruleId = code;\n            message.fatal = fatalities[level];\n            message.note = format(info.description);\n            message.url = \"url\" in info && info.url === false ? null : base + code;\n            // @ts-expect-error: `onerror` is not passed if `warn` is not set.\n            warn(message);\n        }\n        /**\n     * @param {string} value\n     * @returns {string}\n     */ function format(value) {\n            return value.replace(/%c(?:([-+])(\\d+))?/g, (_, /** @type {string} */ $1, /** @type {string} */ $2)=>{\n                const offset = ($2 ? Number.parseInt($2, 10) : 0) * ($1 === \"-\" ? -1 : 1);\n                const char = doc.charAt(error.startOffset + offset);\n                return char === \"`\" ? \"` ` `\" : char;\n            }).replace(/%x/g, ()=>\"0x\" + doc.charCodeAt(error.startOffset).toString(16).toUpperCase());\n        }\n    }\n}\n/**\n * @param {string} value\n * @returns {ErrorCode}\n */ function camelcase(value) {\n    // @ts-expect-error: fine.\n    return value.replace(/-[a-z]/g, ($0)=>$0.charAt(1).toUpperCase());\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-from-html/lib/index.js\n");

/***/ })

};
;
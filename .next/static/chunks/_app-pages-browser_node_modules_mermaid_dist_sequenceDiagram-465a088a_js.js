"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_mermaid_dist_sequenceDiagram-465a088a_js"],{

/***/ "(app-pages-browser)/./node_modules/mermaid/dist/sequenceDiagram-465a088a.js":
/*!***************************************************************!*\
  !*** ./node_modules/mermaid/dist/sequenceDiagram-465a088a.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   diagram: function() { return /* binding */ diagram; }\n/* harmony export */ });\n/* harmony import */ var _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mermaid-934d9bea.js */ \"(app-pages-browser)/./node_modules/mermaid/dist/mermaid-934d9bea.js\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ \"(app-pages-browser)/./node_modules/d3/src/index.js\");\n/* harmony import */ var _svgDrawCommon_ad5ef572_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./svgDrawCommon-ad5ef572.js */ \"(app-pages-browser)/./node_modules/mermaid/dist/svgDrawCommon-ad5ef572.js\");\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(app-pages-browser)/./node_modules/@braintree/sanitize-url/dist/index.js\");\n/* harmony import */ var ts_dedent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ts-dedent */ \"(app-pages-browser)/./node_modules/ts-dedent/esm/index.js\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! dayjs */ \"(app-pages-browser)/./node_modules/dayjs/dayjs.min.js\");\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! dompurify */ \"(app-pages-browser)/./node_modules/dompurify/dist/purify.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nvar parser = function() {\n    var o = function(k, v, o2, l) {\n        for(o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v);\n        return o2;\n    }, $V0 = [\n        1,\n        2\n    ], $V1 = [\n        1,\n        3\n    ], $V2 = [\n        1,\n        4\n    ], $V3 = [\n        2,\n        4\n    ], $V4 = [\n        1,\n        9\n    ], $V5 = [\n        1,\n        11\n    ], $V6 = [\n        1,\n        13\n    ], $V7 = [\n        1,\n        14\n    ], $V8 = [\n        1,\n        16\n    ], $V9 = [\n        1,\n        17\n    ], $Va = [\n        1,\n        18\n    ], $Vb = [\n        1,\n        24\n    ], $Vc = [\n        1,\n        25\n    ], $Vd = [\n        1,\n        26\n    ], $Ve = [\n        1,\n        27\n    ], $Vf = [\n        1,\n        28\n    ], $Vg = [\n        1,\n        29\n    ], $Vh = [\n        1,\n        30\n    ], $Vi = [\n        1,\n        31\n    ], $Vj = [\n        1,\n        32\n    ], $Vk = [\n        1,\n        33\n    ], $Vl = [\n        1,\n        34\n    ], $Vm = [\n        1,\n        35\n    ], $Vn = [\n        1,\n        36\n    ], $Vo = [\n        1,\n        37\n    ], $Vp = [\n        1,\n        38\n    ], $Vq = [\n        1,\n        39\n    ], $Vr = [\n        1,\n        41\n    ], $Vs = [\n        1,\n        42\n    ], $Vt = [\n        1,\n        43\n    ], $Vu = [\n        1,\n        44\n    ], $Vv = [\n        1,\n        45\n    ], $Vw = [\n        1,\n        46\n    ], $Vx = [\n        1,\n        4,\n        5,\n        13,\n        14,\n        16,\n        18,\n        21,\n        23,\n        29,\n        30,\n        31,\n        33,\n        35,\n        36,\n        37,\n        38,\n        39,\n        41,\n        43,\n        44,\n        46,\n        47,\n        48,\n        49,\n        50,\n        52,\n        53,\n        54,\n        59,\n        60,\n        61,\n        62,\n        70\n    ], $Vy = [\n        4,\n        5,\n        16,\n        50,\n        52,\n        53\n    ], $Vz = [\n        4,\n        5,\n        13,\n        14,\n        16,\n        18,\n        21,\n        23,\n        29,\n        30,\n        31,\n        33,\n        35,\n        36,\n        37,\n        38,\n        39,\n        41,\n        43,\n        44,\n        46,\n        50,\n        52,\n        53,\n        54,\n        59,\n        60,\n        61,\n        62,\n        70\n    ], $VA = [\n        4,\n        5,\n        13,\n        14,\n        16,\n        18,\n        21,\n        23,\n        29,\n        30,\n        31,\n        33,\n        35,\n        36,\n        37,\n        38,\n        39,\n        41,\n        43,\n        44,\n        46,\n        49,\n        50,\n        52,\n        53,\n        54,\n        59,\n        60,\n        61,\n        62,\n        70\n    ], $VB = [\n        4,\n        5,\n        13,\n        14,\n        16,\n        18,\n        21,\n        23,\n        29,\n        30,\n        31,\n        33,\n        35,\n        36,\n        37,\n        38,\n        39,\n        41,\n        43,\n        44,\n        46,\n        48,\n        50,\n        52,\n        53,\n        54,\n        59,\n        60,\n        61,\n        62,\n        70\n    ], $VC = [\n        4,\n        5,\n        13,\n        14,\n        16,\n        18,\n        21,\n        23,\n        29,\n        30,\n        31,\n        33,\n        35,\n        36,\n        37,\n        38,\n        39,\n        41,\n        43,\n        44,\n        46,\n        47,\n        50,\n        52,\n        53,\n        54,\n        59,\n        60,\n        61,\n        62,\n        70\n    ], $VD = [\n        68,\n        69,\n        70\n    ], $VE = [\n        1,\n        120\n    ];\n    var parser2 = {\n        trace: function trace() {},\n        yy: {},\n        symbols_: {\n            \"error\": 2,\n            \"start\": 3,\n            \"SPACE\": 4,\n            \"NEWLINE\": 5,\n            \"SD\": 6,\n            \"document\": 7,\n            \"line\": 8,\n            \"statement\": 9,\n            \"box_section\": 10,\n            \"box_line\": 11,\n            \"participant_statement\": 12,\n            \"create\": 13,\n            \"box\": 14,\n            \"restOfLine\": 15,\n            \"end\": 16,\n            \"signal\": 17,\n            \"autonumber\": 18,\n            \"NUM\": 19,\n            \"off\": 20,\n            \"activate\": 21,\n            \"actor\": 22,\n            \"deactivate\": 23,\n            \"note_statement\": 24,\n            \"links_statement\": 25,\n            \"link_statement\": 26,\n            \"properties_statement\": 27,\n            \"details_statement\": 28,\n            \"title\": 29,\n            \"legacy_title\": 30,\n            \"acc_title\": 31,\n            \"acc_title_value\": 32,\n            \"acc_descr\": 33,\n            \"acc_descr_value\": 34,\n            \"acc_descr_multiline_value\": 35,\n            \"loop\": 36,\n            \"rect\": 37,\n            \"opt\": 38,\n            \"alt\": 39,\n            \"else_sections\": 40,\n            \"par\": 41,\n            \"par_sections\": 42,\n            \"par_over\": 43,\n            \"critical\": 44,\n            \"option_sections\": 45,\n            \"break\": 46,\n            \"option\": 47,\n            \"and\": 48,\n            \"else\": 49,\n            \"participant\": 50,\n            \"AS\": 51,\n            \"participant_actor\": 52,\n            \"destroy\": 53,\n            \"note\": 54,\n            \"placement\": 55,\n            \"text2\": 56,\n            \"over\": 57,\n            \"actor_pair\": 58,\n            \"links\": 59,\n            \"link\": 60,\n            \"properties\": 61,\n            \"details\": 62,\n            \"spaceList\": 63,\n            \",\": 64,\n            \"left_of\": 65,\n            \"right_of\": 66,\n            \"signaltype\": 67,\n            \"+\": 68,\n            \"-\": 69,\n            \"ACTOR\": 70,\n            \"SOLID_OPEN_ARROW\": 71,\n            \"DOTTED_OPEN_ARROW\": 72,\n            \"SOLID_ARROW\": 73,\n            \"DOTTED_ARROW\": 74,\n            \"SOLID_CROSS\": 75,\n            \"DOTTED_CROSS\": 76,\n            \"SOLID_POINT\": 77,\n            \"DOTTED_POINT\": 78,\n            \"TXT\": 79,\n            \"$accept\": 0,\n            \"$end\": 1\n        },\n        terminals_: {\n            2: \"error\",\n            4: \"SPACE\",\n            5: \"NEWLINE\",\n            6: \"SD\",\n            13: \"create\",\n            14: \"box\",\n            15: \"restOfLine\",\n            16: \"end\",\n            18: \"autonumber\",\n            19: \"NUM\",\n            20: \"off\",\n            21: \"activate\",\n            23: \"deactivate\",\n            29: \"title\",\n            30: \"legacy_title\",\n            31: \"acc_title\",\n            32: \"acc_title_value\",\n            33: \"acc_descr\",\n            34: \"acc_descr_value\",\n            35: \"acc_descr_multiline_value\",\n            36: \"loop\",\n            37: \"rect\",\n            38: \"opt\",\n            39: \"alt\",\n            41: \"par\",\n            43: \"par_over\",\n            44: \"critical\",\n            46: \"break\",\n            47: \"option\",\n            48: \"and\",\n            49: \"else\",\n            50: \"participant\",\n            51: \"AS\",\n            52: \"participant_actor\",\n            53: \"destroy\",\n            54: \"note\",\n            57: \"over\",\n            59: \"links\",\n            60: \"link\",\n            61: \"properties\",\n            62: \"details\",\n            64: \",\",\n            65: \"left_of\",\n            66: \"right_of\",\n            68: \"+\",\n            69: \"-\",\n            70: \"ACTOR\",\n            71: \"SOLID_OPEN_ARROW\",\n            72: \"DOTTED_OPEN_ARROW\",\n            73: \"SOLID_ARROW\",\n            74: \"DOTTED_ARROW\",\n            75: \"SOLID_CROSS\",\n            76: \"DOTTED_CROSS\",\n            77: \"SOLID_POINT\",\n            78: \"DOTTED_POINT\",\n            79: \"TXT\"\n        },\n        productions_: [\n            0,\n            [\n                3,\n                2\n            ],\n            [\n                3,\n                2\n            ],\n            [\n                3,\n                2\n            ],\n            [\n                7,\n                0\n            ],\n            [\n                7,\n                2\n            ],\n            [\n                8,\n                2\n            ],\n            [\n                8,\n                1\n            ],\n            [\n                8,\n                1\n            ],\n            [\n                10,\n                0\n            ],\n            [\n                10,\n                2\n            ],\n            [\n                11,\n                2\n            ],\n            [\n                11,\n                1\n            ],\n            [\n                11,\n                1\n            ],\n            [\n                9,\n                1\n            ],\n            [\n                9,\n                2\n            ],\n            [\n                9,\n                4\n            ],\n            [\n                9,\n                2\n            ],\n            [\n                9,\n                4\n            ],\n            [\n                9,\n                3\n            ],\n            [\n                9,\n                3\n            ],\n            [\n                9,\n                2\n            ],\n            [\n                9,\n                3\n            ],\n            [\n                9,\n                3\n            ],\n            [\n                9,\n                2\n            ],\n            [\n                9,\n                2\n            ],\n            [\n                9,\n                2\n            ],\n            [\n                9,\n                2\n            ],\n            [\n                9,\n                2\n            ],\n            [\n                9,\n                1\n            ],\n            [\n                9,\n                1\n            ],\n            [\n                9,\n                2\n            ],\n            [\n                9,\n                2\n            ],\n            [\n                9,\n                1\n            ],\n            [\n                9,\n                4\n            ],\n            [\n                9,\n                4\n            ],\n            [\n                9,\n                4\n            ],\n            [\n                9,\n                4\n            ],\n            [\n                9,\n                4\n            ],\n            [\n                9,\n                4\n            ],\n            [\n                9,\n                4\n            ],\n            [\n                9,\n                4\n            ],\n            [\n                45,\n                1\n            ],\n            [\n                45,\n                4\n            ],\n            [\n                42,\n                1\n            ],\n            [\n                42,\n                4\n            ],\n            [\n                40,\n                1\n            ],\n            [\n                40,\n                4\n            ],\n            [\n                12,\n                5\n            ],\n            [\n                12,\n                3\n            ],\n            [\n                12,\n                5\n            ],\n            [\n                12,\n                3\n            ],\n            [\n                12,\n                3\n            ],\n            [\n                24,\n                4\n            ],\n            [\n                24,\n                4\n            ],\n            [\n                25,\n                3\n            ],\n            [\n                26,\n                3\n            ],\n            [\n                27,\n                3\n            ],\n            [\n                28,\n                3\n            ],\n            [\n                63,\n                2\n            ],\n            [\n                63,\n                1\n            ],\n            [\n                58,\n                3\n            ],\n            [\n                58,\n                1\n            ],\n            [\n                55,\n                1\n            ],\n            [\n                55,\n                1\n            ],\n            [\n                17,\n                5\n            ],\n            [\n                17,\n                5\n            ],\n            [\n                17,\n                4\n            ],\n            [\n                22,\n                1\n            ],\n            [\n                67,\n                1\n            ],\n            [\n                67,\n                1\n            ],\n            [\n                67,\n                1\n            ],\n            [\n                67,\n                1\n            ],\n            [\n                67,\n                1\n            ],\n            [\n                67,\n                1\n            ],\n            [\n                67,\n                1\n            ],\n            [\n                67,\n                1\n            ],\n            [\n                56,\n                1\n            ]\n        ],\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n            var $0 = $$.length - 1;\n            switch(yystate){\n                case 3:\n                    yy.apply($$[$0]);\n                    return $$[$0];\n                case 4:\n                case 9:\n                    this.$ = [];\n                    break;\n                case 5:\n                case 10:\n                    $$[$0 - 1].push($$[$0]);\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 6:\n                case 7:\n                case 11:\n                case 12:\n                    this.$ = $$[$0];\n                    break;\n                case 8:\n                case 13:\n                    this.$ = [];\n                    break;\n                case 15:\n                    $$[$0].type = \"createParticipant\";\n                    this.$ = $$[$0];\n                    break;\n                case 16:\n                    $$[$0 - 1].unshift({\n                        type: \"boxStart\",\n                        boxData: yy.parseBoxData($$[$0 - 2])\n                    });\n                    $$[$0 - 1].push({\n                        type: \"boxEnd\",\n                        boxText: $$[$0 - 2]\n                    });\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 18:\n                    this.$ = {\n                        type: \"sequenceIndex\",\n                        sequenceIndex: Number($$[$0 - 2]),\n                        sequenceIndexStep: Number($$[$0 - 1]),\n                        sequenceVisible: true,\n                        signalType: yy.LINETYPE.AUTONUMBER\n                    };\n                    break;\n                case 19:\n                    this.$ = {\n                        type: \"sequenceIndex\",\n                        sequenceIndex: Number($$[$0 - 1]),\n                        sequenceIndexStep: 1,\n                        sequenceVisible: true,\n                        signalType: yy.LINETYPE.AUTONUMBER\n                    };\n                    break;\n                case 20:\n                    this.$ = {\n                        type: \"sequenceIndex\",\n                        sequenceVisible: false,\n                        signalType: yy.LINETYPE.AUTONUMBER\n                    };\n                    break;\n                case 21:\n                    this.$ = {\n                        type: \"sequenceIndex\",\n                        sequenceVisible: true,\n                        signalType: yy.LINETYPE.AUTONUMBER\n                    };\n                    break;\n                case 22:\n                    this.$ = {\n                        type: \"activeStart\",\n                        signalType: yy.LINETYPE.ACTIVE_START,\n                        actor: $$[$0 - 1]\n                    };\n                    break;\n                case 23:\n                    this.$ = {\n                        type: \"activeEnd\",\n                        signalType: yy.LINETYPE.ACTIVE_END,\n                        actor: $$[$0 - 1]\n                    };\n                    break;\n                case 29:\n                    yy.setDiagramTitle($$[$0].substring(6));\n                    this.$ = $$[$0].substring(6);\n                    break;\n                case 30:\n                    yy.setDiagramTitle($$[$0].substring(7));\n                    this.$ = $$[$0].substring(7);\n                    break;\n                case 31:\n                    this.$ = $$[$0].trim();\n                    yy.setAccTitle(this.$);\n                    break;\n                case 32:\n                case 33:\n                    this.$ = $$[$0].trim();\n                    yy.setAccDescription(this.$);\n                    break;\n                case 34:\n                    $$[$0 - 1].unshift({\n                        type: \"loopStart\",\n                        loopText: yy.parseMessage($$[$0 - 2]),\n                        signalType: yy.LINETYPE.LOOP_START\n                    });\n                    $$[$0 - 1].push({\n                        type: \"loopEnd\",\n                        loopText: $$[$0 - 2],\n                        signalType: yy.LINETYPE.LOOP_END\n                    });\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 35:\n                    $$[$0 - 1].unshift({\n                        type: \"rectStart\",\n                        color: yy.parseMessage($$[$0 - 2]),\n                        signalType: yy.LINETYPE.RECT_START\n                    });\n                    $$[$0 - 1].push({\n                        type: \"rectEnd\",\n                        color: yy.parseMessage($$[$0 - 2]),\n                        signalType: yy.LINETYPE.RECT_END\n                    });\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 36:\n                    $$[$0 - 1].unshift({\n                        type: \"optStart\",\n                        optText: yy.parseMessage($$[$0 - 2]),\n                        signalType: yy.LINETYPE.OPT_START\n                    });\n                    $$[$0 - 1].push({\n                        type: \"optEnd\",\n                        optText: yy.parseMessage($$[$0 - 2]),\n                        signalType: yy.LINETYPE.OPT_END\n                    });\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 37:\n                    $$[$0 - 1].unshift({\n                        type: \"altStart\",\n                        altText: yy.parseMessage($$[$0 - 2]),\n                        signalType: yy.LINETYPE.ALT_START\n                    });\n                    $$[$0 - 1].push({\n                        type: \"altEnd\",\n                        signalType: yy.LINETYPE.ALT_END\n                    });\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 38:\n                    $$[$0 - 1].unshift({\n                        type: \"parStart\",\n                        parText: yy.parseMessage($$[$0 - 2]),\n                        signalType: yy.LINETYPE.PAR_START\n                    });\n                    $$[$0 - 1].push({\n                        type: \"parEnd\",\n                        signalType: yy.LINETYPE.PAR_END\n                    });\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 39:\n                    $$[$0 - 1].unshift({\n                        type: \"parStart\",\n                        parText: yy.parseMessage($$[$0 - 2]),\n                        signalType: yy.LINETYPE.PAR_OVER_START\n                    });\n                    $$[$0 - 1].push({\n                        type: \"parEnd\",\n                        signalType: yy.LINETYPE.PAR_END\n                    });\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 40:\n                    $$[$0 - 1].unshift({\n                        type: \"criticalStart\",\n                        criticalText: yy.parseMessage($$[$0 - 2]),\n                        signalType: yy.LINETYPE.CRITICAL_START\n                    });\n                    $$[$0 - 1].push({\n                        type: \"criticalEnd\",\n                        signalType: yy.LINETYPE.CRITICAL_END\n                    });\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 41:\n                    $$[$0 - 1].unshift({\n                        type: \"breakStart\",\n                        breakText: yy.parseMessage($$[$0 - 2]),\n                        signalType: yy.LINETYPE.BREAK_START\n                    });\n                    $$[$0 - 1].push({\n                        type: \"breakEnd\",\n                        optText: yy.parseMessage($$[$0 - 2]),\n                        signalType: yy.LINETYPE.BREAK_END\n                    });\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 43:\n                    this.$ = $$[$0 - 3].concat([\n                        {\n                            type: \"option\",\n                            optionText: yy.parseMessage($$[$0 - 1]),\n                            signalType: yy.LINETYPE.CRITICAL_OPTION\n                        },\n                        $$[$0]\n                    ]);\n                    break;\n                case 45:\n                    this.$ = $$[$0 - 3].concat([\n                        {\n                            type: \"and\",\n                            parText: yy.parseMessage($$[$0 - 1]),\n                            signalType: yy.LINETYPE.PAR_AND\n                        },\n                        $$[$0]\n                    ]);\n                    break;\n                case 47:\n                    this.$ = $$[$0 - 3].concat([\n                        {\n                            type: \"else\",\n                            altText: yy.parseMessage($$[$0 - 1]),\n                            signalType: yy.LINETYPE.ALT_ELSE\n                        },\n                        $$[$0]\n                    ]);\n                    break;\n                case 48:\n                    $$[$0 - 3].draw = \"participant\";\n                    $$[$0 - 3].type = \"addParticipant\";\n                    $$[$0 - 3].description = yy.parseMessage($$[$0 - 1]);\n                    this.$ = $$[$0 - 3];\n                    break;\n                case 49:\n                    $$[$0 - 1].draw = \"participant\";\n                    $$[$0 - 1].type = \"addParticipant\";\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 50:\n                    $$[$0 - 3].draw = \"actor\";\n                    $$[$0 - 3].type = \"addParticipant\";\n                    $$[$0 - 3].description = yy.parseMessage($$[$0 - 1]);\n                    this.$ = $$[$0 - 3];\n                    break;\n                case 51:\n                    $$[$0 - 1].draw = \"actor\";\n                    $$[$0 - 1].type = \"addParticipant\";\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 52:\n                    $$[$0 - 1].type = \"destroyParticipant\";\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 53:\n                    this.$ = [\n                        $$[$0 - 1],\n                        {\n                            type: \"addNote\",\n                            placement: $$[$0 - 2],\n                            actor: $$[$0 - 1].actor,\n                            text: $$[$0]\n                        }\n                    ];\n                    break;\n                case 54:\n                    $$[$0 - 2] = [].concat($$[$0 - 1], $$[$0 - 1]).slice(0, 2);\n                    $$[$0 - 2][0] = $$[$0 - 2][0].actor;\n                    $$[$0 - 2][1] = $$[$0 - 2][1].actor;\n                    this.$ = [\n                        $$[$0 - 1],\n                        {\n                            type: \"addNote\",\n                            placement: yy.PLACEMENT.OVER,\n                            actor: $$[$0 - 2].slice(0, 2),\n                            text: $$[$0]\n                        }\n                    ];\n                    break;\n                case 55:\n                    this.$ = [\n                        $$[$0 - 1],\n                        {\n                            type: \"addLinks\",\n                            actor: $$[$0 - 1].actor,\n                            text: $$[$0]\n                        }\n                    ];\n                    break;\n                case 56:\n                    this.$ = [\n                        $$[$0 - 1],\n                        {\n                            type: \"addALink\",\n                            actor: $$[$0 - 1].actor,\n                            text: $$[$0]\n                        }\n                    ];\n                    break;\n                case 57:\n                    this.$ = [\n                        $$[$0 - 1],\n                        {\n                            type: \"addProperties\",\n                            actor: $$[$0 - 1].actor,\n                            text: $$[$0]\n                        }\n                    ];\n                    break;\n                case 58:\n                    this.$ = [\n                        $$[$0 - 1],\n                        {\n                            type: \"addDetails\",\n                            actor: $$[$0 - 1].actor,\n                            text: $$[$0]\n                        }\n                    ];\n                    break;\n                case 61:\n                    this.$ = [\n                        $$[$0 - 2],\n                        $$[$0]\n                    ];\n                    break;\n                case 62:\n                    this.$ = $$[$0];\n                    break;\n                case 63:\n                    this.$ = yy.PLACEMENT.LEFTOF;\n                    break;\n                case 64:\n                    this.$ = yy.PLACEMENT.RIGHTOF;\n                    break;\n                case 65:\n                    this.$ = [\n                        $$[$0 - 4],\n                        $$[$0 - 1],\n                        {\n                            type: \"addMessage\",\n                            from: $$[$0 - 4].actor,\n                            to: $$[$0 - 1].actor,\n                            signalType: $$[$0 - 3],\n                            msg: $$[$0],\n                            activate: true\n                        },\n                        {\n                            type: \"activeStart\",\n                            signalType: yy.LINETYPE.ACTIVE_START,\n                            actor: $$[$0 - 1]\n                        }\n                    ];\n                    break;\n                case 66:\n                    this.$ = [\n                        $$[$0 - 4],\n                        $$[$0 - 1],\n                        {\n                            type: \"addMessage\",\n                            from: $$[$0 - 4].actor,\n                            to: $$[$0 - 1].actor,\n                            signalType: $$[$0 - 3],\n                            msg: $$[$0]\n                        },\n                        {\n                            type: \"activeEnd\",\n                            signalType: yy.LINETYPE.ACTIVE_END,\n                            actor: $$[$0 - 4]\n                        }\n                    ];\n                    break;\n                case 67:\n                    this.$ = [\n                        $$[$0 - 3],\n                        $$[$0 - 1],\n                        {\n                            type: \"addMessage\",\n                            from: $$[$0 - 3].actor,\n                            to: $$[$0 - 1].actor,\n                            signalType: $$[$0 - 2],\n                            msg: $$[$0]\n                        }\n                    ];\n                    break;\n                case 68:\n                    this.$ = {\n                        type: \"addParticipant\",\n                        actor: $$[$0]\n                    };\n                    break;\n                case 69:\n                    this.$ = yy.LINETYPE.SOLID_OPEN;\n                    break;\n                case 70:\n                    this.$ = yy.LINETYPE.DOTTED_OPEN;\n                    break;\n                case 71:\n                    this.$ = yy.LINETYPE.SOLID;\n                    break;\n                case 72:\n                    this.$ = yy.LINETYPE.DOTTED;\n                    break;\n                case 73:\n                    this.$ = yy.LINETYPE.SOLID_CROSS;\n                    break;\n                case 74:\n                    this.$ = yy.LINETYPE.DOTTED_CROSS;\n                    break;\n                case 75:\n                    this.$ = yy.LINETYPE.SOLID_POINT;\n                    break;\n                case 76:\n                    this.$ = yy.LINETYPE.DOTTED_POINT;\n                    break;\n                case 77:\n                    this.$ = yy.parseMessage($$[$0].trim().substring(1));\n                    break;\n            }\n        },\n        table: [\n            {\n                3: 1,\n                4: $V0,\n                5: $V1,\n                6: $V2\n            },\n            {\n                1: [\n                    3\n                ]\n            },\n            {\n                3: 5,\n                4: $V0,\n                5: $V1,\n                6: $V2\n            },\n            {\n                3: 6,\n                4: $V0,\n                5: $V1,\n                6: $V2\n            },\n            o([\n                1,\n                4,\n                5,\n                13,\n                14,\n                18,\n                21,\n                23,\n                29,\n                30,\n                31,\n                33,\n                35,\n                36,\n                37,\n                38,\n                39,\n                41,\n                43,\n                44,\n                46,\n                50,\n                52,\n                53,\n                54,\n                59,\n                60,\n                61,\n                62,\n                70\n            ], $V3, {\n                7: 7\n            }),\n            {\n                1: [\n                    2,\n                    1\n                ]\n            },\n            {\n                1: [\n                    2,\n                    2\n                ]\n            },\n            {\n                1: [\n                    2,\n                    3\n                ],\n                4: $V4,\n                5: $V5,\n                8: 8,\n                9: 10,\n                12: 12,\n                13: $V6,\n                14: $V7,\n                17: 15,\n                18: $V8,\n                21: $V9,\n                22: 40,\n                23: $Va,\n                24: 19,\n                25: 20,\n                26: 21,\n                27: 22,\n                28: 23,\n                29: $Vb,\n                30: $Vc,\n                31: $Vd,\n                33: $Ve,\n                35: $Vf,\n                36: $Vg,\n                37: $Vh,\n                38: $Vi,\n                39: $Vj,\n                41: $Vk,\n                43: $Vl,\n                44: $Vm,\n                46: $Vn,\n                50: $Vo,\n                52: $Vp,\n                53: $Vq,\n                54: $Vr,\n                59: $Vs,\n                60: $Vt,\n                61: $Vu,\n                62: $Vv,\n                70: $Vw\n            },\n            o($Vx, [\n                2,\n                5\n            ]),\n            {\n                9: 47,\n                12: 12,\n                13: $V6,\n                14: $V7,\n                17: 15,\n                18: $V8,\n                21: $V9,\n                22: 40,\n                23: $Va,\n                24: 19,\n                25: 20,\n                26: 21,\n                27: 22,\n                28: 23,\n                29: $Vb,\n                30: $Vc,\n                31: $Vd,\n                33: $Ve,\n                35: $Vf,\n                36: $Vg,\n                37: $Vh,\n                38: $Vi,\n                39: $Vj,\n                41: $Vk,\n                43: $Vl,\n                44: $Vm,\n                46: $Vn,\n                50: $Vo,\n                52: $Vp,\n                53: $Vq,\n                54: $Vr,\n                59: $Vs,\n                60: $Vt,\n                61: $Vu,\n                62: $Vv,\n                70: $Vw\n            },\n            o($Vx, [\n                2,\n                7\n            ]),\n            o($Vx, [\n                2,\n                8\n            ]),\n            o($Vx, [\n                2,\n                14\n            ]),\n            {\n                12: 48,\n                50: $Vo,\n                52: $Vp,\n                53: $Vq\n            },\n            {\n                15: [\n                    1,\n                    49\n                ]\n            },\n            {\n                5: [\n                    1,\n                    50\n                ]\n            },\n            {\n                5: [\n                    1,\n                    53\n                ],\n                19: [\n                    1,\n                    51\n                ],\n                20: [\n                    1,\n                    52\n                ]\n            },\n            {\n                22: 54,\n                70: $Vw\n            },\n            {\n                22: 55,\n                70: $Vw\n            },\n            {\n                5: [\n                    1,\n                    56\n                ]\n            },\n            {\n                5: [\n                    1,\n                    57\n                ]\n            },\n            {\n                5: [\n                    1,\n                    58\n                ]\n            },\n            {\n                5: [\n                    1,\n                    59\n                ]\n            },\n            {\n                5: [\n                    1,\n                    60\n                ]\n            },\n            o($Vx, [\n                2,\n                29\n            ]),\n            o($Vx, [\n                2,\n                30\n            ]),\n            {\n                32: [\n                    1,\n                    61\n                ]\n            },\n            {\n                34: [\n                    1,\n                    62\n                ]\n            },\n            o($Vx, [\n                2,\n                33\n            ]),\n            {\n                15: [\n                    1,\n                    63\n                ]\n            },\n            {\n                15: [\n                    1,\n                    64\n                ]\n            },\n            {\n                15: [\n                    1,\n                    65\n                ]\n            },\n            {\n                15: [\n                    1,\n                    66\n                ]\n            },\n            {\n                15: [\n                    1,\n                    67\n                ]\n            },\n            {\n                15: [\n                    1,\n                    68\n                ]\n            },\n            {\n                15: [\n                    1,\n                    69\n                ]\n            },\n            {\n                15: [\n                    1,\n                    70\n                ]\n            },\n            {\n                22: 71,\n                70: $Vw\n            },\n            {\n                22: 72,\n                70: $Vw\n            },\n            {\n                22: 73,\n                70: $Vw\n            },\n            {\n                67: 74,\n                71: [\n                    1,\n                    75\n                ],\n                72: [\n                    1,\n                    76\n                ],\n                73: [\n                    1,\n                    77\n                ],\n                74: [\n                    1,\n                    78\n                ],\n                75: [\n                    1,\n                    79\n                ],\n                76: [\n                    1,\n                    80\n                ],\n                77: [\n                    1,\n                    81\n                ],\n                78: [\n                    1,\n                    82\n                ]\n            },\n            {\n                55: 83,\n                57: [\n                    1,\n                    84\n                ],\n                65: [\n                    1,\n                    85\n                ],\n                66: [\n                    1,\n                    86\n                ]\n            },\n            {\n                22: 87,\n                70: $Vw\n            },\n            {\n                22: 88,\n                70: $Vw\n            },\n            {\n                22: 89,\n                70: $Vw\n            },\n            {\n                22: 90,\n                70: $Vw\n            },\n            o([\n                5,\n                51,\n                64,\n                71,\n                72,\n                73,\n                74,\n                75,\n                76,\n                77,\n                78,\n                79\n            ], [\n                2,\n                68\n            ]),\n            o($Vx, [\n                2,\n                6\n            ]),\n            o($Vx, [\n                2,\n                15\n            ]),\n            o($Vy, [\n                2,\n                9\n            ], {\n                10: 91\n            }),\n            o($Vx, [\n                2,\n                17\n            ]),\n            {\n                5: [\n                    1,\n                    93\n                ],\n                19: [\n                    1,\n                    92\n                ]\n            },\n            {\n                5: [\n                    1,\n                    94\n                ]\n            },\n            o($Vx, [\n                2,\n                21\n            ]),\n            {\n                5: [\n                    1,\n                    95\n                ]\n            },\n            {\n                5: [\n                    1,\n                    96\n                ]\n            },\n            o($Vx, [\n                2,\n                24\n            ]),\n            o($Vx, [\n                2,\n                25\n            ]),\n            o($Vx, [\n                2,\n                26\n            ]),\n            o($Vx, [\n                2,\n                27\n            ]),\n            o($Vx, [\n                2,\n                28\n            ]),\n            o($Vx, [\n                2,\n                31\n            ]),\n            o($Vx, [\n                2,\n                32\n            ]),\n            o($Vz, $V3, {\n                7: 97\n            }),\n            o($Vz, $V3, {\n                7: 98\n            }),\n            o($Vz, $V3, {\n                7: 99\n            }),\n            o($VA, $V3, {\n                40: 100,\n                7: 101\n            }),\n            o($VB, $V3, {\n                42: 102,\n                7: 103\n            }),\n            o($VB, $V3, {\n                7: 103,\n                42: 104\n            }),\n            o($VC, $V3, {\n                45: 105,\n                7: 106\n            }),\n            o($Vz, $V3, {\n                7: 107\n            }),\n            {\n                5: [\n                    1,\n                    109\n                ],\n                51: [\n                    1,\n                    108\n                ]\n            },\n            {\n                5: [\n                    1,\n                    111\n                ],\n                51: [\n                    1,\n                    110\n                ]\n            },\n            {\n                5: [\n                    1,\n                    112\n                ]\n            },\n            {\n                22: 115,\n                68: [\n                    1,\n                    113\n                ],\n                69: [\n                    1,\n                    114\n                ],\n                70: $Vw\n            },\n            o($VD, [\n                2,\n                69\n            ]),\n            o($VD, [\n                2,\n                70\n            ]),\n            o($VD, [\n                2,\n                71\n            ]),\n            o($VD, [\n                2,\n                72\n            ]),\n            o($VD, [\n                2,\n                73\n            ]),\n            o($VD, [\n                2,\n                74\n            ]),\n            o($VD, [\n                2,\n                75\n            ]),\n            o($VD, [\n                2,\n                76\n            ]),\n            {\n                22: 116,\n                70: $Vw\n            },\n            {\n                22: 118,\n                58: 117,\n                70: $Vw\n            },\n            {\n                70: [\n                    2,\n                    63\n                ]\n            },\n            {\n                70: [\n                    2,\n                    64\n                ]\n            },\n            {\n                56: 119,\n                79: $VE\n            },\n            {\n                56: 121,\n                79: $VE\n            },\n            {\n                56: 122,\n                79: $VE\n            },\n            {\n                56: 123,\n                79: $VE\n            },\n            {\n                4: [\n                    1,\n                    126\n                ],\n                5: [\n                    1,\n                    128\n                ],\n                11: 125,\n                12: 127,\n                16: [\n                    1,\n                    124\n                ],\n                50: $Vo,\n                52: $Vp,\n                53: $Vq\n            },\n            {\n                5: [\n                    1,\n                    129\n                ]\n            },\n            o($Vx, [\n                2,\n                19\n            ]),\n            o($Vx, [\n                2,\n                20\n            ]),\n            o($Vx, [\n                2,\n                22\n            ]),\n            o($Vx, [\n                2,\n                23\n            ]),\n            {\n                4: $V4,\n                5: $V5,\n                8: 8,\n                9: 10,\n                12: 12,\n                13: $V6,\n                14: $V7,\n                16: [\n                    1,\n                    130\n                ],\n                17: 15,\n                18: $V8,\n                21: $V9,\n                22: 40,\n                23: $Va,\n                24: 19,\n                25: 20,\n                26: 21,\n                27: 22,\n                28: 23,\n                29: $Vb,\n                30: $Vc,\n                31: $Vd,\n                33: $Ve,\n                35: $Vf,\n                36: $Vg,\n                37: $Vh,\n                38: $Vi,\n                39: $Vj,\n                41: $Vk,\n                43: $Vl,\n                44: $Vm,\n                46: $Vn,\n                50: $Vo,\n                52: $Vp,\n                53: $Vq,\n                54: $Vr,\n                59: $Vs,\n                60: $Vt,\n                61: $Vu,\n                62: $Vv,\n                70: $Vw\n            },\n            {\n                4: $V4,\n                5: $V5,\n                8: 8,\n                9: 10,\n                12: 12,\n                13: $V6,\n                14: $V7,\n                16: [\n                    1,\n                    131\n                ],\n                17: 15,\n                18: $V8,\n                21: $V9,\n                22: 40,\n                23: $Va,\n                24: 19,\n                25: 20,\n                26: 21,\n                27: 22,\n                28: 23,\n                29: $Vb,\n                30: $Vc,\n                31: $Vd,\n                33: $Ve,\n                35: $Vf,\n                36: $Vg,\n                37: $Vh,\n                38: $Vi,\n                39: $Vj,\n                41: $Vk,\n                43: $Vl,\n                44: $Vm,\n                46: $Vn,\n                50: $Vo,\n                52: $Vp,\n                53: $Vq,\n                54: $Vr,\n                59: $Vs,\n                60: $Vt,\n                61: $Vu,\n                62: $Vv,\n                70: $Vw\n            },\n            {\n                4: $V4,\n                5: $V5,\n                8: 8,\n                9: 10,\n                12: 12,\n                13: $V6,\n                14: $V7,\n                16: [\n                    1,\n                    132\n                ],\n                17: 15,\n                18: $V8,\n                21: $V9,\n                22: 40,\n                23: $Va,\n                24: 19,\n                25: 20,\n                26: 21,\n                27: 22,\n                28: 23,\n                29: $Vb,\n                30: $Vc,\n                31: $Vd,\n                33: $Ve,\n                35: $Vf,\n                36: $Vg,\n                37: $Vh,\n                38: $Vi,\n                39: $Vj,\n                41: $Vk,\n                43: $Vl,\n                44: $Vm,\n                46: $Vn,\n                50: $Vo,\n                52: $Vp,\n                53: $Vq,\n                54: $Vr,\n                59: $Vs,\n                60: $Vt,\n                61: $Vu,\n                62: $Vv,\n                70: $Vw\n            },\n            {\n                16: [\n                    1,\n                    133\n                ]\n            },\n            {\n                4: $V4,\n                5: $V5,\n                8: 8,\n                9: 10,\n                12: 12,\n                13: $V6,\n                14: $V7,\n                16: [\n                    2,\n                    46\n                ],\n                17: 15,\n                18: $V8,\n                21: $V9,\n                22: 40,\n                23: $Va,\n                24: 19,\n                25: 20,\n                26: 21,\n                27: 22,\n                28: 23,\n                29: $Vb,\n                30: $Vc,\n                31: $Vd,\n                33: $Ve,\n                35: $Vf,\n                36: $Vg,\n                37: $Vh,\n                38: $Vi,\n                39: $Vj,\n                41: $Vk,\n                43: $Vl,\n                44: $Vm,\n                46: $Vn,\n                49: [\n                    1,\n                    134\n                ],\n                50: $Vo,\n                52: $Vp,\n                53: $Vq,\n                54: $Vr,\n                59: $Vs,\n                60: $Vt,\n                61: $Vu,\n                62: $Vv,\n                70: $Vw\n            },\n            {\n                16: [\n                    1,\n                    135\n                ]\n            },\n            {\n                4: $V4,\n                5: $V5,\n                8: 8,\n                9: 10,\n                12: 12,\n                13: $V6,\n                14: $V7,\n                16: [\n                    2,\n                    44\n                ],\n                17: 15,\n                18: $V8,\n                21: $V9,\n                22: 40,\n                23: $Va,\n                24: 19,\n                25: 20,\n                26: 21,\n                27: 22,\n                28: 23,\n                29: $Vb,\n                30: $Vc,\n                31: $Vd,\n                33: $Ve,\n                35: $Vf,\n                36: $Vg,\n                37: $Vh,\n                38: $Vi,\n                39: $Vj,\n                41: $Vk,\n                43: $Vl,\n                44: $Vm,\n                46: $Vn,\n                48: [\n                    1,\n                    136\n                ],\n                50: $Vo,\n                52: $Vp,\n                53: $Vq,\n                54: $Vr,\n                59: $Vs,\n                60: $Vt,\n                61: $Vu,\n                62: $Vv,\n                70: $Vw\n            },\n            {\n                16: [\n                    1,\n                    137\n                ]\n            },\n            {\n                16: [\n                    1,\n                    138\n                ]\n            },\n            {\n                4: $V4,\n                5: $V5,\n                8: 8,\n                9: 10,\n                12: 12,\n                13: $V6,\n                14: $V7,\n                16: [\n                    2,\n                    42\n                ],\n                17: 15,\n                18: $V8,\n                21: $V9,\n                22: 40,\n                23: $Va,\n                24: 19,\n                25: 20,\n                26: 21,\n                27: 22,\n                28: 23,\n                29: $Vb,\n                30: $Vc,\n                31: $Vd,\n                33: $Ve,\n                35: $Vf,\n                36: $Vg,\n                37: $Vh,\n                38: $Vi,\n                39: $Vj,\n                41: $Vk,\n                43: $Vl,\n                44: $Vm,\n                46: $Vn,\n                47: [\n                    1,\n                    139\n                ],\n                50: $Vo,\n                52: $Vp,\n                53: $Vq,\n                54: $Vr,\n                59: $Vs,\n                60: $Vt,\n                61: $Vu,\n                62: $Vv,\n                70: $Vw\n            },\n            {\n                4: $V4,\n                5: $V5,\n                8: 8,\n                9: 10,\n                12: 12,\n                13: $V6,\n                14: $V7,\n                16: [\n                    1,\n                    140\n                ],\n                17: 15,\n                18: $V8,\n                21: $V9,\n                22: 40,\n                23: $Va,\n                24: 19,\n                25: 20,\n                26: 21,\n                27: 22,\n                28: 23,\n                29: $Vb,\n                30: $Vc,\n                31: $Vd,\n                33: $Ve,\n                35: $Vf,\n                36: $Vg,\n                37: $Vh,\n                38: $Vi,\n                39: $Vj,\n                41: $Vk,\n                43: $Vl,\n                44: $Vm,\n                46: $Vn,\n                50: $Vo,\n                52: $Vp,\n                53: $Vq,\n                54: $Vr,\n                59: $Vs,\n                60: $Vt,\n                61: $Vu,\n                62: $Vv,\n                70: $Vw\n            },\n            {\n                15: [\n                    1,\n                    141\n                ]\n            },\n            o($Vx, [\n                2,\n                49\n            ]),\n            {\n                15: [\n                    1,\n                    142\n                ]\n            },\n            o($Vx, [\n                2,\n                51\n            ]),\n            o($Vx, [\n                2,\n                52\n            ]),\n            {\n                22: 143,\n                70: $Vw\n            },\n            {\n                22: 144,\n                70: $Vw\n            },\n            {\n                56: 145,\n                79: $VE\n            },\n            {\n                56: 146,\n                79: $VE\n            },\n            {\n                56: 147,\n                79: $VE\n            },\n            {\n                64: [\n                    1,\n                    148\n                ],\n                79: [\n                    2,\n                    62\n                ]\n            },\n            {\n                5: [\n                    2,\n                    55\n                ]\n            },\n            {\n                5: [\n                    2,\n                    77\n                ]\n            },\n            {\n                5: [\n                    2,\n                    56\n                ]\n            },\n            {\n                5: [\n                    2,\n                    57\n                ]\n            },\n            {\n                5: [\n                    2,\n                    58\n                ]\n            },\n            o($Vx, [\n                2,\n                16\n            ]),\n            o($Vy, [\n                2,\n                10\n            ]),\n            {\n                12: 149,\n                50: $Vo,\n                52: $Vp,\n                53: $Vq\n            },\n            o($Vy, [\n                2,\n                12\n            ]),\n            o($Vy, [\n                2,\n                13\n            ]),\n            o($Vx, [\n                2,\n                18\n            ]),\n            o($Vx, [\n                2,\n                34\n            ]),\n            o($Vx, [\n                2,\n                35\n            ]),\n            o($Vx, [\n                2,\n                36\n            ]),\n            o($Vx, [\n                2,\n                37\n            ]),\n            {\n                15: [\n                    1,\n                    150\n                ]\n            },\n            o($Vx, [\n                2,\n                38\n            ]),\n            {\n                15: [\n                    1,\n                    151\n                ]\n            },\n            o($Vx, [\n                2,\n                39\n            ]),\n            o($Vx, [\n                2,\n                40\n            ]),\n            {\n                15: [\n                    1,\n                    152\n                ]\n            },\n            o($Vx, [\n                2,\n                41\n            ]),\n            {\n                5: [\n                    1,\n                    153\n                ]\n            },\n            {\n                5: [\n                    1,\n                    154\n                ]\n            },\n            {\n                56: 155,\n                79: $VE\n            },\n            {\n                56: 156,\n                79: $VE\n            },\n            {\n                5: [\n                    2,\n                    67\n                ]\n            },\n            {\n                5: [\n                    2,\n                    53\n                ]\n            },\n            {\n                5: [\n                    2,\n                    54\n                ]\n            },\n            {\n                22: 157,\n                70: $Vw\n            },\n            o($Vy, [\n                2,\n                11\n            ]),\n            o($VA, $V3, {\n                7: 101,\n                40: 158\n            }),\n            o($VB, $V3, {\n                7: 103,\n                42: 159\n            }),\n            o($VC, $V3, {\n                7: 106,\n                45: 160\n            }),\n            o($Vx, [\n                2,\n                48\n            ]),\n            o($Vx, [\n                2,\n                50\n            ]),\n            {\n                5: [\n                    2,\n                    65\n                ]\n            },\n            {\n                5: [\n                    2,\n                    66\n                ]\n            },\n            {\n                79: [\n                    2,\n                    61\n                ]\n            },\n            {\n                16: [\n                    2,\n                    47\n                ]\n            },\n            {\n                16: [\n                    2,\n                    45\n                ]\n            },\n            {\n                16: [\n                    2,\n                    43\n                ]\n            }\n        ],\n        defaultActions: {\n            5: [\n                2,\n                1\n            ],\n            6: [\n                2,\n                2\n            ],\n            85: [\n                2,\n                63\n            ],\n            86: [\n                2,\n                64\n            ],\n            119: [\n                2,\n                55\n            ],\n            120: [\n                2,\n                77\n            ],\n            121: [\n                2,\n                56\n            ],\n            122: [\n                2,\n                57\n            ],\n            123: [\n                2,\n                58\n            ],\n            145: [\n                2,\n                67\n            ],\n            146: [\n                2,\n                53\n            ],\n            147: [\n                2,\n                54\n            ],\n            155: [\n                2,\n                65\n            ],\n            156: [\n                2,\n                66\n            ],\n            157: [\n                2,\n                61\n            ],\n            158: [\n                2,\n                47\n            ],\n            159: [\n                2,\n                45\n            ],\n            160: [\n                2,\n                43\n            ]\n        },\n        parseError: function parseError(str, hash) {\n            if (hash.recoverable) {\n                this.trace(str);\n            } else {\n                var error = new Error(str);\n                error.hash = hash;\n                throw error;\n            }\n        },\n        parse: function parse(input) {\n            var self = this, stack = [\n                0\n            ], tstack = [], vstack = [\n                null\n            ], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n            var args = lstack.slice.call(arguments, 1);\n            var lexer2 = Object.create(this.lexer);\n            var sharedState = {\n                yy: {}\n            };\n            for(var k in this.yy){\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n                    sharedState.yy[k] = this.yy[k];\n                }\n            }\n            lexer2.setInput(input, sharedState.yy);\n            sharedState.yy.lexer = lexer2;\n            sharedState.yy.parser = this;\n            if (typeof lexer2.yylloc == \"undefined\") {\n                lexer2.yylloc = {};\n            }\n            var yyloc = lexer2.yylloc;\n            lstack.push(yyloc);\n            var ranges = lexer2.options && lexer2.options.ranges;\n            if (typeof sharedState.yy.parseError === \"function\") {\n                this.parseError = sharedState.yy.parseError;\n            } else {\n                this.parseError = Object.getPrototypeOf(this).parseError;\n            }\n            function lex() {\n                var token;\n                token = tstack.pop() || lexer2.lex() || EOF;\n                if (typeof token !== \"number\") {\n                    if (token instanceof Array) {\n                        tstack = token;\n                        token = tstack.pop();\n                    }\n                    token = self.symbols_[token] || token;\n                }\n                return token;\n            }\n            var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n            while(true){\n                state = stack[stack.length - 1];\n                if (this.defaultActions[state]) {\n                    action = this.defaultActions[state];\n                } else {\n                    if (symbol === null || typeof symbol == \"undefined\") {\n                        symbol = lex();\n                    }\n                    action = table[state] && table[state][symbol];\n                }\n                if (typeof action === \"undefined\" || !action.length || !action[0]) {\n                    var errStr = \"\";\n                    expected = [];\n                    for(p in table[state]){\n                        if (this.terminals_[p] && p > TERROR) {\n                            expected.push(\"'\" + this.terminals_[p] + \"'\");\n                        }\n                    }\n                    if (lexer2.showPosition) {\n                        errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n                    } else {\n                        errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n                    }\n                    this.parseError(errStr, {\n                        text: lexer2.match,\n                        token: this.terminals_[symbol] || symbol,\n                        line: lexer2.yylineno,\n                        loc: yyloc,\n                        expected\n                    });\n                }\n                if (action[0] instanceof Array && action.length > 1) {\n                    throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n                }\n                switch(action[0]){\n                    case 1:\n                        stack.push(symbol);\n                        vstack.push(lexer2.yytext);\n                        lstack.push(lexer2.yylloc);\n                        stack.push(action[1]);\n                        symbol = null;\n                        {\n                            yyleng = lexer2.yyleng;\n                            yytext = lexer2.yytext;\n                            yylineno = lexer2.yylineno;\n                            yyloc = lexer2.yylloc;\n                        }\n                        break;\n                    case 2:\n                        len = this.productions_[action[1]][1];\n                        yyval.$ = vstack[vstack.length - len];\n                        yyval._$ = {\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\n                            last_line: lstack[lstack.length - 1].last_line,\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\n                            last_column: lstack[lstack.length - 1].last_column\n                        };\n                        if (ranges) {\n                            yyval._$.range = [\n                                lstack[lstack.length - (len || 1)].range[0],\n                                lstack[lstack.length - 1].range[1]\n                            ];\n                        }\n                        r = this.performAction.apply(yyval, [\n                            yytext,\n                            yyleng,\n                            yylineno,\n                            sharedState.yy,\n                            action[1],\n                            vstack,\n                            lstack\n                        ].concat(args));\n                        if (typeof r !== \"undefined\") {\n                            return r;\n                        }\n                        if (len) {\n                            stack = stack.slice(0, -1 * len * 2);\n                            vstack = vstack.slice(0, -1 * len);\n                            lstack = lstack.slice(0, -1 * len);\n                        }\n                        stack.push(this.productions_[action[1]][0]);\n                        vstack.push(yyval.$);\n                        lstack.push(yyval._$);\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n                        stack.push(newState);\n                        break;\n                    case 3:\n                        return true;\n                }\n            }\n            return true;\n        }\n    };\n    var lexer = function() {\n        var lexer2 = {\n            EOF: 1,\n            parseError: function parseError(str, hash) {\n                if (this.yy.parser) {\n                    this.yy.parser.parseError(str, hash);\n                } else {\n                    throw new Error(str);\n                }\n            },\n            // resets the lexer, sets new input\n            setInput: function(input, yy) {\n                this.yy = yy || this.yy || {};\n                this._input = input;\n                this._more = this._backtrack = this.done = false;\n                this.yylineno = this.yyleng = 0;\n                this.yytext = this.matched = this.match = \"\";\n                this.conditionStack = [\n                    \"INITIAL\"\n                ];\n                this.yylloc = {\n                    first_line: 1,\n                    first_column: 0,\n                    last_line: 1,\n                    last_column: 0\n                };\n                if (this.options.ranges) {\n                    this.yylloc.range = [\n                        0,\n                        0\n                    ];\n                }\n                this.offset = 0;\n                return this;\n            },\n            // consumes and returns one char from the input\n            input: function() {\n                var ch = this._input[0];\n                this.yytext += ch;\n                this.yyleng++;\n                this.offset++;\n                this.match += ch;\n                this.matched += ch;\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno++;\n                    this.yylloc.last_line++;\n                } else {\n                    this.yylloc.last_column++;\n                }\n                if (this.options.ranges) {\n                    this.yylloc.range[1]++;\n                }\n                this._input = this._input.slice(1);\n                return ch;\n            },\n            // unshifts one char (or a string) into the input\n            unput: function(ch) {\n                var len = ch.length;\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n                this._input = ch + this._input;\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\n                this.offset -= len;\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n                this.match = this.match.substr(0, this.match.length - 1);\n                this.matched = this.matched.substr(0, this.matched.length - 1);\n                if (lines.length - 1) {\n                    this.yylineno -= lines.length - 1;\n                }\n                var r = this.yylloc.range;\n                this.yylloc = {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.first_column,\n                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n                };\n                if (this.options.ranges) {\n                    this.yylloc.range = [\n                        r[0],\n                        r[0] + this.yyleng - len\n                    ];\n                }\n                this.yyleng = this.yytext.length;\n                return this;\n            },\n            // When called from action, caches matched text and appends it on next action\n            more: function() {\n                this._more = true;\n                return this;\n            },\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n            reject: function() {\n                if (this.options.backtrack_lexer) {\n                    this._backtrack = true;\n                } else {\n                    return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n                        text: \"\",\n                        token: null,\n                        line: this.yylineno\n                    });\n                }\n                return this;\n            },\n            // retain first n characters of the match\n            less: function(n) {\n                this.unput(this.match.slice(n));\n            },\n            // displays already matched input, i.e. for error messages\n            pastInput: function() {\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\n                return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n            },\n            // displays upcoming input, i.e. for error messages\n            upcomingInput: function() {\n                var next = this.match;\n                if (next.length < 20) {\n                    next += this._input.substr(0, 20 - next.length);\n                }\n                return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n            },\n            // displays the character position where the lexing error occurred, i.e. for error messages\n            showPosition: function() {\n                var pre = this.pastInput();\n                var c = new Array(pre.length + 1).join(\"-\");\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n            },\n            // test the lexed token: return FALSE when not a match, otherwise return token\n            test_match: function(match, indexed_rule) {\n                var token, lines, backup;\n                if (this.options.backtrack_lexer) {\n                    backup = {\n                        yylineno: this.yylineno,\n                        yylloc: {\n                            first_line: this.yylloc.first_line,\n                            last_line: this.last_line,\n                            first_column: this.yylloc.first_column,\n                            last_column: this.yylloc.last_column\n                        },\n                        yytext: this.yytext,\n                        match: this.match,\n                        matches: this.matches,\n                        matched: this.matched,\n                        yyleng: this.yyleng,\n                        offset: this.offset,\n                        _more: this._more,\n                        _input: this._input,\n                        yy: this.yy,\n                        conditionStack: this.conditionStack.slice(0),\n                        done: this.done\n                    };\n                    if (this.options.ranges) {\n                        backup.yylloc.range = this.yylloc.range.slice(0);\n                    }\n                }\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno += lines.length;\n                }\n                this.yylloc = {\n                    first_line: this.yylloc.last_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.last_column,\n                    last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n                };\n                this.yytext += match[0];\n                this.match += match[0];\n                this.matches = match;\n                this.yyleng = this.yytext.length;\n                if (this.options.ranges) {\n                    this.yylloc.range = [\n                        this.offset,\n                        this.offset += this.yyleng\n                    ];\n                }\n                this._more = false;\n                this._backtrack = false;\n                this._input = this._input.slice(match[0].length);\n                this.matched += match[0];\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n                if (this.done && this._input) {\n                    this.done = false;\n                }\n                if (token) {\n                    return token;\n                } else if (this._backtrack) {\n                    for(var k in backup){\n                        this[k] = backup[k];\n                    }\n                    return false;\n                }\n                return false;\n            },\n            // return next match in input\n            next: function() {\n                if (this.done) {\n                    return this.EOF;\n                }\n                if (!this._input) {\n                    this.done = true;\n                }\n                var token, match, tempMatch, index;\n                if (!this._more) {\n                    this.yytext = \"\";\n                    this.match = \"\";\n                }\n                var rules = this._currentRules();\n                for(var i = 0; i < rules.length; i++){\n                    tempMatch = this._input.match(this.rules[rules[i]]);\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                        match = tempMatch;\n                        index = i;\n                        if (this.options.backtrack_lexer) {\n                            token = this.test_match(tempMatch, rules[i]);\n                            if (token !== false) {\n                                return token;\n                            } else if (this._backtrack) {\n                                match = false;\n                                continue;\n                            } else {\n                                return false;\n                            }\n                        } else if (!this.options.flex) {\n                            break;\n                        }\n                    }\n                }\n                if (match) {\n                    token = this.test_match(match, rules[index]);\n                    if (token !== false) {\n                        return token;\n                    }\n                    return false;\n                }\n                if (this._input === \"\") {\n                    return this.EOF;\n                } else {\n                    return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n                        text: \"\",\n                        token: null,\n                        line: this.yylineno\n                    });\n                }\n            },\n            // return next match that has a token\n            lex: function lex() {\n                var r = this.next();\n                if (r) {\n                    return r;\n                } else {\n                    return this.lex();\n                }\n            },\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n            begin: function begin(condition) {\n                this.conditionStack.push(condition);\n            },\n            // pop the previously active lexer condition state off the condition stack\n            popState: function popState() {\n                var n = this.conditionStack.length - 1;\n                if (n > 0) {\n                    return this.conditionStack.pop();\n                } else {\n                    return this.conditionStack[0];\n                }\n            },\n            // produce the lexer rule set which is active for the currently active lexer condition state\n            _currentRules: function _currentRules() {\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n                } else {\n                    return this.conditions[\"INITIAL\"].rules;\n                }\n            },\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n            topState: function topState(n) {\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\n                if (n >= 0) {\n                    return this.conditionStack[n];\n                } else {\n                    return \"INITIAL\";\n                }\n            },\n            // alias for begin(condition)\n            pushState: function pushState(condition) {\n                this.begin(condition);\n            },\n            // return the number of states currently on the stack\n            stateStackSize: function stateStackSize() {\n                return this.conditionStack.length;\n            },\n            options: {\n                \"case-insensitive\": true\n            },\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n                switch($avoiding_name_collisions){\n                    case 0:\n                        return 5;\n                    case 1:\n                        break;\n                    case 2:\n                        break;\n                    case 3:\n                        break;\n                    case 4:\n                        break;\n                    case 5:\n                        break;\n                    case 6:\n                        return 19;\n                    case 7:\n                        this.begin(\"LINE\");\n                        return 14;\n                    case 8:\n                        this.begin(\"ID\");\n                        return 50;\n                    case 9:\n                        this.begin(\"ID\");\n                        return 52;\n                    case 10:\n                        return 13;\n                    case 11:\n                        this.begin(\"ID\");\n                        return 53;\n                    case 12:\n                        yy_.yytext = yy_.yytext.trim();\n                        this.begin(\"ALIAS\");\n                        return 70;\n                    case 13:\n                        this.popState();\n                        this.popState();\n                        this.begin(\"LINE\");\n                        return 51;\n                    case 14:\n                        this.popState();\n                        this.popState();\n                        return 5;\n                    case 15:\n                        this.begin(\"LINE\");\n                        return 36;\n                    case 16:\n                        this.begin(\"LINE\");\n                        return 37;\n                    case 17:\n                        this.begin(\"LINE\");\n                        return 38;\n                    case 18:\n                        this.begin(\"LINE\");\n                        return 39;\n                    case 19:\n                        this.begin(\"LINE\");\n                        return 49;\n                    case 20:\n                        this.begin(\"LINE\");\n                        return 41;\n                    case 21:\n                        this.begin(\"LINE\");\n                        return 43;\n                    case 22:\n                        this.begin(\"LINE\");\n                        return 48;\n                    case 23:\n                        this.begin(\"LINE\");\n                        return 44;\n                    case 24:\n                        this.begin(\"LINE\");\n                        return 47;\n                    case 25:\n                        this.begin(\"LINE\");\n                        return 46;\n                    case 26:\n                        this.popState();\n                        return 15;\n                    case 27:\n                        return 16;\n                    case 28:\n                        return 65;\n                    case 29:\n                        return 66;\n                    case 30:\n                        return 59;\n                    case 31:\n                        return 60;\n                    case 32:\n                        return 61;\n                    case 33:\n                        return 62;\n                    case 34:\n                        return 57;\n                    case 35:\n                        return 54;\n                    case 36:\n                        this.begin(\"ID\");\n                        return 21;\n                    case 37:\n                        this.begin(\"ID\");\n                        return 23;\n                    case 38:\n                        return 29;\n                    case 39:\n                        return 30;\n                    case 40:\n                        this.begin(\"acc_title\");\n                        return 31;\n                    case 41:\n                        this.popState();\n                        return \"acc_title_value\";\n                    case 42:\n                        this.begin(\"acc_descr\");\n                        return 33;\n                    case 43:\n                        this.popState();\n                        return \"acc_descr_value\";\n                    case 44:\n                        this.begin(\"acc_descr_multiline\");\n                        break;\n                    case 45:\n                        this.popState();\n                        break;\n                    case 46:\n                        return \"acc_descr_multiline_value\";\n                    case 47:\n                        return 6;\n                    case 48:\n                        return 18;\n                    case 49:\n                        return 20;\n                    case 50:\n                        return 64;\n                    case 51:\n                        return 5;\n                    case 52:\n                        yy_.yytext = yy_.yytext.trim();\n                        return 70;\n                    case 53:\n                        return 73;\n                    case 54:\n                        return 74;\n                    case 55:\n                        return 71;\n                    case 56:\n                        return 72;\n                    case 57:\n                        return 75;\n                    case 58:\n                        return 76;\n                    case 59:\n                        return 77;\n                    case 60:\n                        return 78;\n                    case 61:\n                        return 79;\n                    case 62:\n                        return 68;\n                    case 63:\n                        return 69;\n                    case 64:\n                        return 5;\n                    case 65:\n                        return \"INVALID\";\n                }\n            },\n            rules: [\n                /^(?:[\\n]+)/i,\n                /^(?:\\s+)/i,\n                /^(?:((?!\\n)\\s)+)/i,\n                /^(?:#[^\\n]*)/i,\n                /^(?:%(?!\\{)[^\\n]*)/i,\n                /^(?:[^\\}]%%[^\\n]*)/i,\n                /^(?:[0-9]+(?=[ \\n]+))/i,\n                /^(?:box\\b)/i,\n                /^(?:participant\\b)/i,\n                /^(?:actor\\b)/i,\n                /^(?:create\\b)/i,\n                /^(?:destroy\\b)/i,\n                /^(?:[^\\->:\\n,;]+?([\\-]*[^\\->:\\n,;]+?)*?(?=((?!\\n)\\s)+as(?!\\n)\\s|[#\\n;]|$))/i,\n                /^(?:as\\b)/i,\n                /^(?:(?:))/i,\n                /^(?:loop\\b)/i,\n                /^(?:rect\\b)/i,\n                /^(?:opt\\b)/i,\n                /^(?:alt\\b)/i,\n                /^(?:else\\b)/i,\n                /^(?:par\\b)/i,\n                /^(?:par_over\\b)/i,\n                /^(?:and\\b)/i,\n                /^(?:critical\\b)/i,\n                /^(?:option\\b)/i,\n                /^(?:break\\b)/i,\n                /^(?:(?:[:]?(?:no)?wrap)?[^#\\n;]*)/i,\n                /^(?:end\\b)/i,\n                /^(?:left of\\b)/i,\n                /^(?:right of\\b)/i,\n                /^(?:links\\b)/i,\n                /^(?:link\\b)/i,\n                /^(?:properties\\b)/i,\n                /^(?:details\\b)/i,\n                /^(?:over\\b)/i,\n                /^(?:note\\b)/i,\n                /^(?:activate\\b)/i,\n                /^(?:deactivate\\b)/i,\n                /^(?:title\\s[^#\\n;]+)/i,\n                /^(?:title:\\s[^#\\n;]+)/i,\n                /^(?:accTitle\\s*:\\s*)/i,\n                /^(?:(?!\\n||)*[^\\n]*)/i,\n                /^(?:accDescr\\s*:\\s*)/i,\n                /^(?:(?!\\n||)*[^\\n]*)/i,\n                /^(?:accDescr\\s*\\{\\s*)/i,\n                /^(?:[\\}])/i,\n                /^(?:[^\\}]*)/i,\n                /^(?:sequenceDiagram\\b)/i,\n                /^(?:autonumber\\b)/i,\n                /^(?:off\\b)/i,\n                /^(?:,)/i,\n                /^(?:;)/i,\n                /^(?:[^\\+\\->:\\n,;]+((?!(-x|--x|-\\)|--\\)))[\\-]*[^\\+\\->:\\n,;]+)*)/i,\n                /^(?:->>)/i,\n                /^(?:-->>)/i,\n                /^(?:->)/i,\n                /^(?:-->)/i,\n                /^(?:-[x])/i,\n                /^(?:--[x])/i,\n                /^(?:-[\\)])/i,\n                /^(?:--[\\)])/i,\n                /^(?::(?:(?:no)?wrap)?[^#\\n;]+)/i,\n                /^(?:\\+)/i,\n                /^(?:-)/i,\n                /^(?:$)/i,\n                /^(?:.)/i\n            ],\n            conditions: {\n                \"acc_descr_multiline\": {\n                    \"rules\": [\n                        45,\n                        46\n                    ],\n                    \"inclusive\": false\n                },\n                \"acc_descr\": {\n                    \"rules\": [\n                        43\n                    ],\n                    \"inclusive\": false\n                },\n                \"acc_title\": {\n                    \"rules\": [\n                        41\n                    ],\n                    \"inclusive\": false\n                },\n                \"ID\": {\n                    \"rules\": [\n                        2,\n                        3,\n                        12\n                    ],\n                    \"inclusive\": false\n                },\n                \"ALIAS\": {\n                    \"rules\": [\n                        2,\n                        3,\n                        13,\n                        14\n                    ],\n                    \"inclusive\": false\n                },\n                \"LINE\": {\n                    \"rules\": [\n                        2,\n                        3,\n                        26\n                    ],\n                    \"inclusive\": false\n                },\n                \"INITIAL\": {\n                    \"rules\": [\n                        0,\n                        1,\n                        3,\n                        4,\n                        5,\n                        6,\n                        7,\n                        8,\n                        9,\n                        10,\n                        11,\n                        15,\n                        16,\n                        17,\n                        18,\n                        19,\n                        20,\n                        21,\n                        22,\n                        23,\n                        24,\n                        25,\n                        27,\n                        28,\n                        29,\n                        30,\n                        31,\n                        32,\n                        33,\n                        34,\n                        35,\n                        36,\n                        37,\n                        38,\n                        39,\n                        40,\n                        42,\n                        44,\n                        47,\n                        48,\n                        49,\n                        50,\n                        51,\n                        52,\n                        53,\n                        54,\n                        55,\n                        56,\n                        57,\n                        58,\n                        59,\n                        60,\n                        61,\n                        62,\n                        63,\n                        64,\n                        65\n                    ],\n                    \"inclusive\": true\n                }\n            }\n        };\n        return lexer2;\n    }();\n    parser2.lexer = lexer;\n    function Parser() {\n        this.yy = {};\n    }\n    Parser.prototype = parser2;\n    parser2.Parser = Parser;\n    return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nlet prevActor = void 0;\nlet actors = {};\nlet createdActors = {};\nlet destroyedActors = {};\nlet boxes = [];\nlet messages = [];\nlet sequenceNumbersEnabled = false;\nlet wrapEnabled;\nlet currentBox = void 0;\nlet lastCreated = void 0;\nlet lastDestroyed = void 0;\nconst addBox = function(data) {\n    boxes.push({\n        name: data.text,\n        wrap: data.wrap === void 0 && autoWrap() || !!data.wrap,\n        fill: data.color,\n        actorKeys: []\n    });\n    currentBox = boxes.slice(-1)[0];\n};\nconst addActor = function(id, name, description, type) {\n    let assignedBox = currentBox;\n    const old = actors[id];\n    if (old) {\n        if (currentBox && old.box && currentBox !== old.box) {\n            throw new Error(\"A same participant should only be defined in one Box: \" + old.name + \" can't be in '\" + old.box.name + \"' and in '\" + currentBox.name + \"' at the same time.\");\n        }\n        assignedBox = old.box ? old.box : currentBox;\n        old.box = assignedBox;\n        if (old && name === old.name && description == null) {\n            return;\n        }\n    }\n    if (description == null || description.text == null) {\n        description = {\n            text: name,\n            wrap: null,\n            type\n        };\n    }\n    if (type == null || description.text == null) {\n        description = {\n            text: name,\n            wrap: null,\n            type\n        };\n    }\n    actors[id] = {\n        box: assignedBox,\n        name,\n        description: description.text,\n        wrap: description.wrap === void 0 && autoWrap() || !!description.wrap,\n        prevActor,\n        links: {},\n        properties: {},\n        actorCnt: null,\n        rectData: null,\n        type: type || \"participant\"\n    };\n    if (prevActor && actors[prevActor]) {\n        actors[prevActor].nextActor = id;\n    }\n    if (currentBox) {\n        currentBox.actorKeys.push(id);\n    }\n    prevActor = id;\n};\nconst activationCount = (part)=>{\n    let i;\n    let count = 0;\n    for(i = 0; i < messages.length; i++){\n        if (messages[i].type === LINETYPE.ACTIVE_START && messages[i].from.actor === part) {\n            count++;\n        }\n        if (messages[i].type === LINETYPE.ACTIVE_END && messages[i].from.actor === part) {\n            count--;\n        }\n    }\n    return count;\n};\nconst addMessage = function(idFrom, idTo, message, answer) {\n    messages.push({\n        from: idFrom,\n        to: idTo,\n        message: message.text,\n        wrap: message.wrap === void 0 && autoWrap() || !!message.wrap,\n        answer\n    });\n};\nconst addSignal = function(idFrom, idTo) {\n    let message = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {\n        text: void 0,\n        wrap: void 0\n    }, messageType = arguments.length > 3 ? arguments[3] : void 0, activate = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false;\n    if (messageType === LINETYPE.ACTIVE_END) {\n        const cnt = activationCount(idFrom.actor);\n        if (cnt < 1) {\n            let error = new Error(\"Trying to inactivate an inactive participant (\" + idFrom.actor + \")\");\n            error.hash = {\n                text: \"->>-\",\n                token: \"->>-\",\n                line: \"1\",\n                loc: {\n                    first_line: 1,\n                    last_line: 1,\n                    first_column: 1,\n                    last_column: 1\n                },\n                expected: [\n                    \"'ACTIVE_PARTICIPANT'\"\n                ]\n            };\n            throw error;\n        }\n    }\n    messages.push({\n        from: idFrom,\n        to: idTo,\n        message: message.text,\n        wrap: message.wrap === void 0 && autoWrap() || !!message.wrap,\n        type: messageType,\n        activate\n    });\n    return true;\n};\nconst hasAtLeastOneBox = function() {\n    return boxes.length > 0;\n};\nconst hasAtLeastOneBoxWithTitle = function() {\n    return boxes.some((b)=>b.name);\n};\nconst getMessages = function() {\n    return messages;\n};\nconst getBoxes = function() {\n    return boxes;\n};\nconst getActors = function() {\n    return actors;\n};\nconst getCreatedActors = function() {\n    return createdActors;\n};\nconst getDestroyedActors = function() {\n    return destroyedActors;\n};\nconst getActor = function(id) {\n    return actors[id];\n};\nconst getActorKeys = function() {\n    return Object.keys(actors);\n};\nconst enableSequenceNumbers = function() {\n    sequenceNumbersEnabled = true;\n};\nconst disableSequenceNumbers = function() {\n    sequenceNumbersEnabled = false;\n};\nconst showSequenceNumbers = ()=>sequenceNumbersEnabled;\nconst setWrap = function(wrapSetting) {\n    wrapEnabled = wrapSetting;\n};\nconst autoWrap = ()=>{\n    if (wrapEnabled !== void 0) {\n        return wrapEnabled;\n    }\n    return (0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.c)().sequence.wrap;\n};\nconst clear = function() {\n    actors = {};\n    createdActors = {};\n    destroyedActors = {};\n    boxes = [];\n    messages = [];\n    sequenceNumbersEnabled = false;\n    (0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.t)();\n};\nconst parseMessage = function(str) {\n    const _str = str.trim();\n    const message = {\n        text: _str.replace(/^:?(?:no)?wrap:/, \"\").trim(),\n        wrap: _str.match(/^:?wrap:/) !== null ? true : _str.match(/^:?nowrap:/) !== null ? false : void 0\n    };\n    _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.l.debug(\"parseMessage:\", message);\n    return message;\n};\nconst parseBoxData = function(str) {\n    const match = str.match(/^((?:rgba?|hsla?)\\s*\\(.*\\)|\\w*)(.*)$/);\n    let color = match != null && match[1] ? match[1].trim() : \"transparent\";\n    let title = match != null && match[2] ? match[2].trim() : void 0;\n    if (window && window.CSS) {\n        if (!window.CSS.supports(\"color\", color)) {\n            color = \"transparent\";\n            title = str.trim();\n        }\n    } else {\n        const style = new Option().style;\n        style.color = color;\n        if (style.color !== color) {\n            color = \"transparent\";\n            title = str.trim();\n        }\n    }\n    const boxData = {\n        color,\n        text: title !== void 0 ? (0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.d)(title.replace(/^:?(?:no)?wrap:/, \"\"), (0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.c)()) : void 0,\n        wrap: title !== void 0 ? title.match(/^:?wrap:/) !== null ? true : title.match(/^:?nowrap:/) !== null ? false : void 0 : void 0\n    };\n    return boxData;\n};\nconst LINETYPE = {\n    SOLID: 0,\n    DOTTED: 1,\n    NOTE: 2,\n    SOLID_CROSS: 3,\n    DOTTED_CROSS: 4,\n    SOLID_OPEN: 5,\n    DOTTED_OPEN: 6,\n    LOOP_START: 10,\n    LOOP_END: 11,\n    ALT_START: 12,\n    ALT_ELSE: 13,\n    ALT_END: 14,\n    OPT_START: 15,\n    OPT_END: 16,\n    ACTIVE_START: 17,\n    ACTIVE_END: 18,\n    PAR_START: 19,\n    PAR_AND: 20,\n    PAR_END: 21,\n    RECT_START: 22,\n    RECT_END: 23,\n    SOLID_POINT: 24,\n    DOTTED_POINT: 25,\n    AUTONUMBER: 26,\n    CRITICAL_START: 27,\n    CRITICAL_OPTION: 28,\n    CRITICAL_END: 29,\n    BREAK_START: 30,\n    BREAK_END: 31,\n    PAR_OVER_START: 32\n};\nconst ARROWTYPE = {\n    FILLED: 0,\n    OPEN: 1\n};\nconst PLACEMENT = {\n    LEFTOF: 0,\n    RIGHTOF: 1,\n    OVER: 2\n};\nconst addNote = function(actor, placement, message) {\n    ({\n        actor,\n        placement,\n        message: message.text,\n        wrap: message.wrap === void 0 && autoWrap() || !!message.wrap\n    });\n    const actors2 = [].concat(actor, actor);\n    messages.push({\n        from: actors2[0],\n        to: actors2[1],\n        message: message.text,\n        wrap: message.wrap === void 0 && autoWrap() || !!message.wrap,\n        type: LINETYPE.NOTE,\n        placement\n    });\n};\nconst addLinks = function(actorId, text) {\n    const actor = getActor(actorId);\n    try {\n        let sanitizedText = (0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.d)(text.text, (0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.c)());\n        sanitizedText = sanitizedText.replace(/&amp;/g, \"&\");\n        sanitizedText = sanitizedText.replace(/&equals;/g, \"=\");\n        const links = JSON.parse(sanitizedText);\n        insertLinks(actor, links);\n    } catch (e) {\n        _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.l.error(\"error while parsing actor link text\", e);\n    }\n};\nconst addALink = function(actorId, text) {\n    const actor = getActor(actorId);\n    try {\n        const links = {};\n        let sanitizedText = (0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.d)(text.text, (0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.c)());\n        var sep = sanitizedText.indexOf(\"@\");\n        sanitizedText = sanitizedText.replace(/&amp;/g, \"&\");\n        sanitizedText = sanitizedText.replace(/&equals;/g, \"=\");\n        var label = sanitizedText.slice(0, sep - 1).trim();\n        var link = sanitizedText.slice(sep + 1).trim();\n        links[label] = link;\n        insertLinks(actor, links);\n    } catch (e) {\n        _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.l.error(\"error while parsing actor link text\", e);\n    }\n};\nfunction insertLinks(actor, links) {\n    if (actor.links == null) {\n        actor.links = links;\n    } else {\n        for(let key in links){\n            actor.links[key] = links[key];\n        }\n    }\n}\nconst addProperties = function(actorId, text) {\n    const actor = getActor(actorId);\n    try {\n        let sanitizedText = (0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.d)(text.text, (0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.c)());\n        const properties = JSON.parse(sanitizedText);\n        insertProperties(actor, properties);\n    } catch (e) {\n        _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.l.error(\"error while parsing actor properties text\", e);\n    }\n};\nfunction insertProperties(actor, properties) {\n    if (actor.properties == null) {\n        actor.properties = properties;\n    } else {\n        for(let key in properties){\n            actor.properties[key] = properties[key];\n        }\n    }\n}\nfunction boxEnd() {\n    currentBox = void 0;\n}\nconst addDetails = function(actorId, text) {\n    const actor = getActor(actorId);\n    const elem = document.getElementById(text.text);\n    try {\n        const text2 = elem.innerHTML;\n        const details = JSON.parse(text2);\n        if (details[\"properties\"]) {\n            insertProperties(actor, details[\"properties\"]);\n        }\n        if (details[\"links\"]) {\n            insertLinks(actor, details[\"links\"]);\n        }\n    } catch (e) {\n        _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.l.error(\"error while parsing actor details text\", e);\n    }\n};\nconst getActorProperty = function(actor, key) {\n    if (actor !== void 0 && actor.properties !== void 0) {\n        return actor.properties[key];\n    }\n    return void 0;\n};\nconst apply = function(param) {\n    if (Array.isArray(param)) {\n        param.forEach(function(item) {\n            apply(item);\n        });\n    } else {\n        switch(param.type){\n            case \"sequenceIndex\":\n                messages.push({\n                    from: void 0,\n                    to: void 0,\n                    message: {\n                        start: param.sequenceIndex,\n                        step: param.sequenceIndexStep,\n                        visible: param.sequenceVisible\n                    },\n                    wrap: false,\n                    type: param.signalType\n                });\n                break;\n            case \"addParticipant\":\n                addActor(param.actor, param.actor, param.description, param.draw);\n                break;\n            case \"createParticipant\":\n                if (actors[param.actor]) {\n                    throw new Error(\"It is not possible to have actors with the same id, even if one is destroyed before the next is created. Use 'AS' aliases to simulate the behavior\");\n                }\n                lastCreated = param.actor;\n                addActor(param.actor, param.actor, param.description, param.draw);\n                createdActors[param.actor] = messages.length;\n                break;\n            case \"destroyParticipant\":\n                lastDestroyed = param.actor;\n                destroyedActors[param.actor] = messages.length;\n                break;\n            case \"activeStart\":\n                addSignal(param.actor, void 0, void 0, param.signalType);\n                break;\n            case \"activeEnd\":\n                addSignal(param.actor, void 0, void 0, param.signalType);\n                break;\n            case \"addNote\":\n                addNote(param.actor, param.placement, param.text);\n                break;\n            case \"addLinks\":\n                addLinks(param.actor, param.text);\n                break;\n            case \"addALink\":\n                addALink(param.actor, param.text);\n                break;\n            case \"addProperties\":\n                addProperties(param.actor, param.text);\n                break;\n            case \"addDetails\":\n                addDetails(param.actor, param.text);\n                break;\n            case \"addMessage\":\n                if (lastCreated) {\n                    if (param.to !== lastCreated) {\n                        throw new Error(\"The created participant \" + lastCreated + \" does not have an associated creating message after its declaration. Please check the sequence diagram.\");\n                    } else {\n                        lastCreated = void 0;\n                    }\n                } else if (lastDestroyed) {\n                    if (param.to !== lastDestroyed && param.from !== lastDestroyed) {\n                        throw new Error(\"The destroyed participant \" + lastDestroyed + \" does not have an associated destroying message after its declaration. Please check the sequence diagram.\");\n                    } else {\n                        lastDestroyed = void 0;\n                    }\n                }\n                addSignal(param.from, param.to, param.msg, param.signalType, param.activate);\n                break;\n            case \"boxStart\":\n                addBox(param.boxData);\n                break;\n            case \"boxEnd\":\n                boxEnd();\n                break;\n            case \"loopStart\":\n                addSignal(void 0, void 0, param.loopText, param.signalType);\n                break;\n            case \"loopEnd\":\n                addSignal(void 0, void 0, void 0, param.signalType);\n                break;\n            case \"rectStart\":\n                addSignal(void 0, void 0, param.color, param.signalType);\n                break;\n            case \"rectEnd\":\n                addSignal(void 0, void 0, void 0, param.signalType);\n                break;\n            case \"optStart\":\n                addSignal(void 0, void 0, param.optText, param.signalType);\n                break;\n            case \"optEnd\":\n                addSignal(void 0, void 0, void 0, param.signalType);\n                break;\n            case \"altStart\":\n                addSignal(void 0, void 0, param.altText, param.signalType);\n                break;\n            case \"else\":\n                addSignal(void 0, void 0, param.altText, param.signalType);\n                break;\n            case \"altEnd\":\n                addSignal(void 0, void 0, void 0, param.signalType);\n                break;\n            case \"setAccTitle\":\n                (0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.s)(param.text);\n                break;\n            case \"parStart\":\n                addSignal(void 0, void 0, param.parText, param.signalType);\n                break;\n            case \"and\":\n                addSignal(void 0, void 0, param.parText, param.signalType);\n                break;\n            case \"parEnd\":\n                addSignal(void 0, void 0, void 0, param.signalType);\n                break;\n            case \"criticalStart\":\n                addSignal(void 0, void 0, param.criticalText, param.signalType);\n                break;\n            case \"option\":\n                addSignal(void 0, void 0, param.optionText, param.signalType);\n                break;\n            case \"criticalEnd\":\n                addSignal(void 0, void 0, void 0, param.signalType);\n                break;\n            case \"breakStart\":\n                addSignal(void 0, void 0, param.breakText, param.signalType);\n                break;\n            case \"breakEnd\":\n                addSignal(void 0, void 0, void 0, param.signalType);\n                break;\n        }\n    }\n};\nconst db = {\n    addActor,\n    addMessage,\n    addSignal,\n    addLinks,\n    addDetails,\n    addProperties,\n    autoWrap,\n    setWrap,\n    enableSequenceNumbers,\n    disableSequenceNumbers,\n    showSequenceNumbers,\n    getMessages,\n    getActors,\n    getCreatedActors,\n    getDestroyedActors,\n    getActor,\n    getActorKeys,\n    getActorProperty,\n    getAccTitle: _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.g,\n    getBoxes,\n    getDiagramTitle: _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.r,\n    setDiagramTitle: _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.q,\n    getConfig: ()=>(0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.c)().sequence,\n    clear,\n    parseMessage,\n    parseBoxData,\n    LINETYPE,\n    ARROWTYPE,\n    PLACEMENT,\n    addNote,\n    setAccTitle: _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.s,\n    apply,\n    setAccDescription: _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.b,\n    getAccDescription: _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.a,\n    hasAtLeastOneBox,\n    hasAtLeastOneBoxWithTitle\n};\nconst getStyles = (options)=>\".actor {\\n    stroke: \".concat(options.actorBorder, \";\\n    fill: \").concat(options.actorBkg, \";\\n  }\\n\\n  text.actor > tspan {\\n    fill: \").concat(options.actorTextColor, \";\\n    stroke: none;\\n  }\\n\\n  .actor-line {\\n    stroke: \").concat(options.actorLineColor, \";\\n  }\\n\\n  .messageLine0 {\\n    stroke-width: 1.5;\\n    stroke-dasharray: none;\\n    stroke: \").concat(options.signalColor, \";\\n  }\\n\\n  .messageLine1 {\\n    stroke-width: 1.5;\\n    stroke-dasharray: 2, 2;\\n    stroke: \").concat(options.signalColor, \";\\n  }\\n\\n  #arrowhead path {\\n    fill: \").concat(options.signalColor, \";\\n    stroke: \").concat(options.signalColor, \";\\n  }\\n\\n  .sequenceNumber {\\n    fill: \").concat(options.sequenceNumberColor, \";\\n  }\\n\\n  #sequencenumber {\\n    fill: \").concat(options.signalColor, \";\\n  }\\n\\n  #crosshead path {\\n    fill: \").concat(options.signalColor, \";\\n    stroke: \").concat(options.signalColor, \";\\n  }\\n\\n  .messageText {\\n    fill: \").concat(options.signalTextColor, \";\\n    stroke: none;\\n  }\\n\\n  .labelBox {\\n    stroke: \").concat(options.labelBoxBorderColor, \";\\n    fill: \").concat(options.labelBoxBkgColor, \";\\n  }\\n\\n  .labelText, .labelText > tspan {\\n    fill: \").concat(options.labelTextColor, \";\\n    stroke: none;\\n  }\\n\\n  .loopText, .loopText > tspan {\\n    fill: \").concat(options.loopTextColor, \";\\n    stroke: none;\\n  }\\n\\n  .loopLine {\\n    stroke-width: 2px;\\n    stroke-dasharray: 2, 2;\\n    stroke: \").concat(options.labelBoxBorderColor, \";\\n    fill: \").concat(options.labelBoxBorderColor, \";\\n  }\\n\\n  .note {\\n    //stroke: #decc93;\\n    stroke: \").concat(options.noteBorderColor, \";\\n    fill: \").concat(options.noteBkgColor, \";\\n  }\\n\\n  .noteText, .noteText > tspan {\\n    fill: \").concat(options.noteTextColor, \";\\n    stroke: none;\\n  }\\n\\n  .activation0 {\\n    fill: \").concat(options.activationBkgColor, \";\\n    stroke: \").concat(options.activationBorderColor, \";\\n  }\\n\\n  .activation1 {\\n    fill: \").concat(options.activationBkgColor, \";\\n    stroke: \").concat(options.activationBorderColor, \";\\n  }\\n\\n  .activation2 {\\n    fill: \").concat(options.activationBkgColor, \";\\n    stroke: \").concat(options.activationBorderColor, \";\\n  }\\n\\n  .actorPopupMenu {\\n    position: absolute;\\n  }\\n\\n  .actorPopupMenuPanel {\\n    position: absolute;\\n    fill: \").concat(options.actorBkg, \";\\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\\n    filter: drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4));\\n}\\n  .actor-man line {\\n    stroke: \").concat(options.actorBorder, \";\\n    fill: \").concat(options.actorBkg, \";\\n  }\\n  .actor-man circle, line {\\n    stroke: \").concat(options.actorBorder, \";\\n    fill: \").concat(options.actorBkg, \";\\n    stroke-width: 2px;\\n  }\\n\");\nconst styles = getStyles;\nconst ACTOR_TYPE_WIDTH = 18 * 2;\nconst drawRect = function(elem, rectData) {\n    return (0,_svgDrawCommon_ad5ef572_js__WEBPACK_IMPORTED_MODULE_6__.d)(elem, rectData);\n};\nconst addPopupInteraction = (id, actorCnt2)=>{\n    (0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.F)(()=>{\n        const arr = document.querySelectorAll(id);\n        if (arr.length === 0) {\n            return;\n        }\n        arr[0].addEventListener(\"mouseover\", function() {\n            popupMenuUpFunc(\"actor\" + actorCnt2 + \"_popup\");\n        });\n        arr[0].addEventListener(\"mouseout\", function() {\n            popupMenuDownFunc(\"actor\" + actorCnt2 + \"_popup\");\n        });\n    });\n};\nconst drawPopup = function(elem, actor, minMenuWidth, textAttrs, forceMenus) {\n    if (actor.links === void 0 || actor.links === null || Object.keys(actor.links).length === 0) {\n        return {\n            height: 0,\n            width: 0\n        };\n    }\n    const links = actor.links;\n    const actorCnt2 = actor.actorCnt;\n    const rectData = actor.rectData;\n    var displayValue = \"none\";\n    if (forceMenus) {\n        displayValue = \"block !important\";\n    }\n    const g = elem.append(\"g\");\n    g.attr(\"id\", \"actor\" + actorCnt2 + \"_popup\");\n    g.attr(\"class\", \"actorPopupMenu\");\n    g.attr(\"display\", displayValue);\n    addPopupInteraction(\"#actor\" + actorCnt2 + \"_popup\", actorCnt2);\n    var actorClass = \"\";\n    if (rectData.class !== void 0) {\n        actorClass = \" \" + rectData.class;\n    }\n    let menuWidth = rectData.width > minMenuWidth ? rectData.width : minMenuWidth;\n    const rectElem = g.append(\"rect\");\n    rectElem.attr(\"class\", \"actorPopupMenuPanel\" + actorClass);\n    rectElem.attr(\"x\", rectData.x);\n    rectElem.attr(\"y\", rectData.height);\n    rectElem.attr(\"fill\", rectData.fill);\n    rectElem.attr(\"stroke\", rectData.stroke);\n    rectElem.attr(\"width\", menuWidth);\n    rectElem.attr(\"height\", rectData.height);\n    rectElem.attr(\"rx\", rectData.rx);\n    rectElem.attr(\"ry\", rectData.ry);\n    if (links != null) {\n        var linkY = 20;\n        for(let key in links){\n            var linkElem = g.append(\"a\");\n            var sanitizedLink = (0,_braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_1__.sanitizeUrl)(links[key]);\n            linkElem.attr(\"xlink:href\", sanitizedLink);\n            linkElem.attr(\"target\", \"_blank\");\n            _drawMenuItemTextCandidateFunc(textAttrs)(key, linkElem, rectData.x + 10, rectData.height + linkY, menuWidth, 20, {\n                class: \"actor\"\n            }, textAttrs);\n            linkY += 30;\n        }\n    }\n    rectElem.attr(\"height\", linkY);\n    return {\n        height: rectData.height + linkY,\n        width: menuWidth\n    };\n};\nconst popupMenu = function(popid) {\n    return \"var pu = document.getElementById('\" + popid + \"'); if (pu != null) { pu.style.display = 'block'; }\";\n};\nconst popdownMenu = function(popid) {\n    return \"var pu = document.getElementById('\" + popid + \"'); if (pu != null) { pu.style.display = 'none'; }\";\n};\nconst popupMenuUpFunc = function(popupId) {\n    var pu = document.getElementById(popupId);\n    if (pu != null) {\n        pu.style.display = \"block\";\n    }\n};\nconst popupMenuDownFunc = function(popupId) {\n    var pu = document.getElementById(popupId);\n    if (pu != null) {\n        pu.style.display = \"none\";\n    }\n};\nconst drawText = function(elem, textData) {\n    let prevTextHeight = 0;\n    let textHeight = 0;\n    const lines = textData.text.split(_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.lineBreakRegex);\n    const [_textFontSize, _textFontSizePx] = (0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.C)(textData.fontSize);\n    let textElems = [];\n    let dy = 0;\n    let yfunc = ()=>textData.y;\n    if (textData.valign !== void 0 && textData.textMargin !== void 0 && textData.textMargin > 0) {\n        switch(textData.valign){\n            case \"top\":\n            case \"start\":\n                yfunc = ()=>Math.round(textData.y + textData.textMargin);\n                break;\n            case \"middle\":\n            case \"center\":\n                yfunc = ()=>Math.round(textData.y + (prevTextHeight + textHeight + textData.textMargin) / 2);\n                break;\n            case \"bottom\":\n            case \"end\":\n                yfunc = ()=>Math.round(textData.y + (prevTextHeight + textHeight + 2 * textData.textMargin) - textData.textMargin);\n                break;\n        }\n    }\n    if (textData.anchor !== void 0 && textData.textMargin !== void 0 && textData.width !== void 0) {\n        switch(textData.anchor){\n            case \"left\":\n            case \"start\":\n                textData.x = Math.round(textData.x + textData.textMargin);\n                textData.anchor = \"start\";\n                textData.dominantBaseline = \"middle\";\n                textData.alignmentBaseline = \"middle\";\n                break;\n            case \"middle\":\n            case \"center\":\n                textData.x = Math.round(textData.x + textData.width / 2);\n                textData.anchor = \"middle\";\n                textData.dominantBaseline = \"middle\";\n                textData.alignmentBaseline = \"middle\";\n                break;\n            case \"right\":\n            case \"end\":\n                textData.x = Math.round(textData.x + textData.width - textData.textMargin);\n                textData.anchor = \"end\";\n                textData.dominantBaseline = \"middle\";\n                textData.alignmentBaseline = \"middle\";\n                break;\n        }\n    }\n    for (let [i, line] of lines.entries()){\n        if (textData.textMargin !== void 0 && textData.textMargin === 0 && _textFontSize !== void 0) {\n            dy = i * _textFontSize;\n        }\n        const textElem = elem.append(\"text\");\n        textElem.attr(\"x\", textData.x);\n        textElem.attr(\"y\", yfunc());\n        if (textData.anchor !== void 0) {\n            textElem.attr(\"text-anchor\", textData.anchor).attr(\"dominant-baseline\", textData.dominantBaseline).attr(\"alignment-baseline\", textData.alignmentBaseline);\n        }\n        if (textData.fontFamily !== void 0) {\n            textElem.style(\"font-family\", textData.fontFamily);\n        }\n        if (_textFontSizePx !== void 0) {\n            textElem.style(\"font-size\", _textFontSizePx);\n        }\n        if (textData.fontWeight !== void 0) {\n            textElem.style(\"font-weight\", textData.fontWeight);\n        }\n        if (textData.fill !== void 0) {\n            textElem.attr(\"fill\", textData.fill);\n        }\n        if (textData.class !== void 0) {\n            textElem.attr(\"class\", textData.class);\n        }\n        if (textData.dy !== void 0) {\n            textElem.attr(\"dy\", textData.dy);\n        } else if (dy !== 0) {\n            textElem.attr(\"dy\", dy);\n        }\n        const text = line || _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.Z;\n        if (textData.tspan) {\n            const span = textElem.append(\"tspan\");\n            span.attr(\"x\", textData.x);\n            if (textData.fill !== void 0) {\n                span.attr(\"fill\", textData.fill);\n            }\n            span.text(text);\n        } else {\n            textElem.text(text);\n        }\n        if (textData.valign !== void 0 && textData.textMargin !== void 0 && textData.textMargin > 0) {\n            textHeight += (textElem._groups || textElem)[0][0].getBBox().height;\n            prevTextHeight = textHeight;\n        }\n        textElems.push(textElem);\n    }\n    return textElems;\n};\nconst drawLabel = function(elem, txtObject) {\n    function genPoints(x, y, width, height, cut) {\n        return x + \",\" + y + \" \" + (x + width) + \",\" + y + \" \" + (x + width) + \",\" + (y + height - cut) + \" \" + (x + width - cut * 1.2) + \",\" + (y + height) + \" \" + x + \",\" + (y + height);\n    }\n    const polygon = elem.append(\"polygon\");\n    polygon.attr(\"points\", genPoints(txtObject.x, txtObject.y, txtObject.width, txtObject.height, 7));\n    polygon.attr(\"class\", \"labelBox\");\n    txtObject.y = txtObject.y + txtObject.height / 2;\n    drawText(elem, txtObject);\n    return polygon;\n};\nlet actorCnt = -1;\nconst fixLifeLineHeights = (diagram2, actors2, actorKeys, conf2)=>{\n    if (!diagram2.select) {\n        return;\n    }\n    actorKeys.forEach((actorKey)=>{\n        const actor = actors2[actorKey];\n        const actorDOM = diagram2.select(\"#actor\" + actor.actorCnt);\n        if (!conf2.mirrorActors && actor.stopy) {\n            actorDOM.attr(\"y2\", actor.stopy + actor.height / 2);\n        } else if (conf2.mirrorActors) {\n            actorDOM.attr(\"y2\", actor.stopy);\n        }\n    });\n};\nconst drawActorTypeParticipant = function(elem, actor, conf2, isFooter) {\n    const actorY = isFooter ? actor.stopy : actor.starty;\n    const center = actor.x + actor.width / 2;\n    const centerY = actorY + 5;\n    const boxpluslineGroup = elem.append(\"g\").lower();\n    var g = boxpluslineGroup;\n    if (!isFooter) {\n        actorCnt++;\n        g.append(\"line\").attr(\"id\", \"actor\" + actorCnt).attr(\"x1\", center).attr(\"y1\", centerY).attr(\"x2\", center).attr(\"y2\", 2e3).attr(\"class\", \"actor-line\").attr(\"class\", \"200\").attr(\"stroke-width\", \"0.5px\").attr(\"stroke\", \"#999\");\n        g = boxpluslineGroup.append(\"g\");\n        actor.actorCnt = actorCnt;\n        if (actor.links != null) {\n            g.attr(\"id\", \"root-\" + actorCnt);\n            addPopupInteraction(\"#root-\" + actorCnt, actorCnt);\n        }\n    }\n    const rect = (0,_svgDrawCommon_ad5ef572_js__WEBPACK_IMPORTED_MODULE_6__.g)();\n    var cssclass = \"actor\";\n    if (actor.properties != null && actor.properties[\"class\"]) {\n        cssclass = actor.properties[\"class\"];\n    } else {\n        rect.fill = \"#eaeaea\";\n    }\n    rect.x = actor.x;\n    rect.y = actorY;\n    rect.width = actor.width;\n    rect.height = actor.height;\n    rect.class = cssclass;\n    rect.rx = 3;\n    rect.ry = 3;\n    const rectElem = drawRect(g, rect);\n    actor.rectData = rect;\n    if (actor.properties != null && actor.properties[\"icon\"]) {\n        const iconSrc = actor.properties[\"icon\"].trim();\n        if (iconSrc.charAt(0) === \"@\") {\n            (0,_svgDrawCommon_ad5ef572_js__WEBPACK_IMPORTED_MODULE_6__.b)(g, rect.x + rect.width - 20, rect.y + 10, iconSrc.substr(1));\n        } else {\n            (0,_svgDrawCommon_ad5ef572_js__WEBPACK_IMPORTED_MODULE_6__.c)(g, rect.x + rect.width - 20, rect.y + 10, iconSrc);\n        }\n    }\n    _drawTextCandidateFunc(conf2)(actor.description, g, rect.x, rect.y, rect.width, rect.height, {\n        class: \"actor\"\n    }, conf2);\n    let height = actor.height;\n    if (rectElem.node) {\n        const bounds2 = rectElem.node().getBBox();\n        actor.height = bounds2.height;\n        height = bounds2.height;\n    }\n    return height;\n};\nconst drawActorTypeActor = function(elem, actor, conf2, isFooter) {\n    const actorY = isFooter ? actor.stopy : actor.starty;\n    const center = actor.x + actor.width / 2;\n    const centerY = actorY + 80;\n    elem.lower();\n    if (!isFooter) {\n        actorCnt++;\n        elem.append(\"line\").attr(\"id\", \"actor\" + actorCnt).attr(\"x1\", center).attr(\"y1\", centerY).attr(\"x2\", center).attr(\"y2\", 2e3).attr(\"class\", \"actor-line\").attr(\"class\", \"200\").attr(\"stroke-width\", \"0.5px\").attr(\"stroke\", \"#999\");\n        actor.actorCnt = actorCnt;\n    }\n    const actElem = elem.append(\"g\");\n    actElem.attr(\"class\", \"actor-man\");\n    const rect = (0,_svgDrawCommon_ad5ef572_js__WEBPACK_IMPORTED_MODULE_6__.g)();\n    rect.x = actor.x;\n    rect.y = actorY;\n    rect.fill = \"#eaeaea\";\n    rect.width = actor.width;\n    rect.height = actor.height;\n    rect.class = \"actor\";\n    rect.rx = 3;\n    rect.ry = 3;\n    actElem.append(\"line\").attr(\"id\", \"actor-man-torso\" + actorCnt).attr(\"x1\", center).attr(\"y1\", actorY + 25).attr(\"x2\", center).attr(\"y2\", actorY + 45);\n    actElem.append(\"line\").attr(\"id\", \"actor-man-arms\" + actorCnt).attr(\"x1\", center - ACTOR_TYPE_WIDTH / 2).attr(\"y1\", actorY + 33).attr(\"x2\", center + ACTOR_TYPE_WIDTH / 2).attr(\"y2\", actorY + 33);\n    actElem.append(\"line\").attr(\"x1\", center - ACTOR_TYPE_WIDTH / 2).attr(\"y1\", actorY + 60).attr(\"x2\", center).attr(\"y2\", actorY + 45);\n    actElem.append(\"line\").attr(\"x1\", center).attr(\"y1\", actorY + 45).attr(\"x2\", center + ACTOR_TYPE_WIDTH / 2 - 2).attr(\"y2\", actorY + 60);\n    const circle = actElem.append(\"circle\");\n    circle.attr(\"cx\", actor.x + actor.width / 2);\n    circle.attr(\"cy\", actorY + 10);\n    circle.attr(\"r\", 15);\n    circle.attr(\"width\", actor.width);\n    circle.attr(\"height\", actor.height);\n    const bounds2 = actElem.node().getBBox();\n    actor.height = bounds2.height;\n    _drawTextCandidateFunc(conf2)(actor.description, actElem, rect.x, rect.y + 35, rect.width, rect.height, {\n        class: \"actor\"\n    }, conf2);\n    return actor.height;\n};\nconst drawActor = function(elem, actor, conf2, isFooter) {\n    switch(actor.type){\n        case \"actor\":\n            return drawActorTypeActor(elem, actor, conf2, isFooter);\n        case \"participant\":\n            return drawActorTypeParticipant(elem, actor, conf2, isFooter);\n    }\n};\nconst drawBox = function(elem, box, conf2) {\n    const boxplustextGroup = elem.append(\"g\");\n    const g = boxplustextGroup;\n    drawBackgroundRect(g, box);\n    if (box.name) {\n        _drawTextCandidateFunc(conf2)(box.name, g, box.x, box.y + (box.textMaxHeight || 0) / 2, box.width, 0, {\n            class: \"text\"\n        }, conf2);\n    }\n    g.lower();\n};\nconst anchorElement = function(elem) {\n    return elem.append(\"g\");\n};\nconst drawActivation = function(elem, bounds2, verticalPos, conf2, actorActivations2) {\n    const rect = (0,_svgDrawCommon_ad5ef572_js__WEBPACK_IMPORTED_MODULE_6__.g)();\n    const g = bounds2.anchored;\n    rect.x = bounds2.startx;\n    rect.y = bounds2.starty;\n    rect.class = \"activation\" + actorActivations2 % 3;\n    rect.width = bounds2.stopx - bounds2.startx;\n    rect.height = verticalPos - bounds2.starty;\n    drawRect(g, rect);\n};\nconst drawLoop = function(elem, loopModel, labelText, conf2) {\n    const { boxMargin, boxTextMargin, labelBoxHeight, labelBoxWidth, messageFontFamily: fontFamily, messageFontSize: fontSize, messageFontWeight: fontWeight } = conf2;\n    const g = elem.append(\"g\");\n    const drawLoopLine = function(startx, starty, stopx, stopy) {\n        return g.append(\"line\").attr(\"x1\", startx).attr(\"y1\", starty).attr(\"x2\", stopx).attr(\"y2\", stopy).attr(\"class\", \"loopLine\");\n    };\n    drawLoopLine(loopModel.startx, loopModel.starty, loopModel.stopx, loopModel.starty);\n    drawLoopLine(loopModel.stopx, loopModel.starty, loopModel.stopx, loopModel.stopy);\n    drawLoopLine(loopModel.startx, loopModel.stopy, loopModel.stopx, loopModel.stopy);\n    drawLoopLine(loopModel.startx, loopModel.starty, loopModel.startx, loopModel.stopy);\n    if (loopModel.sections !== void 0) {\n        loopModel.sections.forEach(function(item) {\n            drawLoopLine(loopModel.startx, item.y, loopModel.stopx, item.y).style(\"stroke-dasharray\", \"3, 3\");\n        });\n    }\n    let txt = (0,_svgDrawCommon_ad5ef572_js__WEBPACK_IMPORTED_MODULE_6__.e)();\n    txt.text = labelText;\n    txt.x = loopModel.startx;\n    txt.y = loopModel.starty;\n    txt.fontFamily = fontFamily;\n    txt.fontSize = fontSize;\n    txt.fontWeight = fontWeight;\n    txt.anchor = \"middle\";\n    txt.valign = \"middle\";\n    txt.tspan = false;\n    txt.width = labelBoxWidth || 50;\n    txt.height = labelBoxHeight || 20;\n    txt.textMargin = boxTextMargin;\n    txt.class = \"labelText\";\n    drawLabel(g, txt);\n    txt = getTextObj();\n    txt.text = loopModel.title;\n    txt.x = loopModel.startx + labelBoxWidth / 2 + (loopModel.stopx - loopModel.startx) / 2;\n    txt.y = loopModel.starty + boxMargin + boxTextMargin;\n    txt.anchor = \"middle\";\n    txt.valign = \"middle\";\n    txt.textMargin = boxTextMargin;\n    txt.class = \"loopText\";\n    txt.fontFamily = fontFamily;\n    txt.fontSize = fontSize;\n    txt.fontWeight = fontWeight;\n    txt.wrap = true;\n    let textElem = drawText(g, txt);\n    if (loopModel.sectionTitles !== void 0) {\n        loopModel.sectionTitles.forEach(function(item, idx) {\n            if (item.message) {\n                txt.text = item.message;\n                txt.x = loopModel.startx + (loopModel.stopx - loopModel.startx) / 2;\n                txt.y = loopModel.sections[idx].y + boxMargin + boxTextMargin;\n                txt.class = \"loopText\";\n                txt.anchor = \"middle\";\n                txt.valign = \"middle\";\n                txt.tspan = false;\n                txt.fontFamily = fontFamily;\n                txt.fontSize = fontSize;\n                txt.fontWeight = fontWeight;\n                txt.wrap = loopModel.wrap;\n                textElem = drawText(g, txt);\n                let sectionHeight = Math.round(textElem.map((te)=>(te._groups || te)[0][0].getBBox().height).reduce((acc, curr)=>acc + curr));\n                loopModel.sections[idx].height += sectionHeight - (boxMargin + boxTextMargin);\n            }\n        });\n    }\n    loopModel.height = Math.round(loopModel.stopy - loopModel.starty);\n    return g;\n};\nconst drawBackgroundRect = function(elem, bounds2) {\n    (0,_svgDrawCommon_ad5ef572_js__WEBPACK_IMPORTED_MODULE_6__.a)(elem, bounds2);\n};\nconst insertDatabaseIcon = function(elem) {\n    elem.append(\"defs\").append(\"symbol\").attr(\"id\", \"database\").attr(\"fill-rule\", \"evenodd\").attr(\"clip-rule\", \"evenodd\").append(\"path\").attr(\"transform\", \"scale(.5)\").attr(\"d\", \"M12.258.001l.256.004.255.005.253.008.251.01.249.012.247.015.246.016.242.019.241.02.239.023.236.024.233.027.231.028.229.031.225.032.223.034.22.036.217.038.214.04.211.041.208.043.205.045.201.046.198.048.194.05.191.051.187.053.183.054.18.056.175.057.172.059.168.06.163.061.16.063.155.064.15.066.074.033.073.033.071.034.07.034.069.035.068.035.067.035.066.035.064.036.064.036.062.036.06.036.06.037.058.037.058.037.055.038.055.038.053.038.052.038.051.039.05.039.048.039.047.039.045.04.044.04.043.04.041.04.04.041.039.041.037.041.036.041.034.041.033.042.032.042.03.042.029.042.027.042.026.043.024.043.023.043.021.043.02.043.018.044.017.043.015.044.013.044.012.044.011.045.009.044.007.045.006.045.004.045.002.045.001.045v17l-.001.045-.002.045-.004.045-.006.045-.007.045-.009.044-.011.045-.012.044-.013.044-.015.044-.017.043-.018.044-.02.043-.021.043-.023.043-.024.043-.026.043-.027.042-.029.042-.03.042-.032.042-.033.042-.034.041-.036.041-.037.041-.039.041-.04.041-.041.04-.043.04-.044.04-.045.04-.047.039-.048.039-.05.039-.051.039-.052.038-.053.038-.055.038-.055.038-.058.037-.058.037-.06.037-.06.036-.062.036-.064.036-.064.036-.066.035-.067.035-.068.035-.069.035-.07.034-.071.034-.073.033-.074.033-.15.066-.155.064-.16.063-.163.061-.168.06-.172.059-.175.057-.18.056-.183.054-.187.053-.191.051-.194.05-.198.048-.201.046-.205.045-.208.043-.211.041-.214.04-.217.038-.22.036-.223.034-.225.032-.229.031-.231.028-.233.027-.236.024-.239.023-.241.02-.242.019-.246.016-.247.015-.249.012-.251.01-.253.008-.255.005-.256.004-.258.001-.258-.001-.256-.004-.255-.005-.253-.008-.251-.01-.249-.012-.247-.015-.245-.016-.243-.019-.241-.02-.238-.023-.236-.024-.234-.027-.231-.028-.228-.031-.226-.032-.223-.034-.22-.036-.217-.038-.214-.04-.211-.041-.208-.043-.204-.045-.201-.046-.198-.048-.195-.05-.19-.051-.187-.053-.184-.054-.179-.056-.176-.057-.172-.059-.167-.06-.164-.061-.159-.063-.155-.064-.151-.066-.074-.033-.072-.033-.072-.034-.07-.034-.069-.035-.068-.035-.067-.035-.066-.035-.064-.036-.063-.036-.062-.036-.061-.036-.06-.037-.058-.037-.057-.037-.056-.038-.055-.038-.053-.038-.052-.038-.051-.039-.049-.039-.049-.039-.046-.039-.046-.04-.044-.04-.043-.04-.041-.04-.04-.041-.039-.041-.037-.041-.036-.041-.034-.041-.033-.042-.032-.042-.03-.042-.029-.042-.027-.042-.026-.043-.024-.043-.023-.043-.021-.043-.02-.043-.018-.044-.017-.043-.015-.044-.013-.044-.012-.044-.011-.045-.009-.044-.007-.045-.006-.045-.004-.045-.002-.045-.001-.045v-17l.001-.045.002-.045.004-.045.006-.045.007-.045.009-.044.011-.045.012-.044.013-.044.015-.044.017-.043.018-.044.02-.043.021-.043.023-.043.024-.043.026-.043.027-.042.029-.042.03-.042.032-.042.033-.042.034-.041.036-.041.037-.041.039-.041.04-.041.041-.04.043-.04.044-.04.046-.04.046-.039.049-.039.049-.039.051-.039.052-.038.053-.038.055-.038.056-.038.057-.037.058-.037.06-.037.061-.036.062-.036.063-.036.064-.036.066-.035.067-.035.068-.035.069-.035.07-.034.072-.034.072-.033.074-.033.151-.066.155-.064.159-.063.164-.061.167-.06.172-.059.176-.057.179-.056.184-.054.187-.053.19-.051.195-.05.198-.048.201-.046.204-.045.208-.043.211-.041.214-.04.217-.038.22-.036.223-.034.226-.032.228-.031.231-.028.234-.027.236-.024.238-.023.241-.02.243-.019.245-.016.247-.015.249-.012.251-.01.253-.008.255-.005.256-.004.258-.001.258.001zm-9.258 20.499v.01l.001.021.003.021.004.022.005.021.006.022.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.023.018.024.019.024.021.024.022.025.023.024.024.025.052.049.056.05.061.051.066.051.07.051.075.051.079.052.084.052.088.052.092.052.097.052.102.051.105.052.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.048.144.049.147.047.152.047.155.047.16.045.163.045.167.043.171.043.176.041.178.041.183.039.187.039.19.037.194.035.197.035.202.033.204.031.209.03.212.029.216.027.219.025.222.024.226.021.23.02.233.018.236.016.24.015.243.012.246.01.249.008.253.005.256.004.259.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.021.224-.024.22-.026.216-.027.212-.028.21-.031.205-.031.202-.034.198-.034.194-.036.191-.037.187-.039.183-.04.179-.04.175-.042.172-.043.168-.044.163-.045.16-.046.155-.046.152-.047.148-.048.143-.049.139-.049.136-.05.131-.05.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.053.083-.051.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.05.023-.024.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.023.01-.022.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.127l-.077.055-.08.053-.083.054-.085.053-.087.052-.09.052-.093.051-.095.05-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.045-.118.044-.12.043-.122.042-.124.042-.126.041-.128.04-.13.04-.132.038-.134.038-.135.037-.138.037-.139.035-.142.035-.143.034-.144.033-.147.032-.148.031-.15.03-.151.03-.153.029-.154.027-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.01-.179.008-.179.008-.181.006-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.006-.179-.008-.179-.008-.178-.01-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.027-.153-.029-.151-.03-.15-.03-.148-.031-.146-.032-.145-.033-.143-.034-.141-.035-.14-.035-.137-.037-.136-.037-.134-.038-.132-.038-.13-.04-.128-.04-.126-.041-.124-.042-.122-.042-.12-.044-.117-.043-.116-.045-.113-.045-.112-.046-.109-.047-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.05-.093-.052-.09-.051-.087-.052-.085-.053-.083-.054-.08-.054-.077-.054v4.127zm0-5.654v.011l.001.021.003.021.004.021.005.022.006.022.007.022.009.022.01.022.011.023.012.023.013.023.015.024.016.023.017.024.018.024.019.024.021.024.022.024.023.025.024.024.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.052.11.051.114.051.119.052.123.05.127.051.131.05.135.049.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.044.171.042.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.022.23.02.233.018.236.016.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.012.241-.015.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.048.139-.05.136-.049.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.051.051-.049.023-.025.023-.024.021-.025.02-.024.019-.024.018-.024.017-.024.015-.023.014-.023.013-.024.012-.022.01-.023.01-.023.008-.022.006-.022.006-.022.004-.021.004-.022.001-.021.001-.021v-4.139l-.077.054-.08.054-.083.054-.085.052-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.044-.118.044-.12.044-.122.042-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.035-.143.033-.144.033-.147.033-.148.031-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.009-.179.009-.179.007-.181.007-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.007-.179-.007-.179-.009-.178-.009-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.031-.146-.033-.145-.033-.143-.033-.141-.035-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.04-.126-.041-.124-.042-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.051-.093-.051-.09-.051-.087-.053-.085-.052-.083-.054-.08-.054-.077-.054v4.139zm0-5.666v.011l.001.02.003.022.004.021.005.022.006.021.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.024.018.023.019.024.021.025.022.024.023.024.024.025.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.051.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.043.171.043.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.021.23.02.233.018.236.017.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.013.241-.014.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.049.139-.049.136-.049.131-.051.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.049.023-.025.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.022.01-.023.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.153l-.077.054-.08.054-.083.053-.085.053-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.048-.105.048-.106.048-.109.046-.111.046-.114.046-.115.044-.118.044-.12.043-.122.043-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.034-.143.034-.144.033-.147.032-.148.032-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.024-.161.024-.162.023-.163.023-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.01-.178.01-.179.009-.179.007-.181.006-.182.006-.182.004-.184.003-.184.001-.185.001-.185-.001-.184-.001-.184-.003-.182-.004-.182-.006-.181-.006-.179-.007-.179-.009-.178-.01-.176-.01-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.023-.162-.023-.161-.024-.159-.024-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.032-.146-.032-.145-.033-.143-.034-.141-.034-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.041-.126-.041-.124-.041-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.048-.105-.048-.102-.048-.1-.05-.097-.049-.095-.051-.093-.051-.09-.052-.087-.052-.085-.053-.083-.053-.08-.054-.077-.054v4.153zm8.74-8.179l-.257.004-.254.005-.25.008-.247.011-.244.012-.241.014-.237.016-.233.018-.231.021-.226.022-.224.023-.22.026-.216.027-.212.028-.21.031-.205.032-.202.033-.198.034-.194.036-.191.038-.187.038-.183.04-.179.041-.175.042-.172.043-.168.043-.163.045-.16.046-.155.046-.152.048-.148.048-.143.048-.139.049-.136.05-.131.05-.126.051-.123.051-.118.051-.114.052-.11.052-.106.052-.101.052-.096.052-.092.052-.088.052-.083.052-.079.052-.074.051-.07.052-.065.051-.06.05-.056.05-.051.05-.023.025-.023.024-.021.024-.02.025-.019.024-.018.024-.017.023-.015.024-.014.023-.013.023-.012.023-.01.023-.01.022-.008.022-.006.023-.006.021-.004.022-.004.021-.001.021-.001.021.001.021.001.021.004.021.004.022.006.021.006.023.008.022.01.022.01.023.012.023.013.023.014.023.015.024.017.023.018.024.019.024.02.025.021.024.023.024.023.025.051.05.056.05.06.05.065.051.07.052.074.051.079.052.083.052.088.052.092.052.096.052.101.052.106.052.11.052.114.052.118.051.123.051.126.051.131.05.136.05.139.049.143.048.148.048.152.048.155.046.16.046.163.045.168.043.172.043.175.042.179.041.183.04.187.038.191.038.194.036.198.034.202.033.205.032.21.031.212.028.216.027.22.026.224.023.226.022.231.021.233.018.237.016.241.014.244.012.247.011.25.008.254.005.257.004.26.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.022.224-.023.22-.026.216-.027.212-.028.21-.031.205-.032.202-.033.198-.034.194-.036.191-.038.187-.038.183-.04.179-.041.175-.042.172-.043.168-.043.163-.045.16-.046.155-.046.152-.048.148-.048.143-.048.139-.049.136-.05.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.05.051-.05.023-.025.023-.024.021-.024.02-.025.019-.024.018-.024.017-.023.015-.024.014-.023.013-.023.012-.023.01-.023.01-.022.008-.022.006-.023.006-.021.004-.022.004-.021.001-.021.001-.021-.001-.021-.001-.021-.004-.021-.004-.022-.006-.021-.006-.023-.008-.022-.01-.022-.01-.023-.012-.023-.013-.023-.014-.023-.015-.024-.017-.023-.018-.024-.019-.024-.02-.025-.021-.024-.023-.024-.023-.025-.051-.05-.056-.05-.06-.05-.065-.051-.07-.052-.074-.051-.079-.052-.083-.052-.088-.052-.092-.052-.096-.052-.101-.052-.106-.052-.11-.052-.114-.052-.118-.051-.123-.051-.126-.051-.131-.05-.136-.05-.139-.049-.143-.048-.148-.048-.152-.048-.155-.046-.16-.046-.163-.045-.168-.043-.172-.043-.175-.042-.179-.041-.183-.04-.187-.038-.191-.038-.194-.036-.198-.034-.202-.033-.205-.032-.21-.031-.212-.028-.216-.027-.22-.026-.224-.023-.226-.022-.231-.021-.233-.018-.237-.016-.241-.014-.244-.012-.247-.011-.25-.008-.254-.005-.257-.004-.26-.001-.26.001z\");\n};\nconst insertComputerIcon = function(elem) {\n    elem.append(\"defs\").append(\"symbol\").attr(\"id\", \"computer\").attr(\"width\", \"24\").attr(\"height\", \"24\").append(\"path\").attr(\"transform\", \"scale(.5)\").attr(\"d\", \"M2 2v13h20v-13h-20zm18 11h-16v-9h16v9zm-10.228 6l.466-1h3.524l.467 1h-4.457zm14.228 3h-24l2-6h2.104l-1.33 4h18.45l-1.297-4h2.073l2 6zm-5-10h-14v-7h14v7z\");\n};\nconst insertClockIcon = function(elem) {\n    elem.append(\"defs\").append(\"symbol\").attr(\"id\", \"clock\").attr(\"width\", \"24\").attr(\"height\", \"24\").append(\"path\").attr(\"transform\", \"scale(.5)\").attr(\"d\", \"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5.848 12.459c.202.038.202.333.001.372-1.907.361-6.045 1.111-6.547 1.111-.719 0-1.301-.582-1.301-1.301 0-.512.77-5.447 1.125-7.445.034-.192.312-.181.343.014l.985 6.238 5.394 1.011z\");\n};\nconst insertArrowHead = function(elem) {\n    elem.append(\"defs\").append(\"marker\").attr(\"id\", \"arrowhead\").attr(\"refX\", 7.9).attr(\"refY\", 5).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 12).attr(\"markerHeight\", 12).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\");\n};\nconst insertArrowFilledHead = function(elem) {\n    elem.append(\"defs\").append(\"marker\").attr(\"id\", \"filled-head\").attr(\"refX\", 15.5).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L14,7 L9,1 Z\");\n};\nconst insertSequenceNumber = function(elem) {\n    elem.append(\"defs\").append(\"marker\").attr(\"id\", \"sequencenumber\").attr(\"refX\", 15).attr(\"refY\", 15).attr(\"markerWidth\", 60).attr(\"markerHeight\", 40).attr(\"orient\", \"auto\").append(\"circle\").attr(\"cx\", 15).attr(\"cy\", 15).attr(\"r\", 6);\n};\nconst insertArrowCrossHead = function(elem) {\n    const defs = elem.append(\"defs\");\n    const marker = defs.append(\"marker\").attr(\"id\", \"crosshead\").attr(\"markerWidth\", 15).attr(\"markerHeight\", 8).attr(\"orient\", \"auto\").attr(\"refX\", 4).attr(\"refY\", 4.5);\n    marker.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", \"#000000\").style(\"stroke-dasharray\", \"0, 0\").attr(\"stroke-width\", \"1pt\").attr(\"d\", \"M 1,2 L 6,7 M 6,2 L 1,7\");\n};\nconst getTextObj = function() {\n    return {\n        x: 0,\n        y: 0,\n        fill: void 0,\n        anchor: void 0,\n        style: \"#666\",\n        width: void 0,\n        height: void 0,\n        textMargin: 0,\n        rx: 0,\n        ry: 0,\n        tspan: true,\n        valign: void 0\n    };\n};\nconst getNoteRect = function() {\n    return {\n        x: 0,\n        y: 0,\n        fill: \"#EDF2AE\",\n        stroke: \"#666\",\n        width: 100,\n        anchor: \"start\",\n        height: 100,\n        rx: 0,\n        ry: 0\n    };\n};\nconst _drawTextCandidateFunc = function() {\n    function byText(content, g, x, y, width, height, textAttrs) {\n        const text = g.append(\"text\").attr(\"x\", x + width / 2).attr(\"y\", y + height / 2 + 5).style(\"text-anchor\", \"middle\").text(content);\n        _setTextAttrs(text, textAttrs);\n    }\n    function byTspan(content, g, x, y, width, height, textAttrs, conf2) {\n        const { actorFontSize, actorFontFamily, actorFontWeight } = conf2;\n        const [_actorFontSize, _actorFontSizePx] = (0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.C)(actorFontSize);\n        const lines = content.split(_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.lineBreakRegex);\n        for(let i = 0; i < lines.length; i++){\n            const dy = i * _actorFontSize - _actorFontSize * (lines.length - 1) / 2;\n            const text = g.append(\"text\").attr(\"x\", x + width / 2).attr(\"y\", y).style(\"text-anchor\", \"middle\").style(\"font-size\", _actorFontSizePx).style(\"font-weight\", actorFontWeight).style(\"font-family\", actorFontFamily);\n            text.append(\"tspan\").attr(\"x\", x + width / 2).attr(\"dy\", dy).text(lines[i]);\n            text.attr(\"y\", y + height / 2).attr(\"dominant-baseline\", \"central\").attr(\"alignment-baseline\", \"central\");\n            _setTextAttrs(text, textAttrs);\n        }\n    }\n    function byFo(content, g, x, y, width, height, textAttrs, conf2) {\n        const s = g.append(\"switch\");\n        const f = s.append(\"foreignObject\").attr(\"x\", x).attr(\"y\", y).attr(\"width\", width).attr(\"height\", height);\n        const text = f.append(\"xhtml:div\").style(\"display\", \"table\").style(\"height\", \"100%\").style(\"width\", \"100%\");\n        text.append(\"div\").style(\"display\", \"table-cell\").style(\"text-align\", \"center\").style(\"vertical-align\", \"middle\").text(content);\n        byTspan(content, s, x, y, width, height, textAttrs, conf2);\n        _setTextAttrs(text, textAttrs);\n    }\n    function _setTextAttrs(toText, fromTextAttrsDict) {\n        for(const key in fromTextAttrsDict){\n            if (fromTextAttrsDict.hasOwnProperty(key)) {\n                toText.attr(key, fromTextAttrsDict[key]);\n            }\n        }\n    }\n    return function(conf2) {\n        return conf2.textPlacement === \"fo\" ? byFo : conf2.textPlacement === \"old\" ? byText : byTspan;\n    };\n}();\nconst _drawMenuItemTextCandidateFunc = function() {\n    function byText(content, g, x, y, width, height, textAttrs) {\n        const text = g.append(\"text\").attr(\"x\", x).attr(\"y\", y).style(\"text-anchor\", \"start\").text(content);\n        _setTextAttrs(text, textAttrs);\n    }\n    function byTspan(content, g, x, y, width, height, textAttrs, conf2) {\n        const { actorFontSize, actorFontFamily, actorFontWeight } = conf2;\n        const lines = content.split(_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.lineBreakRegex);\n        for(let i = 0; i < lines.length; i++){\n            const dy = i * actorFontSize - actorFontSize * (lines.length - 1) / 2;\n            const text = g.append(\"text\").attr(\"x\", x).attr(\"y\", y).style(\"text-anchor\", \"start\").style(\"font-size\", actorFontSize).style(\"font-weight\", actorFontWeight).style(\"font-family\", actorFontFamily);\n            text.append(\"tspan\").attr(\"x\", x).attr(\"dy\", dy).text(lines[i]);\n            text.attr(\"y\", y + height / 2).attr(\"dominant-baseline\", \"central\").attr(\"alignment-baseline\", \"central\");\n            _setTextAttrs(text, textAttrs);\n        }\n    }\n    function byFo(content, g, x, y, width, height, textAttrs, conf2) {\n        const s = g.append(\"switch\");\n        const f = s.append(\"foreignObject\").attr(\"x\", x).attr(\"y\", y).attr(\"width\", width).attr(\"height\", height);\n        const text = f.append(\"xhtml:div\").style(\"display\", \"table\").style(\"height\", \"100%\").style(\"width\", \"100%\");\n        text.append(\"div\").style(\"display\", \"table-cell\").style(\"text-align\", \"center\").style(\"vertical-align\", \"middle\").text(content);\n        byTspan(content, s, x, y, width, height, textAttrs, conf2);\n        _setTextAttrs(text, textAttrs);\n    }\n    function _setTextAttrs(toText, fromTextAttrsDict) {\n        for(const key in fromTextAttrsDict){\n            if (fromTextAttrsDict.hasOwnProperty(key)) {\n                toText.attr(key, fromTextAttrsDict[key]);\n            }\n        }\n    }\n    return function(conf2) {\n        return conf2.textPlacement === \"fo\" ? byFo : conf2.textPlacement === \"old\" ? byText : byTspan;\n    };\n}();\nconst svgDraw = {\n    drawRect,\n    drawText,\n    drawLabel,\n    drawActor,\n    drawBox,\n    drawPopup,\n    anchorElement,\n    drawActivation,\n    drawLoop,\n    drawBackgroundRect,\n    insertArrowHead,\n    insertArrowFilledHead,\n    insertSequenceNumber,\n    insertArrowCrossHead,\n    insertDatabaseIcon,\n    insertComputerIcon,\n    insertClockIcon,\n    getTextObj,\n    getNoteRect,\n    popupMenu,\n    popdownMenu,\n    fixLifeLineHeights,\n    sanitizeUrl: _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_1__.sanitizeUrl\n};\nlet conf = {};\nconst bounds = {\n    data: {\n        startx: void 0,\n        stopx: void 0,\n        starty: void 0,\n        stopy: void 0\n    },\n    verticalPos: 0,\n    sequenceItems: [],\n    activations: [],\n    models: {\n        getHeight: function() {\n            return Math.max.apply(null, this.actors.length === 0 ? [\n                0\n            ] : this.actors.map((actor)=>actor.height || 0)) + (this.loops.length === 0 ? 0 : this.loops.map((it)=>it.height || 0).reduce((acc, h)=>acc + h)) + (this.messages.length === 0 ? 0 : this.messages.map((it)=>it.height || 0).reduce((acc, h)=>acc + h)) + (this.notes.length === 0 ? 0 : this.notes.map((it)=>it.height || 0).reduce((acc, h)=>acc + h));\n        },\n        clear: function() {\n            this.actors = [];\n            this.boxes = [];\n            this.loops = [];\n            this.messages = [];\n            this.notes = [];\n        },\n        addBox: function(boxModel) {\n            this.boxes.push(boxModel);\n        },\n        addActor: function(actorModel) {\n            this.actors.push(actorModel);\n        },\n        addLoop: function(loopModel) {\n            this.loops.push(loopModel);\n        },\n        addMessage: function(msgModel) {\n            this.messages.push(msgModel);\n        },\n        addNote: function(noteModel) {\n            this.notes.push(noteModel);\n        },\n        lastActor: function() {\n            return this.actors[this.actors.length - 1];\n        },\n        lastLoop: function() {\n            return this.loops[this.loops.length - 1];\n        },\n        lastMessage: function() {\n            return this.messages[this.messages.length - 1];\n        },\n        lastNote: function() {\n            return this.notes[this.notes.length - 1];\n        },\n        actors: [],\n        boxes: [],\n        loops: [],\n        messages: [],\n        notes: []\n    },\n    init: function() {\n        this.sequenceItems = [];\n        this.activations = [];\n        this.models.clear();\n        this.data = {\n            startx: void 0,\n            stopx: void 0,\n            starty: void 0,\n            stopy: void 0\n        };\n        this.verticalPos = 0;\n        setConf((0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.c)());\n    },\n    updateVal: function(obj, key, val, fun) {\n        if (obj[key] === void 0) {\n            obj[key] = val;\n        } else {\n            obj[key] = fun(val, obj[key]);\n        }\n    },\n    updateBounds: function(startx, starty, stopx, stopy) {\n        const _self = this;\n        let cnt = 0;\n        function updateFn(type) {\n            return function updateItemBounds(item) {\n                cnt++;\n                const n = _self.sequenceItems.length - cnt + 1;\n                _self.updateVal(item, \"starty\", starty - n * conf.boxMargin, Math.min);\n                _self.updateVal(item, \"stopy\", stopy + n * conf.boxMargin, Math.max);\n                _self.updateVal(bounds.data, \"startx\", startx - n * conf.boxMargin, Math.min);\n                _self.updateVal(bounds.data, \"stopx\", stopx + n * conf.boxMargin, Math.max);\n                if (!(type === \"activation\")) {\n                    _self.updateVal(item, \"startx\", startx - n * conf.boxMargin, Math.min);\n                    _self.updateVal(item, \"stopx\", stopx + n * conf.boxMargin, Math.max);\n                    _self.updateVal(bounds.data, \"starty\", starty - n * conf.boxMargin, Math.min);\n                    _self.updateVal(bounds.data, \"stopy\", stopy + n * conf.boxMargin, Math.max);\n                }\n            };\n        }\n        this.sequenceItems.forEach(updateFn());\n        this.activations.forEach(updateFn(\"activation\"));\n    },\n    insert: function(startx, starty, stopx, stopy) {\n        const _startx = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMin(startx, stopx);\n        const _stopx = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(startx, stopx);\n        const _starty = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMin(starty, stopy);\n        const _stopy = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(starty, stopy);\n        this.updateVal(bounds.data, \"startx\", _startx, Math.min);\n        this.updateVal(bounds.data, \"starty\", _starty, Math.min);\n        this.updateVal(bounds.data, \"stopx\", _stopx, Math.max);\n        this.updateVal(bounds.data, \"stopy\", _stopy, Math.max);\n        this.updateBounds(_startx, _starty, _stopx, _stopy);\n    },\n    newActivation: function(message, diagram2, actors2) {\n        const actorRect = actors2[message.from.actor];\n        const stackedSize = actorActivations(message.from.actor).length || 0;\n        const x = actorRect.x + actorRect.width / 2 + (stackedSize - 1) * conf.activationWidth / 2;\n        this.activations.push({\n            startx: x,\n            starty: this.verticalPos + 2,\n            stopx: x + conf.activationWidth,\n            stopy: void 0,\n            actor: message.from.actor,\n            anchored: svgDraw.anchorElement(diagram2)\n        });\n    },\n    endActivation: function(message) {\n        const lastActorActivationIdx = this.activations.map(function(activation) {\n            return activation.actor;\n        }).lastIndexOf(message.from.actor);\n        return this.activations.splice(lastActorActivationIdx, 1)[0];\n    },\n    createLoop: function() {\n        let title = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {\n            message: void 0,\n            wrap: false,\n            width: void 0\n        }, fill = arguments.length > 1 ? arguments[1] : void 0;\n        return {\n            startx: void 0,\n            starty: this.verticalPos,\n            stopx: void 0,\n            stopy: void 0,\n            title: title.message,\n            wrap: title.wrap,\n            width: title.width,\n            height: 0,\n            fill\n        };\n    },\n    newLoop: function() {\n        let title = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {\n            message: void 0,\n            wrap: false,\n            width: void 0\n        }, fill = arguments.length > 1 ? arguments[1] : void 0;\n        this.sequenceItems.push(this.createLoop(title, fill));\n    },\n    endLoop: function() {\n        return this.sequenceItems.pop();\n    },\n    isLoopOverlap: function() {\n        return this.sequenceItems.length ? this.sequenceItems[this.sequenceItems.length - 1].overlap : false;\n    },\n    addSectionToLoop: function(message) {\n        const loop = this.sequenceItems.pop();\n        loop.sections = loop.sections || [];\n        loop.sectionTitles = loop.sectionTitles || [];\n        loop.sections.push({\n            y: bounds.getVerticalPos(),\n            height: 0\n        });\n        loop.sectionTitles.push(message);\n        this.sequenceItems.push(loop);\n    },\n    saveVerticalPos: function() {\n        if (this.isLoopOverlap()) {\n            this.savedVerticalPos = this.verticalPos;\n        }\n    },\n    resetVerticalPos: function() {\n        if (this.isLoopOverlap()) {\n            this.verticalPos = this.savedVerticalPos;\n        }\n    },\n    bumpVerticalPos: function(bump) {\n        this.verticalPos = this.verticalPos + bump;\n        this.data.stopy = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(this.data.stopy, this.verticalPos);\n    },\n    getVerticalPos: function() {\n        return this.verticalPos;\n    },\n    getBounds: function() {\n        return {\n            bounds: this.data,\n            models: this.models\n        };\n    }\n};\nconst drawNote = function(elem, noteModel) {\n    bounds.bumpVerticalPos(conf.boxMargin);\n    noteModel.height = conf.boxMargin;\n    noteModel.starty = bounds.getVerticalPos();\n    const rect = (0,_svgDrawCommon_ad5ef572_js__WEBPACK_IMPORTED_MODULE_6__.g)();\n    rect.x = noteModel.startx;\n    rect.y = noteModel.starty;\n    rect.width = noteModel.width || conf.width;\n    rect.class = \"note\";\n    const g = elem.append(\"g\");\n    const rectElem = svgDraw.drawRect(g, rect);\n    const textObj = (0,_svgDrawCommon_ad5ef572_js__WEBPACK_IMPORTED_MODULE_6__.e)();\n    textObj.x = noteModel.startx;\n    textObj.y = noteModel.starty;\n    textObj.width = rect.width;\n    textObj.dy = \"1em\";\n    textObj.text = noteModel.message;\n    textObj.class = \"noteText\";\n    textObj.fontFamily = conf.noteFontFamily;\n    textObj.fontSize = conf.noteFontSize;\n    textObj.fontWeight = conf.noteFontWeight;\n    textObj.anchor = conf.noteAlign;\n    textObj.textMargin = conf.noteMargin;\n    textObj.valign = \"center\";\n    const textElem = drawText(g, textObj);\n    const textHeight = Math.round(textElem.map((te)=>(te._groups || te)[0][0].getBBox().height).reduce((acc, curr)=>acc + curr));\n    rectElem.attr(\"height\", textHeight + 2 * conf.noteMargin);\n    noteModel.height += textHeight + 2 * conf.noteMargin;\n    bounds.bumpVerticalPos(textHeight + 2 * conf.noteMargin);\n    noteModel.stopy = noteModel.starty + textHeight + 2 * conf.noteMargin;\n    noteModel.stopx = noteModel.startx + rect.width;\n    bounds.insert(noteModel.startx, noteModel.starty, noteModel.stopx, noteModel.stopy);\n    bounds.models.addNote(noteModel);\n};\nconst messageFont = (cnf)=>{\n    return {\n        fontFamily: cnf.messageFontFamily,\n        fontSize: cnf.messageFontSize,\n        fontWeight: cnf.messageFontWeight\n    };\n};\nconst noteFont = (cnf)=>{\n    return {\n        fontFamily: cnf.noteFontFamily,\n        fontSize: cnf.noteFontSize,\n        fontWeight: cnf.noteFontWeight\n    };\n};\nconst actorFont = (cnf)=>{\n    return {\n        fontFamily: cnf.actorFontFamily,\n        fontSize: cnf.actorFontSize,\n        fontWeight: cnf.actorFontWeight\n    };\n};\nfunction boundMessage(_diagram, msgModel) {\n    bounds.bumpVerticalPos(10);\n    const { startx, stopx, message } = msgModel;\n    const lines = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.splitBreaks(message).length;\n    const textDims = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(message, messageFont(conf));\n    const lineHeight = textDims.height / lines;\n    msgModel.height += lineHeight;\n    bounds.bumpVerticalPos(lineHeight);\n    let lineStartY;\n    let totalOffset = textDims.height - 10;\n    const textWidth = textDims.width;\n    if (startx === stopx) {\n        lineStartY = bounds.getVerticalPos() + totalOffset;\n        if (!conf.rightAngles) {\n            totalOffset += conf.boxMargin;\n            lineStartY = bounds.getVerticalPos() + totalOffset;\n        }\n        totalOffset += 30;\n        const dx = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(textWidth / 2, conf.width / 2);\n        bounds.insert(startx - dx, bounds.getVerticalPos() - 10 + totalOffset, stopx + dx, bounds.getVerticalPos() + 30 + totalOffset);\n    } else {\n        totalOffset += conf.boxMargin;\n        lineStartY = bounds.getVerticalPos() + totalOffset;\n        bounds.insert(startx, lineStartY - 10, stopx, lineStartY);\n    }\n    bounds.bumpVerticalPos(totalOffset);\n    msgModel.height += totalOffset;\n    msgModel.stopy = msgModel.starty + msgModel.height;\n    bounds.insert(msgModel.fromBounds, msgModel.starty, msgModel.toBounds, msgModel.stopy);\n    return lineStartY;\n}\nconst drawMessage = function(diagram2, msgModel, lineStartY, diagObj) {\n    const { startx, stopx, starty, message, type, sequenceIndex, sequenceVisible } = msgModel;\n    const textDims = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(message, messageFont(conf));\n    const textObj = (0,_svgDrawCommon_ad5ef572_js__WEBPACK_IMPORTED_MODULE_6__.e)();\n    textObj.x = startx;\n    textObj.y = starty + 10;\n    textObj.width = stopx - startx;\n    textObj.class = \"messageText\";\n    textObj.dy = \"1em\";\n    textObj.text = message;\n    textObj.fontFamily = conf.messageFontFamily;\n    textObj.fontSize = conf.messageFontSize;\n    textObj.fontWeight = conf.messageFontWeight;\n    textObj.anchor = conf.messageAlign;\n    textObj.valign = \"center\";\n    textObj.textMargin = conf.wrapPadding;\n    textObj.tspan = false;\n    drawText(diagram2, textObj);\n    const textWidth = textDims.width;\n    let line;\n    if (startx === stopx) {\n        if (conf.rightAngles) {\n            line = diagram2.append(\"path\").attr(\"d\", \"M  \".concat(startx, \",\").concat(lineStartY, \" H \").concat(startx + _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(conf.width / 2, textWidth / 2), \" V \").concat(lineStartY + 25, \" H \").concat(startx));\n        } else {\n            line = diagram2.append(\"path\").attr(\"d\", \"M \" + startx + \",\" + lineStartY + \" C \" + (startx + 60) + \",\" + (lineStartY - 10) + \" \" + (startx + 60) + \",\" + (lineStartY + 30) + \" \" + startx + \",\" + (lineStartY + 20));\n        }\n    } else {\n        line = diagram2.append(\"line\");\n        line.attr(\"x1\", startx);\n        line.attr(\"y1\", lineStartY);\n        line.attr(\"x2\", stopx);\n        line.attr(\"y2\", lineStartY);\n    }\n    if (type === diagObj.db.LINETYPE.DOTTED || type === diagObj.db.LINETYPE.DOTTED_CROSS || type === diagObj.db.LINETYPE.DOTTED_POINT || type === diagObj.db.LINETYPE.DOTTED_OPEN) {\n        line.style(\"stroke-dasharray\", \"3, 3\");\n        line.attr(\"class\", \"messageLine1\");\n    } else {\n        line.attr(\"class\", \"messageLine0\");\n    }\n    let url = \"\";\n    if (conf.arrowMarkerAbsolute) {\n        url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n        url = url.replace(/\\(/g, \"\\\\(\");\n        url = url.replace(/\\)/g, \"\\\\)\");\n    }\n    line.attr(\"stroke-width\", 2);\n    line.attr(\"stroke\", \"none\");\n    line.style(\"fill\", \"none\");\n    if (type === diagObj.db.LINETYPE.SOLID || type === diagObj.db.LINETYPE.DOTTED) {\n        line.attr(\"marker-end\", \"url(\" + url + \"#arrowhead)\");\n    }\n    if (type === diagObj.db.LINETYPE.SOLID_POINT || type === diagObj.db.LINETYPE.DOTTED_POINT) {\n        line.attr(\"marker-end\", \"url(\" + url + \"#filled-head)\");\n    }\n    if (type === diagObj.db.LINETYPE.SOLID_CROSS || type === diagObj.db.LINETYPE.DOTTED_CROSS) {\n        line.attr(\"marker-end\", \"url(\" + url + \"#crosshead)\");\n    }\n    if (sequenceVisible || conf.showSequenceNumbers) {\n        line.attr(\"marker-start\", \"url(\" + url + \"#sequencenumber)\");\n        diagram2.append(\"text\").attr(\"x\", startx).attr(\"y\", lineStartY + 4).attr(\"font-family\", \"sans-serif\").attr(\"font-size\", \"12px\").attr(\"text-anchor\", \"middle\").attr(\"class\", \"sequenceNumber\").text(sequenceIndex);\n    }\n};\nconst addActorRenderingData = function(diagram2, actors2, createdActors2, actorKeys, verticalPos, messages2, isFooter) {\n    let prevWidth = 0;\n    let prevMargin = 0;\n    let prevBox = void 0;\n    let maxHeight = 0;\n    for (const actorKey of actorKeys){\n        const actor = actors2[actorKey];\n        const box = actor.box;\n        if (prevBox && prevBox != box) {\n            if (!isFooter) {\n                bounds.models.addBox(prevBox);\n            }\n            prevMargin += conf.boxMargin + prevBox.margin;\n        }\n        if (box && box != prevBox) {\n            if (!isFooter) {\n                box.x = prevWidth + prevMargin;\n                box.y = verticalPos;\n            }\n            prevMargin += box.margin;\n        }\n        actor.width = actor.width || conf.width;\n        actor.height = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(actor.height || conf.height, conf.height);\n        actor.margin = actor.margin || conf.actorMargin;\n        maxHeight = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(maxHeight, actor.height);\n        if (createdActors2[actor.name]) {\n            prevMargin += actor.width / 2;\n        }\n        actor.x = prevWidth + prevMargin;\n        actor.starty = bounds.getVerticalPos();\n        bounds.insert(actor.x, verticalPos, actor.x + actor.width, actor.height);\n        prevWidth += actor.width + prevMargin;\n        if (actor.box) {\n            actor.box.width = prevWidth + box.margin - actor.box.x;\n        }\n        prevMargin = actor.margin;\n        prevBox = actor.box;\n        bounds.models.addActor(actor);\n    }\n    if (prevBox && !isFooter) {\n        bounds.models.addBox(prevBox);\n    }\n    bounds.bumpVerticalPos(maxHeight);\n};\nconst drawActors = function(diagram2, actors2, actorKeys, isFooter) {\n    if (!isFooter) {\n        for (const actorKey of actorKeys){\n            const actor = actors2[actorKey];\n            svgDraw.drawActor(diagram2, actor, conf, false);\n        }\n    } else {\n        let maxHeight = 0;\n        bounds.bumpVerticalPos(conf.boxMargin * 2);\n        for (const actorKey of actorKeys){\n            const actor = actors2[actorKey];\n            if (!actor.stopy) {\n                actor.stopy = bounds.getVerticalPos();\n            }\n            const height = svgDraw.drawActor(diagram2, actor, conf, true);\n            maxHeight = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(maxHeight, height);\n        }\n        bounds.bumpVerticalPos(maxHeight + conf.boxMargin);\n    }\n};\nconst drawActorsPopup = function(diagram2, actors2, actorKeys, doc) {\n    let maxHeight = 0;\n    let maxWidth = 0;\n    for (const actorKey of actorKeys){\n        const actor = actors2[actorKey];\n        const minMenuWidth = getRequiredPopupWidth(actor);\n        const menuDimensions = svgDraw.drawPopup(diagram2, actor, minMenuWidth, conf, conf.forceMenus, doc);\n        if (menuDimensions.height > maxHeight) {\n            maxHeight = menuDimensions.height;\n        }\n        if (menuDimensions.width + actor.x > maxWidth) {\n            maxWidth = menuDimensions.width + actor.x;\n        }\n    }\n    return {\n        maxHeight,\n        maxWidth\n    };\n};\nconst setConf = function(cnf) {\n    (0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.f)(conf, cnf);\n    if (cnf.fontFamily) {\n        conf.actorFontFamily = conf.noteFontFamily = conf.messageFontFamily = cnf.fontFamily;\n    }\n    if (cnf.fontSize) {\n        conf.actorFontSize = conf.noteFontSize = conf.messageFontSize = cnf.fontSize;\n    }\n    if (cnf.fontWeight) {\n        conf.actorFontWeight = conf.noteFontWeight = conf.messageFontWeight = cnf.fontWeight;\n    }\n};\nconst actorActivations = function(actor) {\n    return bounds.activations.filter(function(activation) {\n        return activation.actor === actor;\n    });\n};\nconst activationBounds = function(actor, actors2) {\n    const actorObj = actors2[actor];\n    const activations = actorActivations(actor);\n    const left = activations.reduce(function(acc, activation) {\n        return _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMin(acc, activation.startx);\n    }, actorObj.x + actorObj.width / 2 - 1);\n    const right = activations.reduce(function(acc, activation) {\n        return _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(acc, activation.stopx);\n    }, actorObj.x + actorObj.width / 2 + 1);\n    return [\n        left,\n        right\n    ];\n};\nfunction adjustLoopHeightForWrap(loopWidths, msg, preMargin, postMargin, addLoopFn) {\n    bounds.bumpVerticalPos(preMargin);\n    let heightAdjust = postMargin;\n    if (msg.id && msg.message && loopWidths[msg.id]) {\n        const loopWidth = loopWidths[msg.id].width;\n        const textConf = messageFont(conf);\n        msg.message = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.wrapLabel(\"[\".concat(msg.message, \"]\"), loopWidth - 2 * conf.wrapPadding, textConf);\n        msg.width = loopWidth;\n        msg.wrap = true;\n        const textDims = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(msg.message, textConf);\n        const totalOffset = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(textDims.height, conf.labelBoxHeight);\n        heightAdjust = postMargin + totalOffset;\n        _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.l.debug(\"\".concat(totalOffset, \" - \").concat(msg.message));\n    }\n    addLoopFn(msg);\n    bounds.bumpVerticalPos(heightAdjust);\n}\nfunction adjustCreatedDestroyedData(msg, msgModel, lineStartY, index, actors2, createdActors2, destroyedActors2) {\n    function receiverAdjustment(actor, adjustment) {\n        if (actor.x < actors2[msg.from].x) {\n            bounds.insert(msgModel.stopx - adjustment, msgModel.starty, msgModel.startx, msgModel.stopy + actor.height / 2 + conf.noteMargin);\n            msgModel.stopx = msgModel.stopx + adjustment;\n        } else {\n            bounds.insert(msgModel.startx, msgModel.starty, msgModel.stopx + adjustment, msgModel.stopy + actor.height / 2 + conf.noteMargin);\n            msgModel.stopx = msgModel.stopx - adjustment;\n        }\n    }\n    function senderAdjustment(actor, adjustment) {\n        if (actor.x < actors2[msg.to].x) {\n            bounds.insert(msgModel.startx - adjustment, msgModel.starty, msgModel.stopx, msgModel.stopy + actor.height / 2 + conf.noteMargin);\n            msgModel.startx = msgModel.startx + adjustment;\n        } else {\n            bounds.insert(msgModel.stopx, msgModel.starty, msgModel.startx + adjustment, msgModel.stopy + actor.height / 2 + conf.noteMargin);\n            msgModel.startx = msgModel.startx - adjustment;\n        }\n    }\n    if (createdActors2[msg.to] == index) {\n        const actor = actors2[msg.to];\n        const adjustment = actor.type == \"actor\" ? ACTOR_TYPE_WIDTH / 2 + 3 : actor.width / 2 + 3;\n        receiverAdjustment(actor, adjustment);\n        actor.starty = lineStartY - actor.height / 2;\n        bounds.bumpVerticalPos(actor.height / 2);\n    } else if (destroyedActors2[msg.from] == index) {\n        const actor = actors2[msg.from];\n        if (conf.mirrorActors) {\n            const adjustment = actor.type == \"actor\" ? ACTOR_TYPE_WIDTH / 2 : actor.width / 2;\n            senderAdjustment(actor, adjustment);\n        }\n        actor.stopy = lineStartY - actor.height / 2;\n        bounds.bumpVerticalPos(actor.height / 2);\n    } else if (destroyedActors2[msg.to] == index) {\n        const actor = actors2[msg.to];\n        if (conf.mirrorActors) {\n            const adjustment = actor.type == \"actor\" ? ACTOR_TYPE_WIDTH / 2 + 3 : actor.width / 2 + 3;\n            receiverAdjustment(actor, adjustment);\n        }\n        actor.stopy = lineStartY - actor.height / 2;\n        bounds.bumpVerticalPos(actor.height / 2);\n    }\n}\nconst draw = function(_text, id, _version, diagObj) {\n    const { securityLevel, sequence } = (0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.c)();\n    conf = sequence;\n    let sandboxElement;\n    if (securityLevel === \"sandbox\") {\n        sandboxElement = (0,d3__WEBPACK_IMPORTED_MODULE_0__.select)(\"#i\" + id);\n    }\n    const root = securityLevel === \"sandbox\" ? (0,d3__WEBPACK_IMPORTED_MODULE_0__.select)(sandboxElement.nodes()[0].contentDocument.body) : (0,d3__WEBPACK_IMPORTED_MODULE_0__.select)(\"body\");\n    const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n    bounds.init();\n    _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.l.debug(diagObj.db);\n    const diagram2 = securityLevel === \"sandbox\" ? root.select('[id=\"'.concat(id, '\"]')) : (0,d3__WEBPACK_IMPORTED_MODULE_0__.select)('[id=\"'.concat(id, '\"]'));\n    const actors2 = diagObj.db.getActors();\n    const createdActors2 = diagObj.db.getCreatedActors();\n    const destroyedActors2 = diagObj.db.getDestroyedActors();\n    const boxes2 = diagObj.db.getBoxes();\n    let actorKeys = diagObj.db.getActorKeys();\n    const messages2 = diagObj.db.getMessages();\n    const title = diagObj.db.getDiagramTitle();\n    const hasBoxes = diagObj.db.hasAtLeastOneBox();\n    const hasBoxTitles = diagObj.db.hasAtLeastOneBoxWithTitle();\n    const maxMessageWidthPerActor = getMaxMessageWidthPerActor(actors2, messages2, diagObj);\n    conf.height = calculateActorMargins(actors2, maxMessageWidthPerActor, boxes2);\n    svgDraw.insertComputerIcon(diagram2);\n    svgDraw.insertDatabaseIcon(diagram2);\n    svgDraw.insertClockIcon(diagram2);\n    if (hasBoxes) {\n        bounds.bumpVerticalPos(conf.boxMargin);\n        if (hasBoxTitles) {\n            bounds.bumpVerticalPos(boxes2[0].textMaxHeight);\n        }\n    }\n    if (conf.hideUnusedParticipants === true) {\n        const newActors = /* @__PURE__ */ new Set();\n        messages2.forEach((message)=>{\n            newActors.add(message.from);\n            newActors.add(message.to);\n        });\n        actorKeys = actorKeys.filter((actorKey)=>newActors.has(actorKey));\n    }\n    addActorRenderingData(diagram2, actors2, createdActors2, actorKeys, 0, messages2, false);\n    const loopWidths = calculateLoopBounds(messages2, actors2, maxMessageWidthPerActor, diagObj);\n    svgDraw.insertArrowHead(diagram2);\n    svgDraw.insertArrowCrossHead(diagram2);\n    svgDraw.insertArrowFilledHead(diagram2);\n    svgDraw.insertSequenceNumber(diagram2);\n    function activeEnd(msg, verticalPos) {\n        const activationData = bounds.endActivation(msg);\n        if (activationData.starty + 18 > verticalPos) {\n            activationData.starty = verticalPos - 6;\n            verticalPos += 12;\n        }\n        svgDraw.drawActivation(diagram2, activationData, verticalPos, conf, actorActivations(msg.from.actor).length);\n        bounds.insert(activationData.startx, verticalPos - 10, activationData.stopx, verticalPos);\n    }\n    let sequenceIndex = 1;\n    let sequenceIndexStep = 1;\n    const messagesToDraw = [];\n    const backgrounds = [];\n    messages2.forEach(function(msg, index) {\n        let loopModel, noteModel, msgModel;\n        switch(msg.type){\n            case diagObj.db.LINETYPE.NOTE:\n                bounds.resetVerticalPos();\n                noteModel = msg.noteModel;\n                drawNote(diagram2, noteModel);\n                break;\n            case diagObj.db.LINETYPE.ACTIVE_START:\n                bounds.newActivation(msg, diagram2, actors2);\n                break;\n            case diagObj.db.LINETYPE.ACTIVE_END:\n                activeEnd(msg, bounds.getVerticalPos());\n                break;\n            case diagObj.db.LINETYPE.LOOP_START:\n                adjustLoopHeightForWrap(loopWidths, msg, conf.boxMargin, conf.boxMargin + conf.boxTextMargin, (message)=>bounds.newLoop(message));\n                break;\n            case diagObj.db.LINETYPE.LOOP_END:\n                loopModel = bounds.endLoop();\n                svgDraw.drawLoop(diagram2, loopModel, \"loop\", conf);\n                bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n                bounds.models.addLoop(loopModel);\n                break;\n            case diagObj.db.LINETYPE.RECT_START:\n                adjustLoopHeightForWrap(loopWidths, msg, conf.boxMargin, conf.boxMargin, (message)=>bounds.newLoop(void 0, message.message));\n                break;\n            case diagObj.db.LINETYPE.RECT_END:\n                loopModel = bounds.endLoop();\n                backgrounds.push(loopModel);\n                bounds.models.addLoop(loopModel);\n                bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n                break;\n            case diagObj.db.LINETYPE.OPT_START:\n                adjustLoopHeightForWrap(loopWidths, msg, conf.boxMargin, conf.boxMargin + conf.boxTextMargin, (message)=>bounds.newLoop(message));\n                break;\n            case diagObj.db.LINETYPE.OPT_END:\n                loopModel = bounds.endLoop();\n                svgDraw.drawLoop(diagram2, loopModel, \"opt\", conf);\n                bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n                bounds.models.addLoop(loopModel);\n                break;\n            case diagObj.db.LINETYPE.ALT_START:\n                adjustLoopHeightForWrap(loopWidths, msg, conf.boxMargin, conf.boxMargin + conf.boxTextMargin, (message)=>bounds.newLoop(message));\n                break;\n            case diagObj.db.LINETYPE.ALT_ELSE:\n                adjustLoopHeightForWrap(loopWidths, msg, conf.boxMargin + conf.boxTextMargin, conf.boxMargin, (message)=>bounds.addSectionToLoop(message));\n                break;\n            case diagObj.db.LINETYPE.ALT_END:\n                loopModel = bounds.endLoop();\n                svgDraw.drawLoop(diagram2, loopModel, \"alt\", conf);\n                bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n                bounds.models.addLoop(loopModel);\n                break;\n            case diagObj.db.LINETYPE.PAR_START:\n            case diagObj.db.LINETYPE.PAR_OVER_START:\n                adjustLoopHeightForWrap(loopWidths, msg, conf.boxMargin, conf.boxMargin + conf.boxTextMargin, (message)=>bounds.newLoop(message));\n                bounds.saveVerticalPos();\n                break;\n            case diagObj.db.LINETYPE.PAR_AND:\n                adjustLoopHeightForWrap(loopWidths, msg, conf.boxMargin + conf.boxTextMargin, conf.boxMargin, (message)=>bounds.addSectionToLoop(message));\n                break;\n            case diagObj.db.LINETYPE.PAR_END:\n                loopModel = bounds.endLoop();\n                svgDraw.drawLoop(diagram2, loopModel, \"par\", conf);\n                bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n                bounds.models.addLoop(loopModel);\n                break;\n            case diagObj.db.LINETYPE.AUTONUMBER:\n                sequenceIndex = msg.message.start || sequenceIndex;\n                sequenceIndexStep = msg.message.step || sequenceIndexStep;\n                if (msg.message.visible) {\n                    diagObj.db.enableSequenceNumbers();\n                } else {\n                    diagObj.db.disableSequenceNumbers();\n                }\n                break;\n            case diagObj.db.LINETYPE.CRITICAL_START:\n                adjustLoopHeightForWrap(loopWidths, msg, conf.boxMargin, conf.boxMargin + conf.boxTextMargin, (message)=>bounds.newLoop(message));\n                break;\n            case diagObj.db.LINETYPE.CRITICAL_OPTION:\n                adjustLoopHeightForWrap(loopWidths, msg, conf.boxMargin + conf.boxTextMargin, conf.boxMargin, (message)=>bounds.addSectionToLoop(message));\n                break;\n            case diagObj.db.LINETYPE.CRITICAL_END:\n                loopModel = bounds.endLoop();\n                svgDraw.drawLoop(diagram2, loopModel, \"critical\", conf);\n                bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n                bounds.models.addLoop(loopModel);\n                break;\n            case diagObj.db.LINETYPE.BREAK_START:\n                adjustLoopHeightForWrap(loopWidths, msg, conf.boxMargin, conf.boxMargin + conf.boxTextMargin, (message)=>bounds.newLoop(message));\n                break;\n            case diagObj.db.LINETYPE.BREAK_END:\n                loopModel = bounds.endLoop();\n                svgDraw.drawLoop(diagram2, loopModel, \"break\", conf);\n                bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n                bounds.models.addLoop(loopModel);\n                break;\n            default:\n                try {\n                    msgModel = msg.msgModel;\n                    msgModel.starty = bounds.getVerticalPos();\n                    msgModel.sequenceIndex = sequenceIndex;\n                    msgModel.sequenceVisible = diagObj.db.showSequenceNumbers();\n                    const lineStartY = boundMessage(diagram2, msgModel);\n                    adjustCreatedDestroyedData(msg, msgModel, lineStartY, index, actors2, createdActors2, destroyedActors2);\n                    messagesToDraw.push({\n                        messageModel: msgModel,\n                        lineStartY\n                    });\n                    bounds.models.addMessage(msgModel);\n                } catch (e) {\n                    _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.l.error(\"error while drawing message\", e);\n                }\n        }\n        if ([\n            diagObj.db.LINETYPE.SOLID_OPEN,\n            diagObj.db.LINETYPE.DOTTED_OPEN,\n            diagObj.db.LINETYPE.SOLID,\n            diagObj.db.LINETYPE.DOTTED,\n            diagObj.db.LINETYPE.SOLID_CROSS,\n            diagObj.db.LINETYPE.DOTTED_CROSS,\n            diagObj.db.LINETYPE.SOLID_POINT,\n            diagObj.db.LINETYPE.DOTTED_POINT\n        ].includes(msg.type)) {\n            sequenceIndex = sequenceIndex + sequenceIndexStep;\n        }\n    });\n    _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.l.debug(\"createdActors\", createdActors2);\n    _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.l.debug(\"destroyedActors\", destroyedActors2);\n    drawActors(diagram2, actors2, actorKeys, false);\n    messagesToDraw.forEach((e)=>drawMessage(diagram2, e.messageModel, e.lineStartY, diagObj));\n    if (conf.mirrorActors) {\n        drawActors(diagram2, actors2, actorKeys, true);\n    }\n    backgrounds.forEach((e)=>svgDraw.drawBackgroundRect(diagram2, e));\n    fixLifeLineHeights(diagram2, actors2, actorKeys, conf);\n    bounds.models.boxes.forEach(function(box2) {\n        box2.height = bounds.getVerticalPos() - box2.y;\n        bounds.insert(box2.x, box2.y, box2.x + box2.width, box2.height);\n        box2.startx = box2.x;\n        box2.starty = box2.y;\n        box2.stopx = box2.startx + box2.width;\n        box2.stopy = box2.starty + box2.height;\n        box2.stroke = \"rgb(0,0,0, 0.5)\";\n        svgDraw.drawBox(diagram2, box2, conf);\n    });\n    if (hasBoxes) {\n        bounds.bumpVerticalPos(conf.boxMargin);\n    }\n    const requiredBoxSize = drawActorsPopup(diagram2, actors2, actorKeys, doc);\n    const { bounds: box } = bounds.getBounds();\n    let boxHeight = box.stopy - box.starty;\n    if (boxHeight < requiredBoxSize.maxHeight) {\n        boxHeight = requiredBoxSize.maxHeight;\n    }\n    let height = boxHeight + 2 * conf.diagramMarginY;\n    if (conf.mirrorActors) {\n        height = height - conf.boxMargin + conf.bottomMarginAdj;\n    }\n    let boxWidth = box.stopx - box.startx;\n    if (boxWidth < requiredBoxSize.maxWidth) {\n        boxWidth = requiredBoxSize.maxWidth;\n    }\n    const width = boxWidth + 2 * conf.diagramMarginX;\n    if (title) {\n        diagram2.append(\"text\").text(title).attr(\"x\", (box.stopx - box.startx) / 2 - 2 * conf.diagramMarginX).attr(\"y\", -25);\n    }\n    (0,_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.i)(diagram2, height, width, conf.useMaxWidth);\n    const extraVertForTitle = title ? 40 : 0;\n    diagram2.attr(\"viewBox\", box.startx - conf.diagramMarginX + \" -\" + (conf.diagramMarginY + extraVertForTitle) + \" \" + width + \" \" + (height + extraVertForTitle));\n    _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.l.debug(\"models:\", bounds.models);\n};\nfunction getMaxMessageWidthPerActor(actors2, messages2, diagObj) {\n    const maxMessageWidthPerActor = {};\n    messages2.forEach(function(msg) {\n        if (actors2[msg.to] && actors2[msg.from]) {\n            const actor = actors2[msg.to];\n            if (msg.placement === diagObj.db.PLACEMENT.LEFTOF && !actor.prevActor) {\n                return;\n            }\n            if (msg.placement === diagObj.db.PLACEMENT.RIGHTOF && !actor.nextActor) {\n                return;\n            }\n            const isNote = msg.placement !== void 0;\n            const isMessage = !isNote;\n            const textFont = isNote ? noteFont(conf) : messageFont(conf);\n            const wrappedMessage = msg.wrap ? _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.wrapLabel(msg.message, conf.width - 2 * conf.wrapPadding, textFont) : msg.message;\n            const messageDimensions = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(wrappedMessage, textFont);\n            const messageWidth = messageDimensions.width + 2 * conf.wrapPadding;\n            if (isMessage && msg.from === actor.nextActor) {\n                maxMessageWidthPerActor[msg.to] = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(maxMessageWidthPerActor[msg.to] || 0, messageWidth);\n            } else if (isMessage && msg.from === actor.prevActor) {\n                maxMessageWidthPerActor[msg.from] = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(maxMessageWidthPerActor[msg.from] || 0, messageWidth);\n            } else if (isMessage && msg.from === msg.to) {\n                maxMessageWidthPerActor[msg.from] = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(maxMessageWidthPerActor[msg.from] || 0, messageWidth / 2);\n                maxMessageWidthPerActor[msg.to] = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(maxMessageWidthPerActor[msg.to] || 0, messageWidth / 2);\n            } else if (msg.placement === diagObj.db.PLACEMENT.RIGHTOF) {\n                maxMessageWidthPerActor[msg.from] = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(maxMessageWidthPerActor[msg.from] || 0, messageWidth);\n            } else if (msg.placement === diagObj.db.PLACEMENT.LEFTOF) {\n                maxMessageWidthPerActor[actor.prevActor] = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(maxMessageWidthPerActor[actor.prevActor] || 0, messageWidth);\n            } else if (msg.placement === diagObj.db.PLACEMENT.OVER) {\n                if (actor.prevActor) {\n                    maxMessageWidthPerActor[actor.prevActor] = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(maxMessageWidthPerActor[actor.prevActor] || 0, messageWidth / 2);\n                }\n                if (actor.nextActor) {\n                    maxMessageWidthPerActor[msg.from] = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(maxMessageWidthPerActor[msg.from] || 0, messageWidth / 2);\n                }\n            }\n        }\n    });\n    _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.l.debug(\"maxMessageWidthPerActor:\", maxMessageWidthPerActor);\n    return maxMessageWidthPerActor;\n}\nconst getRequiredPopupWidth = function(actor) {\n    let requiredPopupWidth = 0;\n    const textFont = actorFont(conf);\n    for(const key in actor.links){\n        const labelDimensions = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(key, textFont);\n        const labelWidth = labelDimensions.width + 2 * conf.wrapPadding + 2 * conf.boxMargin;\n        if (requiredPopupWidth < labelWidth) {\n            requiredPopupWidth = labelWidth;\n        }\n    }\n    return requiredPopupWidth;\n};\nfunction calculateActorMargins(actors2, actorToMessageWidth, boxes2) {\n    let maxHeight = 0;\n    Object.keys(actors2).forEach((prop)=>{\n        const actor = actors2[prop];\n        if (actor.wrap) {\n            actor.description = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.wrapLabel(actor.description, conf.width - 2 * conf.wrapPadding, actorFont(conf));\n        }\n        const actDims = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(actor.description, actorFont(conf));\n        actor.width = actor.wrap ? conf.width : _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(conf.width, actDims.width + 2 * conf.wrapPadding);\n        actor.height = actor.wrap ? _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(actDims.height, conf.height) : conf.height;\n        maxHeight = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(maxHeight, actor.height);\n    });\n    for(const actorKey in actorToMessageWidth){\n        const actor = actors2[actorKey];\n        if (!actor) {\n            continue;\n        }\n        const nextActor = actors2[actor.nextActor];\n        if (!nextActor) {\n            const messageWidth2 = actorToMessageWidth[actorKey];\n            const actorWidth2 = messageWidth2 + conf.actorMargin - actor.width / 2;\n            actor.margin = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(actorWidth2, conf.actorMargin);\n            continue;\n        }\n        const messageWidth = actorToMessageWidth[actorKey];\n        const actorWidth = messageWidth + conf.actorMargin - actor.width / 2 - nextActor.width / 2;\n        actor.margin = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(actorWidth, conf.actorMargin);\n    }\n    let maxBoxHeight = 0;\n    boxes2.forEach((box)=>{\n        const textFont = messageFont(conf);\n        let totalWidth = box.actorKeys.reduce((total, aKey)=>{\n            return total += actors2[aKey].width + (actors2[aKey].margin || 0);\n        }, 0);\n        totalWidth -= 2 * conf.boxTextMargin;\n        if (box.wrap) {\n            box.name = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.wrapLabel(box.name, totalWidth - 2 * conf.wrapPadding, textFont);\n        }\n        const boxMsgDimensions = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(box.name, textFont);\n        maxBoxHeight = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(boxMsgDimensions.height, maxBoxHeight);\n        const minWidth = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(totalWidth, boxMsgDimensions.width + 2 * conf.wrapPadding);\n        box.margin = conf.boxTextMargin;\n        if (totalWidth < minWidth) {\n            const missing = (minWidth - totalWidth) / 2;\n            box.margin += missing;\n        }\n    });\n    boxes2.forEach((box)=>box.textMaxHeight = maxBoxHeight);\n    return _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(maxHeight, conf.height);\n}\nconst buildNoteModel = function(msg, actors2, diagObj) {\n    const startx = actors2[msg.from].x;\n    const stopx = actors2[msg.to].x;\n    const shouldWrap = msg.wrap && msg.message;\n    let textDimensions = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(shouldWrap ? _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.wrapLabel(msg.message, conf.width, noteFont(conf)) : msg.message, noteFont(conf));\n    const noteModel = {\n        width: shouldWrap ? conf.width : _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(conf.width, textDimensions.width + 2 * conf.noteMargin),\n        height: 0,\n        startx: actors2[msg.from].x,\n        stopx: 0,\n        starty: 0,\n        stopy: 0,\n        message: msg.message\n    };\n    if (msg.placement === diagObj.db.PLACEMENT.RIGHTOF) {\n        noteModel.width = shouldWrap ? _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(conf.width, textDimensions.width) : _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(actors2[msg.from].width / 2 + actors2[msg.to].width / 2, textDimensions.width + 2 * conf.noteMargin);\n        noteModel.startx = startx + (actors2[msg.from].width + conf.actorMargin) / 2;\n    } else if (msg.placement === diagObj.db.PLACEMENT.LEFTOF) {\n        noteModel.width = shouldWrap ? _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(conf.width, textDimensions.width + 2 * conf.noteMargin) : _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(actors2[msg.from].width / 2 + actors2[msg.to].width / 2, textDimensions.width + 2 * conf.noteMargin);\n        noteModel.startx = startx - noteModel.width + (actors2[msg.from].width - conf.actorMargin) / 2;\n    } else if (msg.to === msg.from) {\n        textDimensions = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(shouldWrap ? _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.wrapLabel(msg.message, _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(conf.width, actors2[msg.from].width), noteFont(conf)) : msg.message, noteFont(conf));\n        noteModel.width = shouldWrap ? _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(conf.width, actors2[msg.from].width) : _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(actors2[msg.from].width, conf.width, textDimensions.width + 2 * conf.noteMargin);\n        noteModel.startx = startx + (actors2[msg.from].width - noteModel.width) / 2;\n    } else {\n        noteModel.width = Math.abs(startx + actors2[msg.from].width / 2 - (stopx + actors2[msg.to].width / 2)) + conf.actorMargin;\n        noteModel.startx = startx < stopx ? startx + actors2[msg.from].width / 2 - conf.actorMargin / 2 : stopx + actors2[msg.to].width / 2 - conf.actorMargin / 2;\n    }\n    if (shouldWrap) {\n        noteModel.message = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.wrapLabel(msg.message, noteModel.width - 2 * conf.wrapPadding, noteFont(conf));\n    }\n    _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.l.debug(\"NM:[\".concat(noteModel.startx, \",\").concat(noteModel.stopx, \",\").concat(noteModel.starty, \",\").concat(noteModel.stopy, \":\").concat(noteModel.width, \",\").concat(noteModel.height, \"=\").concat(msg.message, \"]\"));\n    return noteModel;\n};\nconst buildMessageModel = function(msg, actors2, diagObj) {\n    if (![\n        diagObj.db.LINETYPE.SOLID_OPEN,\n        diagObj.db.LINETYPE.DOTTED_OPEN,\n        diagObj.db.LINETYPE.SOLID,\n        diagObj.db.LINETYPE.DOTTED,\n        diagObj.db.LINETYPE.SOLID_CROSS,\n        diagObj.db.LINETYPE.DOTTED_CROSS,\n        diagObj.db.LINETYPE.SOLID_POINT,\n        diagObj.db.LINETYPE.DOTTED_POINT\n    ].includes(msg.type)) {\n        return {};\n    }\n    const [fromLeft, fromRight] = activationBounds(msg.from, actors2);\n    const [toLeft, toRight] = activationBounds(msg.to, actors2);\n    const isArrowToRight = fromLeft <= toLeft;\n    const startx = isArrowToRight ? fromRight : fromLeft;\n    let stopx = isArrowToRight ? toLeft : toRight;\n    const isArrowToActivation = Math.abs(toLeft - toRight) > 2;\n    const adjustValue = (value)=>{\n        return isArrowToRight ? -value : value;\n    };\n    if (msg.from === msg.to) {\n        stopx = startx;\n    } else {\n        if (msg.activate && !isArrowToActivation) {\n            stopx += adjustValue(conf.activationWidth / 2 - 1);\n        }\n        if (![\n            diagObj.db.LINETYPE.SOLID_OPEN,\n            diagObj.db.LINETYPE.DOTTED_OPEN\n        ].includes(msg.type)) {\n            stopx += adjustValue(3);\n        }\n    }\n    const allBounds = [\n        fromLeft,\n        fromRight,\n        toLeft,\n        toRight\n    ];\n    const boundedWidth = Math.abs(startx - stopx);\n    if (msg.wrap && msg.message) {\n        msg.message = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.wrapLabel(msg.message, _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(boundedWidth + 2 * conf.wrapPadding, conf.width), messageFont(conf));\n    }\n    const msgDims = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(msg.message, messageFont(conf));\n    return {\n        width: _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(msg.wrap ? 0 : msgDims.width + 2 * conf.wrapPadding, boundedWidth + 2 * conf.wrapPadding, conf.width),\n        height: 0,\n        startx,\n        stopx,\n        starty: 0,\n        stopy: 0,\n        message: msg.message,\n        type: msg.type,\n        wrap: msg.wrap,\n        fromBounds: Math.min.apply(null, allBounds),\n        toBounds: Math.max.apply(null, allBounds)\n    };\n};\nconst calculateLoopBounds = function(messages2, actors2, _maxWidthPerActor, diagObj) {\n    const loops = {};\n    const stack = [];\n    let current, noteModel, msgModel;\n    messages2.forEach(function(msg) {\n        msg.id = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.u.random({\n            length: 10\n        });\n        switch(msg.type){\n            case diagObj.db.LINETYPE.LOOP_START:\n            case diagObj.db.LINETYPE.ALT_START:\n            case diagObj.db.LINETYPE.OPT_START:\n            case diagObj.db.LINETYPE.PAR_START:\n            case diagObj.db.LINETYPE.PAR_OVER_START:\n            case diagObj.db.LINETYPE.CRITICAL_START:\n            case diagObj.db.LINETYPE.BREAK_START:\n                stack.push({\n                    id: msg.id,\n                    msg: msg.message,\n                    from: Number.MAX_SAFE_INTEGER,\n                    to: Number.MIN_SAFE_INTEGER,\n                    width: 0\n                });\n                break;\n            case diagObj.db.LINETYPE.ALT_ELSE:\n            case diagObj.db.LINETYPE.PAR_AND:\n            case diagObj.db.LINETYPE.CRITICAL_OPTION:\n                if (msg.message) {\n                    current = stack.pop();\n                    loops[current.id] = current;\n                    loops[msg.id] = current;\n                    stack.push(current);\n                }\n                break;\n            case diagObj.db.LINETYPE.LOOP_END:\n            case diagObj.db.LINETYPE.ALT_END:\n            case diagObj.db.LINETYPE.OPT_END:\n            case diagObj.db.LINETYPE.PAR_END:\n            case diagObj.db.LINETYPE.CRITICAL_END:\n            case diagObj.db.LINETYPE.BREAK_END:\n                current = stack.pop();\n                loops[current.id] = current;\n                break;\n            case diagObj.db.LINETYPE.ACTIVE_START:\n                {\n                    const actorRect = actors2[msg.from ? msg.from.actor : msg.to.actor];\n                    const stackedSize = actorActivations(msg.from ? msg.from.actor : msg.to.actor).length;\n                    const x = actorRect.x + actorRect.width / 2 + (stackedSize - 1) * conf.activationWidth / 2;\n                    const toAdd = {\n                        startx: x,\n                        stopx: x + conf.activationWidth,\n                        actor: msg.from.actor,\n                        enabled: true\n                    };\n                    bounds.activations.push(toAdd);\n                }\n                break;\n            case diagObj.db.LINETYPE.ACTIVE_END:\n                {\n                    const lastActorActivationIdx = bounds.activations.map((a)=>a.actor).lastIndexOf(msg.from.actor);\n                    delete bounds.activations.splice(lastActorActivationIdx, 1)[0];\n                }\n                break;\n        }\n        const isNote = msg.placement !== void 0;\n        if (isNote) {\n            noteModel = buildNoteModel(msg, actors2, diagObj);\n            msg.noteModel = noteModel;\n            stack.forEach((stk)=>{\n                current = stk;\n                current.from = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMin(current.from, noteModel.startx);\n                current.to = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(current.to, noteModel.startx + noteModel.width);\n                current.width = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(current.width, Math.abs(current.from - current.to)) - conf.labelBoxWidth;\n            });\n        } else {\n            msgModel = buildMessageModel(msg, actors2, diagObj);\n            msg.msgModel = msgModel;\n            if (msgModel.startx && msgModel.stopx && stack.length > 0) {\n                stack.forEach((stk)=>{\n                    current = stk;\n                    if (msgModel.startx === msgModel.stopx) {\n                        const from = actors2[msg.from];\n                        const to = actors2[msg.to];\n                        current.from = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMin(from.x - msgModel.width / 2, from.x - from.width / 2, current.from);\n                        current.to = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(to.x + msgModel.width / 2, to.x + from.width / 2, current.to);\n                        current.width = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(current.width, Math.abs(current.to - current.from)) - conf.labelBoxWidth;\n                    } else {\n                        current.from = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMin(msgModel.startx, current.from);\n                        current.to = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(msgModel.stopx, current.to);\n                        current.width = _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(current.width, msgModel.width) - conf.labelBoxWidth;\n                    }\n                });\n            }\n        }\n    });\n    bounds.activations = [];\n    _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_5__.l.debug(\"Loop type widths:\", loops);\n    return loops;\n};\nconst renderer = {\n    bounds,\n    drawActors,\n    drawActorsPopup,\n    setConf,\n    draw\n};\nconst diagram = {\n    parser: parser$1,\n    db,\n    renderer,\n    styles,\n    init: (param)=>{\n        let { wrap } = param;\n        db.setWrap(wrap);\n    }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/mermaid/dist/sequenceDiagram-465a088a.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/mermaid/dist/svgDrawCommon-ad5ef572.js":
/*!*************************************************************!*\
  !*** ./node_modules/mermaid/dist/svgDrawCommon-ad5ef572.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: function() { return /* binding */ drawBackgroundRect; },\n/* harmony export */   b: function() { return /* binding */ drawEmbeddedImage; },\n/* harmony export */   c: function() { return /* binding */ drawImage; },\n/* harmony export */   d: function() { return /* binding */ drawRect; },\n/* harmony export */   e: function() { return /* binding */ getTextObj; },\n/* harmony export */   f: function() { return /* binding */ drawText; },\n/* harmony export */   g: function() { return /* binding */ getNoteRect; }\n/* harmony export */ });\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(app-pages-browser)/./node_modules/@braintree/sanitize-url/dist/index.js\");\n/* harmony import */ var _mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mermaid-934d9bea.js */ \"(app-pages-browser)/./node_modules/mermaid/dist/mermaid-934d9bea.js\");\n\n\nconst drawRect = (element, rectData)=>{\n    const rectElement = element.append(\"rect\");\n    rectElement.attr(\"x\", rectData.x);\n    rectElement.attr(\"y\", rectData.y);\n    rectElement.attr(\"fill\", rectData.fill);\n    rectElement.attr(\"stroke\", rectData.stroke);\n    rectElement.attr(\"width\", rectData.width);\n    rectElement.attr(\"height\", rectData.height);\n    rectData.rx !== void 0 && rectElement.attr(\"rx\", rectData.rx);\n    rectData.ry !== void 0 && rectElement.attr(\"ry\", rectData.ry);\n    if (rectData.attrs !== void 0) {\n        for(const attrKey in rectData.attrs){\n            rectElement.attr(attrKey, rectData.attrs[attrKey]);\n        }\n    }\n    rectData.class !== void 0 && rectElement.attr(\"class\", rectData.class);\n    return rectElement;\n};\nconst drawBackgroundRect = (element, bounds)=>{\n    const rectData = {\n        x: bounds.startx,\n        y: bounds.starty,\n        width: bounds.stopx - bounds.startx,\n        height: bounds.stopy - bounds.starty,\n        fill: bounds.fill,\n        stroke: bounds.stroke,\n        class: \"rect\"\n    };\n    const rectElement = drawRect(element, rectData);\n    rectElement.lower();\n};\nconst drawText = (element, textData)=>{\n    const nText = textData.text.replace(_mermaid_934d9bea_js__WEBPACK_IMPORTED_MODULE_1__.H, \" \");\n    const textElem = element.append(\"text\");\n    textElem.attr(\"x\", textData.x);\n    textElem.attr(\"y\", textData.y);\n    textElem.attr(\"class\", \"legend\");\n    textElem.style(\"text-anchor\", textData.anchor);\n    textData.class !== void 0 && textElem.attr(\"class\", textData.class);\n    const tspan = textElem.append(\"tspan\");\n    tspan.attr(\"x\", textData.x + textData.textMargin * 2);\n    tspan.text(nText);\n    return textElem;\n};\nconst drawImage = (elem, x, y, link)=>{\n    const imageElement = elem.append(\"image\");\n    imageElement.attr(\"x\", x);\n    imageElement.attr(\"y\", y);\n    const sanitizedLink = (0,_braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_0__.sanitizeUrl)(link);\n    imageElement.attr(\"xlink:href\", sanitizedLink);\n};\nconst drawEmbeddedImage = (element, x, y, link)=>{\n    const imageElement = element.append(\"use\");\n    imageElement.attr(\"x\", x);\n    imageElement.attr(\"y\", y);\n    const sanitizedLink = (0,_braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_0__.sanitizeUrl)(link);\n    imageElement.attr(\"xlink:href\", \"#\".concat(sanitizedLink));\n};\nconst getNoteRect = ()=>{\n    const noteRectData = {\n        x: 0,\n        y: 0,\n        width: 100,\n        height: 100,\n        fill: \"#EDF2AE\",\n        stroke: \"#666\",\n        anchor: \"start\",\n        rx: 0,\n        ry: 0\n    };\n    return noteRectData;\n};\nconst getTextObj = ()=>{\n    const testObject = {\n        x: 0,\n        y: 0,\n        width: 100,\n        height: 100,\n        \"text-anchor\": \"start\",\n        style: \"#666\",\n        textMargin: 0,\n        rx: 0,\n        ry: 0,\n        tspan: true\n    };\n    return testObject;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tZXJtYWlkL2Rpc3Qvc3ZnRHJhd0NvbW1vbi1hZDVlZjU3Mi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBc0Q7QUFDTTtBQUM1RCxNQUFNRyxXQUFXLENBQUNDLFNBQVNDO0lBQ3pCLE1BQU1DLGNBQWNGLFFBQVFHLE1BQU0sQ0FBQztJQUNuQ0QsWUFBWUUsSUFBSSxDQUFDLEtBQUtILFNBQVNJLENBQUM7SUFDaENILFlBQVlFLElBQUksQ0FBQyxLQUFLSCxTQUFTSyxDQUFDO0lBQ2hDSixZQUFZRSxJQUFJLENBQUMsUUFBUUgsU0FBU00sSUFBSTtJQUN0Q0wsWUFBWUUsSUFBSSxDQUFDLFVBQVVILFNBQVNPLE1BQU07SUFDMUNOLFlBQVlFLElBQUksQ0FBQyxTQUFTSCxTQUFTUSxLQUFLO0lBQ3hDUCxZQUFZRSxJQUFJLENBQUMsVUFBVUgsU0FBU1MsTUFBTTtJQUMxQ1QsU0FBU1UsRUFBRSxLQUFLLEtBQUssS0FBS1QsWUFBWUUsSUFBSSxDQUFDLE1BQU1ILFNBQVNVLEVBQUU7SUFDNURWLFNBQVNXLEVBQUUsS0FBSyxLQUFLLEtBQUtWLFlBQVlFLElBQUksQ0FBQyxNQUFNSCxTQUFTVyxFQUFFO0lBQzVELElBQUlYLFNBQVNZLEtBQUssS0FBSyxLQUFLLEdBQUc7UUFDN0IsSUFBSyxNQUFNQyxXQUFXYixTQUFTWSxLQUFLLENBQUU7WUFDcENYLFlBQVlFLElBQUksQ0FBQ1UsU0FBU2IsU0FBU1ksS0FBSyxDQUFDQyxRQUFRO1FBQ25EO0lBQ0Y7SUFDQWIsU0FBU2MsS0FBSyxLQUFLLEtBQUssS0FBS2IsWUFBWUUsSUFBSSxDQUFDLFNBQVNILFNBQVNjLEtBQUs7SUFDckUsT0FBT2I7QUFDVDtBQUNBLE1BQU1jLHFCQUFxQixDQUFDaEIsU0FBU2lCO0lBQ25DLE1BQU1oQixXQUFXO1FBQ2ZJLEdBQUdZLE9BQU9DLE1BQU07UUFDaEJaLEdBQUdXLE9BQU9FLE1BQU07UUFDaEJWLE9BQU9RLE9BQU9HLEtBQUssR0FBR0gsT0FBT0MsTUFBTTtRQUNuQ1IsUUFBUU8sT0FBT0ksS0FBSyxHQUFHSixPQUFPRSxNQUFNO1FBQ3BDWixNQUFNVSxPQUFPVixJQUFJO1FBQ2pCQyxRQUFRUyxPQUFPVCxNQUFNO1FBQ3JCTyxPQUFPO0lBQ1Q7SUFDQSxNQUFNYixjQUFjSCxTQUFTQyxTQUFTQztJQUN0Q0MsWUFBWW9CLEtBQUs7QUFDbkI7QUFDQSxNQUFNQyxXQUFXLENBQUN2QixTQUFTd0I7SUFDekIsTUFBTUMsUUFBUUQsU0FBU0UsSUFBSSxDQUFDQyxPQUFPLENBQUM3QixtREFBY0EsRUFBRTtJQUNwRCxNQUFNOEIsV0FBVzVCLFFBQVFHLE1BQU0sQ0FBQztJQUNoQ3lCLFNBQVN4QixJQUFJLENBQUMsS0FBS29CLFNBQVNuQixDQUFDO0lBQzdCdUIsU0FBU3hCLElBQUksQ0FBQyxLQUFLb0IsU0FBU2xCLENBQUM7SUFDN0JzQixTQUFTeEIsSUFBSSxDQUFDLFNBQVM7SUFDdkJ3QixTQUFTQyxLQUFLLENBQUMsZUFBZUwsU0FBU00sTUFBTTtJQUM3Q04sU0FBU1QsS0FBSyxLQUFLLEtBQUssS0FBS2EsU0FBU3hCLElBQUksQ0FBQyxTQUFTb0IsU0FBU1QsS0FBSztJQUNsRSxNQUFNZ0IsUUFBUUgsU0FBU3pCLE1BQU0sQ0FBQztJQUM5QjRCLE1BQU0zQixJQUFJLENBQUMsS0FBS29CLFNBQVNuQixDQUFDLEdBQUdtQixTQUFTUSxVQUFVLEdBQUc7SUFDbkRELE1BQU1MLElBQUksQ0FBQ0Q7SUFDWCxPQUFPRztBQUNUO0FBQ0EsTUFBTUssWUFBWSxDQUFDQyxNQUFNN0IsR0FBR0MsR0FBRzZCO0lBQzdCLE1BQU1DLGVBQWVGLEtBQUsvQixNQUFNLENBQUM7SUFDakNpQyxhQUFhaEMsSUFBSSxDQUFDLEtBQUtDO0lBQ3ZCK0IsYUFBYWhDLElBQUksQ0FBQyxLQUFLRTtJQUN2QixNQUFNK0IsZ0JBQWdCekMsb0VBQVdBLENBQUN1QztJQUNsQ0MsYUFBYWhDLElBQUksQ0FBQyxjQUFjaUM7QUFDbEM7QUFDQSxNQUFNQyxvQkFBb0IsQ0FBQ3RDLFNBQVNLLEdBQUdDLEdBQUc2QjtJQUN4QyxNQUFNQyxlQUFlcEMsUUFBUUcsTUFBTSxDQUFDO0lBQ3BDaUMsYUFBYWhDLElBQUksQ0FBQyxLQUFLQztJQUN2QitCLGFBQWFoQyxJQUFJLENBQUMsS0FBS0U7SUFDdkIsTUFBTStCLGdCQUFnQnpDLG9FQUFXQSxDQUFDdUM7SUFDbENDLGFBQWFoQyxJQUFJLENBQUMsY0FBYyxJQUFrQixPQUFkaUM7QUFDdEM7QUFDQSxNQUFNRSxjQUFjO0lBQ2xCLE1BQU1DLGVBQWU7UUFDbkJuQyxHQUFHO1FBQ0hDLEdBQUc7UUFDSEcsT0FBTztRQUNQQyxRQUFRO1FBQ1JILE1BQU07UUFDTkMsUUFBUTtRQUNSc0IsUUFBUTtRQUNSbkIsSUFBSTtRQUNKQyxJQUFJO0lBQ047SUFDQSxPQUFPNEI7QUFDVDtBQUNBLE1BQU1DLGFBQWE7SUFDakIsTUFBTUMsYUFBYTtRQUNqQnJDLEdBQUc7UUFDSEMsR0FBRztRQUNIRyxPQUFPO1FBQ1BDLFFBQVE7UUFDUixlQUFlO1FBQ2ZtQixPQUFPO1FBQ1BHLFlBQVk7UUFDWnJCLElBQUk7UUFDSkMsSUFBSTtRQUNKbUIsT0FBTztJQUNUO0lBQ0EsT0FBT1c7QUFDVDtBQVNFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tZXJtYWlkL2Rpc3Qvc3ZnRHJhd0NvbW1vbi1hZDVlZjU3Mi5qcz9kOGY3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNhbml0aXplVXJsIH0gZnJvbSBcIkBicmFpbnRyZWUvc2FuaXRpemUtdXJsXCI7XG5pbXBvcnQgeyBIIGFzIGxpbmVCcmVha1JlZ2V4IH0gZnJvbSBcIi4vbWVybWFpZC05MzRkOWJlYS5qc1wiO1xuY29uc3QgZHJhd1JlY3QgPSAoZWxlbWVudCwgcmVjdERhdGEpID0+IHtcbiAgY29uc3QgcmVjdEVsZW1lbnQgPSBlbGVtZW50LmFwcGVuZChcInJlY3RcIik7XG4gIHJlY3RFbGVtZW50LmF0dHIoXCJ4XCIsIHJlY3REYXRhLngpO1xuICByZWN0RWxlbWVudC5hdHRyKFwieVwiLCByZWN0RGF0YS55KTtcbiAgcmVjdEVsZW1lbnQuYXR0cihcImZpbGxcIiwgcmVjdERhdGEuZmlsbCk7XG4gIHJlY3RFbGVtZW50LmF0dHIoXCJzdHJva2VcIiwgcmVjdERhdGEuc3Ryb2tlKTtcbiAgcmVjdEVsZW1lbnQuYXR0cihcIndpZHRoXCIsIHJlY3REYXRhLndpZHRoKTtcbiAgcmVjdEVsZW1lbnQuYXR0cihcImhlaWdodFwiLCByZWN0RGF0YS5oZWlnaHQpO1xuICByZWN0RGF0YS5yeCAhPT0gdm9pZCAwICYmIHJlY3RFbGVtZW50LmF0dHIoXCJyeFwiLCByZWN0RGF0YS5yeCk7XG4gIHJlY3REYXRhLnJ5ICE9PSB2b2lkIDAgJiYgcmVjdEVsZW1lbnQuYXR0cihcInJ5XCIsIHJlY3REYXRhLnJ5KTtcbiAgaWYgKHJlY3REYXRhLmF0dHJzICE9PSB2b2lkIDApIHtcbiAgICBmb3IgKGNvbnN0IGF0dHJLZXkgaW4gcmVjdERhdGEuYXR0cnMpIHtcbiAgICAgIHJlY3RFbGVtZW50LmF0dHIoYXR0cktleSwgcmVjdERhdGEuYXR0cnNbYXR0cktleV0pO1xuICAgIH1cbiAgfVxuICByZWN0RGF0YS5jbGFzcyAhPT0gdm9pZCAwICYmIHJlY3RFbGVtZW50LmF0dHIoXCJjbGFzc1wiLCByZWN0RGF0YS5jbGFzcyk7XG4gIHJldHVybiByZWN0RWxlbWVudDtcbn07XG5jb25zdCBkcmF3QmFja2dyb3VuZFJlY3QgPSAoZWxlbWVudCwgYm91bmRzKSA9PiB7XG4gIGNvbnN0IHJlY3REYXRhID0ge1xuICAgIHg6IGJvdW5kcy5zdGFydHgsXG4gICAgeTogYm91bmRzLnN0YXJ0eSxcbiAgICB3aWR0aDogYm91bmRzLnN0b3B4IC0gYm91bmRzLnN0YXJ0eCxcbiAgICBoZWlnaHQ6IGJvdW5kcy5zdG9weSAtIGJvdW5kcy5zdGFydHksXG4gICAgZmlsbDogYm91bmRzLmZpbGwsXG4gICAgc3Ryb2tlOiBib3VuZHMuc3Ryb2tlLFxuICAgIGNsYXNzOiBcInJlY3RcIlxuICB9O1xuICBjb25zdCByZWN0RWxlbWVudCA9IGRyYXdSZWN0KGVsZW1lbnQsIHJlY3REYXRhKTtcbiAgcmVjdEVsZW1lbnQubG93ZXIoKTtcbn07XG5jb25zdCBkcmF3VGV4dCA9IChlbGVtZW50LCB0ZXh0RGF0YSkgPT4ge1xuICBjb25zdCBuVGV4dCA9IHRleHREYXRhLnRleHQucmVwbGFjZShsaW5lQnJlYWtSZWdleCwgXCIgXCIpO1xuICBjb25zdCB0ZXh0RWxlbSA9IGVsZW1lbnQuYXBwZW5kKFwidGV4dFwiKTtcbiAgdGV4dEVsZW0uYXR0cihcInhcIiwgdGV4dERhdGEueCk7XG4gIHRleHRFbGVtLmF0dHIoXCJ5XCIsIHRleHREYXRhLnkpO1xuICB0ZXh0RWxlbS5hdHRyKFwiY2xhc3NcIiwgXCJsZWdlbmRcIik7XG4gIHRleHRFbGVtLnN0eWxlKFwidGV4dC1hbmNob3JcIiwgdGV4dERhdGEuYW5jaG9yKTtcbiAgdGV4dERhdGEuY2xhc3MgIT09IHZvaWQgMCAmJiB0ZXh0RWxlbS5hdHRyKFwiY2xhc3NcIiwgdGV4dERhdGEuY2xhc3MpO1xuICBjb25zdCB0c3BhbiA9IHRleHRFbGVtLmFwcGVuZChcInRzcGFuXCIpO1xuICB0c3Bhbi5hdHRyKFwieFwiLCB0ZXh0RGF0YS54ICsgdGV4dERhdGEudGV4dE1hcmdpbiAqIDIpO1xuICB0c3Bhbi50ZXh0KG5UZXh0KTtcbiAgcmV0dXJuIHRleHRFbGVtO1xufTtcbmNvbnN0IGRyYXdJbWFnZSA9IChlbGVtLCB4LCB5LCBsaW5rKSA9PiB7XG4gIGNvbnN0IGltYWdlRWxlbWVudCA9IGVsZW0uYXBwZW5kKFwiaW1hZ2VcIik7XG4gIGltYWdlRWxlbWVudC5hdHRyKFwieFwiLCB4KTtcbiAgaW1hZ2VFbGVtZW50LmF0dHIoXCJ5XCIsIHkpO1xuICBjb25zdCBzYW5pdGl6ZWRMaW5rID0gc2FuaXRpemVVcmwobGluayk7XG4gIGltYWdlRWxlbWVudC5hdHRyKFwieGxpbms6aHJlZlwiLCBzYW5pdGl6ZWRMaW5rKTtcbn07XG5jb25zdCBkcmF3RW1iZWRkZWRJbWFnZSA9IChlbGVtZW50LCB4LCB5LCBsaW5rKSA9PiB7XG4gIGNvbnN0IGltYWdlRWxlbWVudCA9IGVsZW1lbnQuYXBwZW5kKFwidXNlXCIpO1xuICBpbWFnZUVsZW1lbnQuYXR0cihcInhcIiwgeCk7XG4gIGltYWdlRWxlbWVudC5hdHRyKFwieVwiLCB5KTtcbiAgY29uc3Qgc2FuaXRpemVkTGluayA9IHNhbml0aXplVXJsKGxpbmspO1xuICBpbWFnZUVsZW1lbnQuYXR0cihcInhsaW5rOmhyZWZcIiwgYCMke3Nhbml0aXplZExpbmt9YCk7XG59O1xuY29uc3QgZ2V0Tm90ZVJlY3QgPSAoKSA9PiB7XG4gIGNvbnN0IG5vdGVSZWN0RGF0YSA9IHtcbiAgICB4OiAwLFxuICAgIHk6IDAsXG4gICAgd2lkdGg6IDEwMCxcbiAgICBoZWlnaHQ6IDEwMCxcbiAgICBmaWxsOiBcIiNFREYyQUVcIixcbiAgICBzdHJva2U6IFwiIzY2NlwiLFxuICAgIGFuY2hvcjogXCJzdGFydFwiLFxuICAgIHJ4OiAwLFxuICAgIHJ5OiAwXG4gIH07XG4gIHJldHVybiBub3RlUmVjdERhdGE7XG59O1xuY29uc3QgZ2V0VGV4dE9iaiA9ICgpID0+IHtcbiAgY29uc3QgdGVzdE9iamVjdCA9IHtcbiAgICB4OiAwLFxuICAgIHk6IDAsXG4gICAgd2lkdGg6IDEwMCxcbiAgICBoZWlnaHQ6IDEwMCxcbiAgICBcInRleHQtYW5jaG9yXCI6IFwic3RhcnRcIixcbiAgICBzdHlsZTogXCIjNjY2XCIsXG4gICAgdGV4dE1hcmdpbjogMCxcbiAgICByeDogMCxcbiAgICByeTogMCxcbiAgICB0c3BhbjogdHJ1ZVxuICB9O1xuICByZXR1cm4gdGVzdE9iamVjdDtcbn07XG5leHBvcnQge1xuICBkcmF3QmFja2dyb3VuZFJlY3QgYXMgYSxcbiAgZHJhd0VtYmVkZGVkSW1hZ2UgYXMgYixcbiAgZHJhd0ltYWdlIGFzIGMsXG4gIGRyYXdSZWN0IGFzIGQsXG4gIGdldFRleHRPYmogYXMgZSxcbiAgZHJhd1RleHQgYXMgZixcbiAgZ2V0Tm90ZVJlY3QgYXMgZ1xufTtcbiJdLCJuYW1lcyI6WyJzYW5pdGl6ZVVybCIsIkgiLCJsaW5lQnJlYWtSZWdleCIsImRyYXdSZWN0IiwiZWxlbWVudCIsInJlY3REYXRhIiwicmVjdEVsZW1lbnQiLCJhcHBlbmQiLCJhdHRyIiwieCIsInkiLCJmaWxsIiwic3Ryb2tlIiwid2lkdGgiLCJoZWlnaHQiLCJyeCIsInJ5IiwiYXR0cnMiLCJhdHRyS2V5IiwiY2xhc3MiLCJkcmF3QmFja2dyb3VuZFJlY3QiLCJib3VuZHMiLCJzdGFydHgiLCJzdGFydHkiLCJzdG9weCIsInN0b3B5IiwibG93ZXIiLCJkcmF3VGV4dCIsInRleHREYXRhIiwiblRleHQiLCJ0ZXh0IiwicmVwbGFjZSIsInRleHRFbGVtIiwic3R5bGUiLCJhbmNob3IiLCJ0c3BhbiIsInRleHRNYXJnaW4iLCJkcmF3SW1hZ2UiLCJlbGVtIiwibGluayIsImltYWdlRWxlbWVudCIsInNhbml0aXplZExpbmsiLCJkcmF3RW1iZWRkZWRJbWFnZSIsImdldE5vdGVSZWN0Iiwibm90ZVJlY3REYXRhIiwiZ2V0VGV4dE9iaiIsInRlc3RPYmplY3QiLCJhIiwiYiIsImMiLCJkIiwiZSIsImYiLCJnIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/mermaid/dist/svgDrawCommon-ad5ef572.js\n"));

/***/ })

}]);
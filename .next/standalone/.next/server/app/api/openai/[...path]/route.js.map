{"version":3,"file":"app/api/openai/[...path]/route.js","mappings":"oFAAAA,CAAAA,EAAAC,OAAA,CAAAC,QAAA,0CCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,weCQA,IAAMC,EAAc,IAAIC,IAAIC,OAAOC,MAAM,CAACC,EAAAA,EAAUA,GAcpD,eAAeC,EACbC,CAAgB,CAChB,CAAEC,OAAAA,CAAM,CAAkC,EAI1C,GAFAC,QAAQC,GAAG,CAAC,yBAA0BF,GAElCD,YAAAA,EAAII,MAAM,CACZ,OAAOC,EAAAA,EAAYA,CAACC,IAAI,CAAC,CAAEC,KAAM,IAAK,EAAG,CAAEC,OAAQ,GAAI,GAGzD,IAAMC,EAAUR,EAAOS,IAAI,CAACC,IAAI,CAAC,KAEjC,GAAI,CAACjB,EAAYkB,GAAG,CAACH,GAEnB,OADAP,QAAQC,GAAG,CAAC,iCAAkCM,GACvCJ,EAAAA,EAAYA,CAACC,IAAI,CACtB,CACEO,MAAO,GACPC,IAAK,kCAAoCL,CAC3C,EACA,CACED,OAAQ,GACV,GAIJ,IAAMO,EAAaC,CAAAA,EAAAA,EAAAA,CAAAA,EAAKhB,EAAKiB,EAAAA,EAAaA,CAACC,GAAG,EAC9C,GAAIH,EAAWF,KAAK,CAClB,OAAOR,EAAAA,EAAYA,CAACC,IAAI,CAACS,EAAY,CACnCP,OAAQ,GACV,GAGF,GAAI,CACF,IAAMW,EAAW,MAAMC,CAAAA,EAAAA,EAAAA,CAAAA,EAAcpB,GAGrC,GAAIS,IAAYX,EAAAA,EAAUA,CAACuB,aAAa,EAAIF,MAAAA,EAASX,MAAM,CAAU,KAhDtDc,EAkDb,IAAMC,GAlDOD,EAiDI,MAAMH,EAASb,IAAI,GA9CpCkB,CAFWC,EAAAA,EAAAA,CAAAA,IAEJC,WAAW,EACpBJ,CAAAA,EAAeK,IAAI,CAAGL,EAAeK,IAAI,CAACC,MAAM,CAC9C,GAAO,CAACC,EAAEC,EAAE,CAACC,UAAU,CAAC,WAIrBT,GA0CH,OAAOjB,EAAAA,EAAYA,CAACC,IAAI,CAACiB,EAAiB,CACxCf,OAAQW,EAASX,MAAM,EAE3B,CAEA,OAAOW,CACT,CAAE,MAAOa,EAAG,CAEV,OADA9B,QAAQW,KAAK,CAAC,YAAamB,GACpB3B,EAAAA,EAAYA,CAACC,IAAI,CAAC2B,CAAAA,EAAAA,EAAAA,CAAAA,EAAaD,GACxC,CACF,CAEO,IAAME,EAAMnC,EACNoC,EAAOpC,EAEPqC,EAAU,OACVC,EAAkB,CAC7B,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACD,CCxFDC,EAAA,IAAwBC,EAAAC,mBAAmB,EAC3CC,WAAA,CACAC,KAAcC,EAAAC,CAAS,CAAAC,SAAA,CACvBC,KAAA,8BACAC,SAAA,wBACAC,SAAA,QACAC,WAAA,gCACA,EACAC,iBAAA,uEACAC,iBAVA,aAWAC,SAAYC,CACZ,GAIA,CAAQC,oBAAAA,CAAA,CAAAC,6BAAAA,CAAA,CAAAC,YAAAA,CAAA,CAAAC,YAAAA,CAAA,CAAAC,wBAAAA,CAAA,EAAuGpB,EAC/GqB,EAAA,8BACA,SAAAC,IACA,MAAW,GAAAC,EAAAC,EAAA,EAAW,CACtBN,YAAAA,EACAD,6BAAAA,CACA,EACA,CC1BO,IAAAQ,EAAqBC,EAC5BC,EAAeC,EAAAC,CAAsB,CAAAC,IAAA,CAAM9B","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./app/api/openai/[...path]/route.ts","webpack://_N_E/./app/api/openai/[...path]/route.ts?c4a0","webpack://_N_E/?8d9a","webpack://_N_E/<anon>"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import { type OpenAIListModelResponse } from \"@/app/client/platforms/openai\";\nimport { getServerSideConfig } from \"@/app/config/server\";\nimport { ModelProvider, OpenaiPath } from \"@/app/constant\";\nimport { prettyObject } from \"@/app/utils/format\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { auth } from \"../../auth\";\nimport { requestOpenai } from \"../../common\";\n\nconst ALLOWD_PATH = new Set(Object.values(OpenaiPath));\n\nfunction getModels(remoteModelRes: OpenAIListModelResponse) {\n  const config = getServerSideConfig();\n\n  if (config.disableGPT4) {\n    remoteModelRes.data = remoteModelRes.data.filter(\n      (m) => !m.id.startsWith(\"gpt-4\"),\n    );\n  }\n\n  return remoteModelRes;\n}\n\nasync function handle(\n  req: NextRequest,\n  { params }: { params: { path: string[] } },\n) {\n  console.log(\"[OpenAI Route] params \", params);\n\n  if (req.method === \"OPTIONS\") {\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\n  }\n\n  const subpath = params.path.join(\"/\");\n\n  if (!ALLOWD_PATH.has(subpath)) {\n    console.log(\"[OpenAI Route] forbidden path \", subpath);\n    return NextResponse.json(\n      {\n        error: true,\n        msg: \"you are not allowed to request \" + subpath,\n      },\n      {\n        status: 403,\n      },\n    );\n  }\n\n  const authResult = auth(req, ModelProvider.GPT);\n  if (authResult.error) {\n    return NextResponse.json(authResult, {\n      status: 401,\n    });\n  }\n\n  try {\n    const response = await requestOpenai(req);\n\n    // list models\n    if (subpath === OpenaiPath.ListModelPath && response.status === 200) {\n      const resJson = (await response.json()) as OpenAIListModelResponse;\n      const availableModels = getModels(resJson);\n      return NextResponse.json(availableModels, {\n        status: response.status,\n      });\n    }\n\n    return response;\n  } catch (e) {\n    console.error(\"[OpenAI] \", e);\n    return NextResponse.json(prettyObject(e));\n  }\n}\n\nexport const GET = handle;\nexport const POST = handle;\n\nexport const runtime = \"edge\";\nexport const preferredRegion = [\n  \"arn1\",\n  \"bom1\",\n  \"cdg1\",\n  \"cle1\",\n  \"cpt1\",\n  \"dub1\",\n  \"fra1\",\n  \"gru1\",\n  \"hnd1\",\n  \"iad1\",\n  \"icn1\",\n  \"kix1\",\n  \"lhr1\",\n  \"pdx1\",\n  \"sfo1\",\n  \"sin1\",\n  \"syd1\",\n];\n","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/Volumes/D/github/ChatGPT-Next-Web/app/api/openai/[...path]/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/openai/[...path]/route\",\n        pathname: \"/api/openai/[...path]\",\n        filename: \"route\",\n        bundlePath: \"app/api/openai/[...path]/route\"\n    },\n    resolvedPagePath: \"/Volumes/D/github/ChatGPT-Next-Web/app/api/openai/[...path]/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/openai/[...path]/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fopenai%2F%5B...path%5D%2Froute&page=%2Fapi%2Fopenai%2F%5B...path%5D%2Froute&pagePath=private-next-app-dir%2Fapi%2Fopenai%2F%5B...path%5D%2Froute.ts&appDir=%2FVolumes%2FD%2Fgithub%2FChatGPT-Next-Web%2Fapp&appPaths=%2Fapi%2Fopenai%2F%5B...path%5D%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=arn1&preferredRegion=bom1&preferredRegion=cdg1&preferredRegion=cle1&preferredRegion=cpt1&preferredRegion=dub1&preferredRegion=fra1&preferredRegion=gru1&preferredRegion=hnd1&preferredRegion=iad1&preferredRegion=icn1&preferredRegion=kix1&preferredRegion=lhr1&preferredRegion=pdx1&preferredRegion=sfo1&preferredRegion=sin1&preferredRegion=syd1&middlewareConfig=e30%3D!private-next-app-dir/api/openai/[...path]/route.ts?__next_edge_ssr_entry__\";\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule);\n\n//# sourceMappingURL=edge-app-route.js.map"],"names":["module","exports","require","ALLOWD_PATH","Set","Object","values","OpenaiPath","handle","req","params","console","log","method","NextResponse","json","body","status","subpath","path","join","has","error","msg","authResult","auth","ModelProvider","GPT","response","requestOpenai","ListModelPath","remoteModelRes","availableModels","config","getServerSideConfig","disableGPT4","data","filter","m","id","startsWith","e","prettyObject","GET","POST","runtime","preferredRegion","routeModule","module_compiled","AppRouteRouteModule","definition","kind","route_kind","x","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","requestAsyncStorage","staticGenerationAsyncStorage","serverHooks","headerHooks","staticGenerationBailout","originalPathname","patchFetch","patch_fetch","XH","ComponentMod","route_next_edge_ssr_entry_namespaceObject","next_edge_app_route_loaderabsolutePagePath_private_next_app_dir_2Fapi_2Fopenai_2F_5B_path_5D_2Froute_ts_page_2Fapi_2Fopenai_2F_5B_path_5D_2Froute_appDirLoader_bmV4dC1hcHAtbG9hZGVyP25hbWU9YXBwJTJGYXBpJTJGb3BlbmFpJTJGJTVCLi4ucGF0aCU1RCUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGb3BlbmFpJTJGJTVCLi4ucGF0aCU1RCUyRnJvdXRlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGb3BlbmFpJTJGJTVCLi4ucGF0aCU1RCUyRnJvdXRlLnRzJmFwcERpcj0lMkZWb2x1bWVzJTJGRCUyRmdpdGh1YiUyRkNoYXRHUFQtTmV4dC1XZWIlMkZhcHAmYXBwUGF0aHM9JTJGYXBpJTJGb3BlbmFpJTJGJTVCLi4ucGF0aCU1RCUyRnJvdXRlJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PXN0YW5kYWxvbmUmcHJlZmVycmVkUmVnaW9uPWFybjEmcHJlZmVycmVkUmVnaW9uPWJvbTEmcHJlZmVycmVkUmVnaW9uPWNkZzEmcHJlZmVycmVkUmVnaW9uPWNsZTEmcHJlZmVycmVkUmVnaW9uPWNwdDEmcHJlZmVycmVkUmVnaW9uPWR1YjEmcHJlZmVycmVkUmVnaW9uPWZyYTEmcHJlZmVycmVkUmVnaW9uPWdydTEmcHJlZmVycmVkUmVnaW9uPWhuZDEmcHJlZmVycmVkUmVnaW9uPWlhZDEmcHJlZmVycmVkUmVnaW9uPWljbjEmcHJlZmVycmVkUmVnaW9uPWtpeDEmcHJlZmVycmVkUmVnaW9uPWxocjEmcHJlZmVycmVkUmVnaW9uPXBkeDEmcHJlZmVycmVkUmVnaW9uPXNmbzEmcHJlZmVycmVkUmVnaW9uPXNpbjEmcHJlZmVycmVkUmVnaW9uPXN5ZDEmbWlkZGxld2FyZUNvbmZpZz1lMzAlM0Qh_nextConfigOutput_standalone_preferredRegion_arn1_preferredRegion_bom1_preferredRegion_cdg1_preferredRegion_cle1_preferredRegion_cpt1_preferredRegion_dub1_preferredRegion_fra1_preferredRegion_gru1_preferredRegion_hnd1_preferredRegion_iad1_preferredRegion_icn1_preferredRegion_kix1_preferredRegion_lhr1_preferredRegion_pdx1_preferredRegion_sfo1_preferredRegion_sin1_preferredRegion_syd1_middlewareConfig_e30_3D_","edge_route_module_wrapper","a","wrap"],"sourceRoot":""}
{"version":3,"file":"app/api/[provider]/[...path]/route.js","mappings":"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","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./app/utils/model.ts","webpack://_N_E/./app/utils/cloudflare.ts","webpack://_N_E/./app/api/common.ts","webpack://_N_E/./app/api/openai.ts","webpack://_N_E/./app/api/azure.ts","webpack://_N_E/./app/api/google.ts","webpack://_N_E/./app/api/anthropic.ts","webpack://_N_E/./app/utils/baidu.ts","webpack://_N_E/./app/api/baidu.ts","webpack://_N_E/./app/api/bytedance.ts","webpack://_N_E/./app/api/alibaba.ts","webpack://_N_E/./app/api/moonshot.ts","webpack://_N_E/./app/api/stability.ts","webpack://_N_E/./app/api/iflytek.ts","webpack://_N_E/./app/api/[provider]/[...path]/route.ts","webpack://_N_E/./app/api/[provider]/[...path]/route.ts?da5f","webpack://_N_E/?ee54","webpack://_N_E/<anon>"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import { DEFAULT_MODELS } from \"../constant\";\nimport { LLMModel } from \"../client/api\";\n\nconst CustomSeq = {\n  val: -1000, //To ensure the custom model located at front, start from -1000, refer to constant.ts\n  cache: new Map<string, number>(),\n  next: (id: string) => {\n    if (CustomSeq.cache.has(id)) {\n      return CustomSeq.cache.get(id) as number;\n    } else {\n      let seq = CustomSeq.val++;\n      CustomSeq.cache.set(id, seq);\n      return seq;\n    }\n  },\n};\n\nconst customProvider = (providerName: string) => ({\n  id: providerName.toLowerCase(),\n  providerName: providerName,\n  providerType: \"custom\",\n  sorted: CustomSeq.next(providerName),\n});\n\n/**\n * Sorts an array of models based on specified rules.\n *\n * First, sorted by provider; if the same, sorted by model\n */\nconst sortModelTable = (models: ReturnType<typeof collectModels>) =>\n  models.sort((a, b) => {\n    if (a.provider && b.provider) {\n      let cmp = a.provider.sorted - b.provider.sorted;\n      return cmp === 0 ? a.sorted - b.sorted : cmp;\n    } else {\n      return a.sorted - b.sorted;\n    }\n  });\n\nexport function collectModelTable(\n  models: readonly LLMModel[],\n  customModels: string,\n) {\n  const modelTable: Record<\n    string,\n    {\n      available: boolean;\n      name: string;\n      displayName: string;\n      sorted: number;\n      provider?: LLMModel[\"provider\"]; // Marked as optional\n      isDefault?: boolean;\n    }\n  > = {};\n\n  // default models\n  models.forEach((m) => {\n    // using <modelName>@<providerId> as fullName\n    modelTable[`${m.name}@${m?.provider?.id}`] = {\n      ...m,\n      displayName: m.name, // 'provider' is copied over if it exists\n    };\n  });\n\n  // server custom models\n  customModels\n    .split(\",\")\n    .filter((v) => !!v && v.length > 0)\n    .forEach((m) => {\n      const available = !m.startsWith(\"-\");\n      const nameConfig =\n        m.startsWith(\"+\") || m.startsWith(\"-\") ? m.slice(1) : m;\n      let [name, displayName] = nameConfig.split(\"=\");\n\n      // enable or disable all models\n      if (name === \"all\") {\n        Object.values(modelTable).forEach(\n          (model) => (model.available = available),\n        );\n      } else {\n        // 1. find model by name, and set available value\n        const [customModelName, customProviderName] = name.split(\"@\");\n        let count = 0;\n        for (const fullName in modelTable) {\n          const [modelName, providerName] = fullName.split(\"@\");\n          if (\n            customModelName == modelName &&\n            (customProviderName === undefined ||\n              customProviderName === providerName)\n          ) {\n            count += 1;\n            modelTable[fullName][\"available\"] = available;\n            // swap name and displayName for bytedance\n            if (providerName === \"bytedance\") {\n              [name, displayName] = [displayName, modelName];\n              modelTable[fullName][\"name\"] = name;\n            }\n            if (displayName) {\n              modelTable[fullName][\"displayName\"] = displayName;\n            }\n          }\n        }\n        // 2. if model not exists, create new model with available value\n        if (count === 0) {\n          let [customModelName, customProviderName] = name.split(\"@\");\n          const provider = customProvider(\n            customProviderName || customModelName,\n          );\n          // swap name and displayName for bytedance\n          if (displayName && provider.providerName == \"ByteDance\") {\n            [customModelName, displayName] = [displayName, customModelName];\n          }\n          modelTable[`${customModelName}@${provider?.id}`] = {\n            name: customModelName,\n            displayName: displayName || customModelName,\n            available,\n            provider, // Use optional chaining\n            sorted: CustomSeq.next(`${customModelName}@${provider?.id}`),\n          };\n        }\n      }\n    });\n\n  return modelTable;\n}\n\nexport function collectModelTableWithDefaultModel(\n  models: readonly LLMModel[],\n  customModels: string,\n  defaultModel: string,\n) {\n  let modelTable = collectModelTable(models, customModels);\n  if (defaultModel && defaultModel !== \"\") {\n    if (defaultModel.includes(\"@\")) {\n      if (defaultModel in modelTable) {\n        modelTable[defaultModel].isDefault = true;\n      }\n    } else {\n      for (const key of Object.keys(modelTable)) {\n        if (\n          modelTable[key].available &&\n          key.split(\"@\").shift() == defaultModel\n        ) {\n          modelTable[key].isDefault = true;\n          break;\n        }\n      }\n    }\n  }\n  return modelTable;\n}\n\n/**\n * Generate full model table.\n */\nexport function collectModels(\n  models: readonly LLMModel[],\n  customModels: string,\n) {\n  const modelTable = collectModelTable(models, customModels);\n  let allModels = Object.values(modelTable);\n\n  allModels = sortModelTable(allModels);\n\n  return allModels;\n}\n\nexport function collectModelsWithDefaultModel(\n  models: readonly LLMModel[],\n  customModels: string,\n  defaultModel: string,\n) {\n  const modelTable = collectModelTableWithDefaultModel(\n    models,\n    customModels,\n    defaultModel,\n  );\n  let allModels = Object.values(modelTable);\n\n  allModels = sortModelTable(allModels);\n\n  return allModels;\n}\n\nexport function isModelAvailableInServer(\n  customModels: string,\n  modelName: string,\n  providerName: string,\n) {\n  const fullName = `${modelName}@${providerName}`;\n  const modelTable = collectModelTable(DEFAULT_MODELS, customModels);\n  return modelTable[fullName]?.available === false;\n}\n","export function cloudflareAIGatewayUrl(fetchUrl: string) {\n  // rebuild fetchUrl, if using cloudflare ai gateway\n  // document: https://developers.cloudflare.com/ai-gateway/providers/openai/\n\n  const paths = fetchUrl.split(\"/\");\n  if (\"gateway.ai.cloudflare.com\" == paths[2]) {\n    // is cloudflare.com ai gateway\n    // https://gateway.ai.cloudflare.com/v1/{account_id}/{gateway_id}/azure-openai/{resource_name}/{deployment_name}/chat/completions?api-version=2023-05-15'\n    if (\"azure-openai\" == paths[6]) {\n      // is azure gateway\n      return paths.slice(0, 8).concat(paths.slice(-3)).join(\"/\"); // rebuild ai gateway azure_url\n    }\n    // https://gateway.ai.cloudflare.com/v1/{account_id}/{gateway_id}/openai/chat/completions\n    if (\"openai\" == paths[6]) {\n      // is openai gateway\n      return paths.slice(0, 7).concat(paths.slice(-2)).join(\"/\"); // rebuild ai gateway openai_url\n    }\n    // https://gateway.ai.cloudflare.com/v1/{account_id}/{gateway_id}/anthropic/v1/messages \\\n    if (\"anthropic\" == paths[6]) {\n      // is anthropic gateway\n      return paths.slice(0, 7).concat(paths.slice(-2)).join(\"/\"); // rebuild ai gateway anthropic_url\n    }\n    // TODO: Amazon Bedrock, Groq, HuggingFace...\n  }\n  return fetchUrl;\n}\n","import { NextRequest, NextResponse } from \"next/server\";\nimport { getServerSideConfig } from \"../config/server\";\nimport {\n  DEFAULT_MODELS,\n  OPENAI_BASE_URL,\n  GEMINI_BASE_URL,\n  ServiceProvider,\n} from \"../constant\";\nimport { isModelAvailableInServer } from \"../utils/model\";\nimport { cloudflareAIGatewayUrl } from \"../utils/cloudflare\";\n\nconst serverConfig = getServerSideConfig();\n\nexport async function requestOpenai(req: NextRequest) {\n  const controller = new AbortController();\n\n  const isAzure = req.nextUrl.pathname.includes(\"azure/deployments\");\n\n  var authValue,\n    authHeaderName = \"\";\n  if (isAzure) {\n    authValue =\n      req.headers\n        .get(\"Authorization\")\n        ?.trim()\n        .replaceAll(\"Bearer \", \"\")\n        .trim() ?? \"\";\n\n    authHeaderName = \"api-key\";\n  } else {\n    authValue = req.headers.get(\"Authorization\") ?? \"\";\n    authHeaderName = \"Authorization\";\n  }\n\n  let path = `${req.nextUrl.pathname}${req.nextUrl.search}`.replaceAll(\n    \"/api/openai/\",\n    \"\",\n  );\n\n  let baseUrl =\n    (isAzure ? serverConfig.azureUrl : serverConfig.baseUrl) || OPENAI_BASE_URL;\n\n  if (!baseUrl.startsWith(\"http\")) {\n    baseUrl = `https://${baseUrl}`;\n  }\n\n  if (baseUrl.endsWith(\"/\")) {\n    baseUrl = baseUrl.slice(0, -1);\n  }\n\n  console.log(\"[Proxy] \", path);\n  console.log(\"[Base Url]\", baseUrl);\n\n  const timeoutId = setTimeout(\n    () => {\n      controller.abort();\n    },\n    10 * 60 * 1000,\n  );\n\n  if (isAzure) {\n    const azureApiVersion =\n      req?.nextUrl?.searchParams?.get(\"api-version\") ||\n      serverConfig.azureApiVersion;\n    baseUrl = baseUrl.split(\"/deployments\").shift() as string;\n    path = `${req.nextUrl.pathname.replaceAll(\n      \"/api/azure/\",\n      \"\",\n    )}?api-version=${azureApiVersion}`;\n\n    // Forward compatibility:\n    // if display_name(deployment_name) not set, and '{deploy-id}' in AZURE_URL\n    // then using default '{deploy-id}'\n    if (serverConfig.customModels && serverConfig.azureUrl) {\n      const modelName = path.split(\"/\")[1];\n      let realDeployName = \"\";\n      serverConfig.customModels\n        .split(\",\")\n        .filter((v) => !!v && !v.startsWith(\"-\") && v.includes(modelName))\n        .forEach((m) => {\n          const [fullName, displayName] = m.split(\"=\");\n          const [_, providerName] = fullName.split(\"@\");\n          if (providerName === \"azure\" && !displayName) {\n            const [_, deployId] = (serverConfig?.azureUrl ?? \"\").split(\n              \"deployments/\",\n            );\n            if (deployId) {\n              realDeployName = deployId;\n            }\n          }\n        });\n      if (realDeployName) {\n        console.log(\"[Replace with DeployId\", realDeployName);\n        path = path.replaceAll(modelName, realDeployName);\n      }\n    }\n  }\n\n  const fetchUrl = cloudflareAIGatewayUrl(`${baseUrl}/${path}`);\n  console.log(\"fetchUrl\", fetchUrl);\n  const fetchOptions: RequestInit = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Cache-Control\": \"no-store\",\n      [authHeaderName]: authValue,\n      ...(serverConfig.openaiOrgId && {\n        \"OpenAI-Organization\": serverConfig.openaiOrgId,\n      }),\n    },\n    method: req.method,\n    body: req.body,\n    // to fix #2485: https://stackoverflow.com/questions/55920957/cloudflare-worker-typeerror-one-time-use-body\n    redirect: \"manual\",\n    // @ts-ignore\n    duplex: \"half\",\n    signal: controller.signal,\n  };\n\n  // #1815 try to refuse gpt4 request\n  if (serverConfig.customModels && req.body) {\n    try {\n      const clonedBody = await req.text();\n      fetchOptions.body = clonedBody;\n\n      const jsonBody = JSON.parse(clonedBody) as { model?: string };\n\n      // not undefined and is false\n      if (\n        isModelAvailableInServer(\n          serverConfig.customModels,\n          jsonBody?.model as string,\n          ServiceProvider.OpenAI as string,\n        ) ||\n        isModelAvailableInServer(\n          serverConfig.customModels,\n          jsonBody?.model as string,\n          ServiceProvider.Azure as string,\n        )\n      ) {\n        return NextResponse.json(\n          {\n            error: true,\n            message: `you are not allowed to use ${jsonBody?.model} model`,\n          },\n          {\n            status: 403,\n          },\n        );\n      }\n    } catch (e) {\n      console.error(\"[OpenAI] gpt4 filter\", e);\n    }\n  }\n\n  try {\n    const res = await fetch(fetchUrl, fetchOptions);\n\n    // Extract the OpenAI-Organization header from the response\n    const openaiOrganizationHeader = res.headers.get(\"OpenAI-Organization\");\n\n    // Check if serverConfig.openaiOrgId is defined and not an empty string\n    if (serverConfig.openaiOrgId && serverConfig.openaiOrgId.trim() !== \"\") {\n      // If openaiOrganizationHeader is present, log it; otherwise, log that the header is not present\n      console.log(\"[Org ID]\", openaiOrganizationHeader);\n    } else {\n      console.log(\"[Org ID] is not set up.\");\n    }\n\n    // to prevent browser prompt for credentials\n    const newHeaders = new Headers(res.headers);\n    newHeaders.delete(\"www-authenticate\");\n    // to disable nginx buffering\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\n\n    // Conditionally delete the OpenAI-Organization header from the response if [Org ID] is undefined or empty (not setup in ENV)\n    // Also, this is to prevent the header from being sent to the client\n    if (!serverConfig.openaiOrgId || serverConfig.openaiOrgId.trim() === \"\") {\n      newHeaders.delete(\"OpenAI-Organization\");\n    }\n\n    // The latest version of the OpenAI API forced the content-encoding to be \"br\" in json response\n    // So if the streaming is disabled, we need to remove the content-encoding header\n    // Because Vercel uses gzip to compress the response, if we don't remove the content-encoding header\n    // The browser will try to decode the response with brotli and fail\n    newHeaders.delete(\"content-encoding\");\n\n    return new Response(res.body, {\n      status: res.status,\n      statusText: res.statusText,\n      headers: newHeaders,\n    });\n  } finally {\n    clearTimeout(timeoutId);\n  }\n}\n","import { type OpenAIListModelResponse } from \"@/app/client/platforms/openai\";\nimport { getServerSideConfig } from \"@/app/config/server\";\nimport { ModelProvider, OpenaiPath } from \"@/app/constant\";\nimport { prettyObject } from \"@/app/utils/format\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { auth } from \"./auth\";\nimport { requestOpenai } from \"./common\";\n\nconst ALLOWD_PATH = new Set(Object.values(OpenaiPath));\n\nfunction getModels(remoteModelRes: OpenAIListModelResponse) {\n  const config = getServerSideConfig();\n\n  if (config.disableGPT4) {\n    remoteModelRes.data = remoteModelRes.data.filter(\n      (m) => !m.id.startsWith(\"gpt-4\") || m.id.startsWith(\"gpt-4o-mini\"),\n    );\n  }\n\n  return remoteModelRes;\n}\n\nexport async function handle(\n  req: NextRequest,\n  { params }: { params: { path: string[] } },\n) {\n  console.log(\"[OpenAI Route] params \", params);\n\n  if (req.method === \"OPTIONS\") {\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\n  }\n\n  const subpath = params.path.join(\"/\");\n\n  if (!ALLOWD_PATH.has(subpath)) {\n    console.log(\"[OpenAI Route] forbidden path \", subpath);\n    return NextResponse.json(\n      {\n        error: true,\n        msg: \"you are not allowed to request \" + subpath,\n      },\n      {\n        status: 403,\n      },\n    );\n  }\n\n  const authResult = auth(req, ModelProvider.GPT);\n  if (authResult.error) {\n    return NextResponse.json(authResult, {\n      status: 401,\n    });\n  }\n\n  try {\n    const response = await requestOpenai(req);\n\n    // list models\n    if (subpath === OpenaiPath.ListModelPath && response.status === 200) {\n      const resJson = (await response.json()) as OpenAIListModelResponse;\n      const availableModels = getModels(resJson);\n      return NextResponse.json(availableModels, {\n        status: response.status,\n      });\n    }\n\n    return response;\n  } catch (e) {\n    console.error(\"[OpenAI] \", e);\n    return NextResponse.json(prettyObject(e));\n  }\n}\n","import { getServerSideConfig } from \"@/app/config/server\";\nimport { ModelProvider } from \"@/app/constant\";\nimport { prettyObject } from \"@/app/utils/format\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { auth } from \"./auth\";\nimport { requestOpenai } from \"./common\";\n\nexport async function handle(\n  req: NextRequest,\n  { params }: { params: { path: string[] } },\n) {\n  console.log(\"[Azure Route] params \", params);\n\n  if (req.method === \"OPTIONS\") {\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\n  }\n\n  const subpath = params.path.join(\"/\");\n\n  const authResult = auth(req, ModelProvider.GPT);\n  if (authResult.error) {\n    return NextResponse.json(authResult, {\n      status: 401,\n    });\n  }\n\n  try {\n    return await requestOpenai(req);\n  } catch (e) {\n    console.error(\"[Azure] \", e);\n    return NextResponse.json(prettyObject(e));\n  }\n}\n","import { NextRequest, NextResponse } from \"next/server\";\nimport { auth } from \"./auth\";\nimport { getServerSideConfig } from \"@/app/config/server\";\nimport {\n  ApiPath,\n  GEMINI_BASE_URL,\n  Google,\n  ModelProvider,\n} from \"@/app/constant\";\nimport { prettyObject } from \"@/app/utils/format\";\n\nconst serverConfig = getServerSideConfig();\n\nexport async function handle(\n  req: NextRequest,\n  { params }: { params: { provider: string; path: string[] } },\n) {\n  console.log(\"[Google Route] params \", params);\n\n  if (req.method === \"OPTIONS\") {\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\n  }\n\n  const authResult = auth(req, ModelProvider.GeminiPro);\n  if (authResult.error) {\n    return NextResponse.json(authResult, {\n      status: 401,\n    });\n  }\n\n  const bearToken = req.headers.get(\"Authorization\") ?? \"\";\n  const token = bearToken.trim().replaceAll(\"Bearer \", \"\").trim();\n\n  const apiKey = token ? token : serverConfig.googleApiKey;\n\n  if (!apiKey) {\n    return NextResponse.json(\n      {\n        error: true,\n        message: `missing GOOGLE_API_KEY in server env vars`,\n      },\n      {\n        status: 401,\n      },\n    );\n  }\n  try {\n    const response = await request(req, apiKey);\n    return response;\n  } catch (e) {\n    console.error(\"[Google] \", e);\n    return NextResponse.json(prettyObject(e));\n  }\n}\n\nexport const GET = handle;\nexport const POST = handle;\n\nexport const runtime = \"edge\";\nexport const preferredRegion = [\n  \"bom1\",\n  \"cle1\",\n  \"cpt1\",\n  \"gru1\",\n  \"hnd1\",\n  \"iad1\",\n  \"icn1\",\n  \"kix1\",\n  \"pdx1\",\n  \"sfo1\",\n  \"sin1\",\n  \"syd1\",\n];\n\nasync function request(req: NextRequest, apiKey: string) {\n  const controller = new AbortController();\n\n  let baseUrl = serverConfig.googleUrl || GEMINI_BASE_URL;\n\n  let path = `${req.nextUrl.pathname}`.replaceAll(ApiPath.Google, \"\");\n\n  if (!baseUrl.startsWith(\"http\")) {\n    baseUrl = `https://${baseUrl}`;\n  }\n\n  if (baseUrl.endsWith(\"/\")) {\n    baseUrl = baseUrl.slice(0, -1);\n  }\n\n  console.log(\"[Proxy] \", path);\n  console.log(\"[Base Url]\", baseUrl);\n\n  const timeoutId = setTimeout(\n    () => {\n      controller.abort();\n    },\n    10 * 60 * 1000,\n  );\n  const fetchUrl = `${baseUrl}${path}?key=${apiKey}${\n    req?.nextUrl?.searchParams?.get(\"alt\") === \"sse\" ? \"&alt=sse\" : \"\"\n  }`;\n\n  console.log(\"[Fetch Url] \", fetchUrl);\n  const fetchOptions: RequestInit = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Cache-Control\": \"no-store\",\n    },\n    method: req.method,\n    body: req.body,\n    // to fix #2485: https://stackoverflow.com/questions/55920957/cloudflare-worker-typeerror-one-time-use-body\n    redirect: \"manual\",\n    // @ts-ignore\n    duplex: \"half\",\n    signal: controller.signal,\n  };\n\n  try {\n    const res = await fetch(fetchUrl, fetchOptions);\n    // to prevent browser prompt for credentials\n    const newHeaders = new Headers(res.headers);\n    newHeaders.delete(\"www-authenticate\");\n    // to disable nginx buffering\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\n\n    return new Response(res.body, {\n      status: res.status,\n      statusText: res.statusText,\n      headers: newHeaders,\n    });\n  } finally {\n    clearTimeout(timeoutId);\n  }\n}\n","import { getServerSideConfig } from \"@/app/config/server\";\nimport {\n  ANTHROPIC_BASE_URL,\n  Anthropic,\n  ApiPath,\n  DEFAULT_MODELS,\n  ServiceProvider,\n  ModelProvider,\n} from \"@/app/constant\";\nimport { prettyObject } from \"@/app/utils/format\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { auth } from \"./auth\";\nimport { isModelAvailableInServer } from \"@/app/utils/model\";\nimport { cloudflareAIGatewayUrl } from \"@/app/utils/cloudflare\";\n\nconst ALLOWD_PATH = new Set([Anthropic.ChatPath, Anthropic.ChatPath1]);\n\nexport async function handle(\n  req: NextRequest,\n  { params }: { params: { path: string[] } },\n) {\n  console.log(\"[Anthropic Route] params \", params);\n\n  if (req.method === \"OPTIONS\") {\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\n  }\n\n  const subpath = params.path.join(\"/\");\n\n  if (!ALLOWD_PATH.has(subpath)) {\n    console.log(\"[Anthropic Route] forbidden path \", subpath);\n    return NextResponse.json(\n      {\n        error: true,\n        msg: \"you are not allowed to request \" + subpath,\n      },\n      {\n        status: 403,\n      },\n    );\n  }\n\n  const authResult = auth(req, ModelProvider.Claude);\n  if (authResult.error) {\n    return NextResponse.json(authResult, {\n      status: 401,\n    });\n  }\n\n  try {\n    const response = await request(req);\n    return response;\n  } catch (e) {\n    console.error(\"[Anthropic] \", e);\n    return NextResponse.json(prettyObject(e));\n  }\n}\n\nconst serverConfig = getServerSideConfig();\n\nasync function request(req: NextRequest) {\n  const controller = new AbortController();\n\n  let authHeaderName = \"x-api-key\";\n  let authValue =\n    req.headers.get(authHeaderName) ||\n    req.headers.get(\"Authorization\")?.replaceAll(\"Bearer \", \"\").trim() ||\n    serverConfig.anthropicApiKey ||\n    \"\";\n\n  let path = `${req.nextUrl.pathname}`.replaceAll(ApiPath.Anthropic, \"\");\n\n  let baseUrl =\n    serverConfig.anthropicUrl || serverConfig.baseUrl || ANTHROPIC_BASE_URL;\n\n  if (!baseUrl.startsWith(\"http\")) {\n    baseUrl = `https://${baseUrl}`;\n  }\n\n  if (baseUrl.endsWith(\"/\")) {\n    baseUrl = baseUrl.slice(0, -1);\n  }\n\n  console.log(\"[Proxy] \", path);\n  console.log(\"[Base Url]\", baseUrl);\n\n  const timeoutId = setTimeout(\n    () => {\n      controller.abort();\n    },\n    10 * 60 * 1000,\n  );\n\n  // try rebuild url, when using cloudflare ai gateway in server\n  const fetchUrl = cloudflareAIGatewayUrl(`${baseUrl}${path}`);\n\n  const fetchOptions: RequestInit = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Cache-Control\": \"no-store\",\n      [authHeaderName]: authValue,\n      \"anthropic-version\":\n        req.headers.get(\"anthropic-version\") ||\n        serverConfig.anthropicApiVersion ||\n        Anthropic.Vision,\n    },\n    method: req.method,\n    body: req.body,\n    redirect: \"manual\",\n    // @ts-ignore\n    duplex: \"half\",\n    signal: controller.signal,\n  };\n\n  // #1815 try to refuse some request to some models\n  if (serverConfig.customModels && req.body) {\n    try {\n      const clonedBody = await req.text();\n      fetchOptions.body = clonedBody;\n\n      const jsonBody = JSON.parse(clonedBody) as { model?: string };\n\n      // not undefined and is false\n      if (\n        isModelAvailableInServer(\n          serverConfig.customModels,\n          jsonBody?.model as string,\n          ServiceProvider.Anthropic as string,\n        )\n      ) {\n        return NextResponse.json(\n          {\n            error: true,\n            message: `you are not allowed to use ${jsonBody?.model} model`,\n          },\n          {\n            status: 403,\n          },\n        );\n      }\n    } catch (e) {\n      console.error(`[Anthropic] filter`, e);\n    }\n  }\n  // console.log(\"[Anthropic request]\", fetchOptions.headers, req.method);\n  try {\n    const res = await fetch(fetchUrl, fetchOptions);\n\n    // console.log(\n    //   \"[Anthropic response]\",\n    //   res.status,\n    //   \"   \",\n    //   res.headers,\n    //   res.url,\n    // );\n    // to prevent browser prompt for credentials\n    const newHeaders = new Headers(res.headers);\n    newHeaders.delete(\"www-authenticate\");\n    // to disable nginx buffering\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\n\n    return new Response(res.body, {\n      status: res.status,\n      statusText: res.statusText,\n      headers: newHeaders,\n    });\n  } finally {\n    clearTimeout(timeoutId);\n  }\n}\n","import { BAIDU_OATUH_URL } from \"../constant\";\n/**\n * 使用 AK，SK 生成鉴权签名（Access Token）\n * @return 鉴权签名信息\n */\nexport async function getAccessToken(\n  clientId: string,\n  clientSecret: string,\n): Promise<{\n  access_token: string;\n  expires_in: number;\n  error?: number;\n}> {\n  const res = await fetch(\n    `${BAIDU_OATUH_URL}?grant_type=client_credentials&client_id=${clientId}&client_secret=${clientSecret}`,\n    {\n      method: \"POST\",\n      mode: \"cors\",\n    },\n  );\n  const resJson = await res.json();\n  return resJson;\n}\n","import { getServerSideConfig } from \"@/app/config/server\";\nimport {\n  BAIDU_BASE_URL,\n  ApiPath,\n  ModelProvider,\n  BAIDU_OATUH_URL,\n  ServiceProvider,\n} from \"@/app/constant\";\nimport { prettyObject } from \"@/app/utils/format\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { auth } from \"@/app/api/auth\";\nimport { isModelAvailableInServer } from \"@/app/utils/model\";\nimport { getAccessToken } from \"@/app/utils/baidu\";\n\nconst serverConfig = getServerSideConfig();\n\nexport async function handle(\n  req: NextRequest,\n  { params }: { params: { path: string[] } },\n) {\n  console.log(\"[Baidu Route] params \", params);\n\n  if (req.method === \"OPTIONS\") {\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\n  }\n\n  const authResult = auth(req, ModelProvider.Ernie);\n  if (authResult.error) {\n    return NextResponse.json(authResult, {\n      status: 401,\n    });\n  }\n\n  if (!serverConfig.baiduApiKey || !serverConfig.baiduSecretKey) {\n    return NextResponse.json(\n      {\n        error: true,\n        message: `missing BAIDU_API_KEY or BAIDU_SECRET_KEY in server env vars`,\n      },\n      {\n        status: 401,\n      },\n    );\n  }\n\n  try {\n    const response = await request(req);\n    return response;\n  } catch (e) {\n    console.error(\"[Baidu] \", e);\n    return NextResponse.json(prettyObject(e));\n  }\n}\n\nasync function request(req: NextRequest) {\n  const controller = new AbortController();\n\n  let path = `${req.nextUrl.pathname}`.replaceAll(ApiPath.Baidu, \"\");\n\n  let baseUrl = serverConfig.baiduUrl || BAIDU_BASE_URL;\n\n  if (!baseUrl.startsWith(\"http\")) {\n    baseUrl = `https://${baseUrl}`;\n  }\n\n  if (baseUrl.endsWith(\"/\")) {\n    baseUrl = baseUrl.slice(0, -1);\n  }\n\n  console.log(\"[Proxy] \", path);\n  console.log(\"[Base Url]\", baseUrl);\n\n  const timeoutId = setTimeout(\n    () => {\n      controller.abort();\n    },\n    10 * 60 * 1000,\n  );\n\n  const { access_token } = await getAccessToken(\n    serverConfig.baiduApiKey as string,\n    serverConfig.baiduSecretKey as string,\n  );\n  const fetchUrl = `${baseUrl}${path}?access_token=${access_token}`;\n\n  const fetchOptions: RequestInit = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    method: req.method,\n    body: req.body,\n    redirect: \"manual\",\n    // @ts-ignore\n    duplex: \"half\",\n    signal: controller.signal,\n  };\n\n  // #1815 try to refuse some request to some models\n  if (serverConfig.customModels && req.body) {\n    try {\n      const clonedBody = await req.text();\n      fetchOptions.body = clonedBody;\n\n      const jsonBody = JSON.parse(clonedBody) as { model?: string };\n\n      // not undefined and is false\n      if (\n        isModelAvailableInServer(\n          serverConfig.customModels,\n          jsonBody?.model as string,\n          ServiceProvider.Baidu as string,\n        )\n      ) {\n        return NextResponse.json(\n          {\n            error: true,\n            message: `you are not allowed to use ${jsonBody?.model} model`,\n          },\n          {\n            status: 403,\n          },\n        );\n      }\n    } catch (e) {\n      console.error(`[Baidu] filter`, e);\n    }\n  }\n  try {\n    const res = await fetch(fetchUrl, fetchOptions);\n\n    // to prevent browser prompt for credentials\n    const newHeaders = new Headers(res.headers);\n    newHeaders.delete(\"www-authenticate\");\n    // to disable nginx buffering\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\n\n    return new Response(res.body, {\n      status: res.status,\n      statusText: res.statusText,\n      headers: newHeaders,\n    });\n  } finally {\n    clearTimeout(timeoutId);\n  }\n}\n","import { getServerSideConfig } from \"@/app/config/server\";\nimport {\n  BYTEDANCE_BASE_URL,\n  ApiPath,\n  ModelProvider,\n  ServiceProvider,\n} from \"@/app/constant\";\nimport { prettyObject } from \"@/app/utils/format\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { auth } from \"@/app/api/auth\";\nimport { isModelAvailableInServer } from \"@/app/utils/model\";\n\nconst serverConfig = getServerSideConfig();\n\nexport async function handle(\n  req: NextRequest,\n  { params }: { params: { path: string[] } },\n) {\n  console.log(\"[ByteDance Route] params \", params);\n\n  if (req.method === \"OPTIONS\") {\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\n  }\n\n  const authResult = auth(req, ModelProvider.Doubao);\n  if (authResult.error) {\n    return NextResponse.json(authResult, {\n      status: 401,\n    });\n  }\n\n  try {\n    const response = await request(req);\n    return response;\n  } catch (e) {\n    console.error(\"[ByteDance] \", e);\n    return NextResponse.json(prettyObject(e));\n  }\n}\n\nasync function request(req: NextRequest) {\n  const controller = new AbortController();\n\n  let path = `${req.nextUrl.pathname}`.replaceAll(ApiPath.ByteDance, \"\");\n\n  let baseUrl = serverConfig.bytedanceUrl || BYTEDANCE_BASE_URL;\n\n  if (!baseUrl.startsWith(\"http\")) {\n    baseUrl = `https://${baseUrl}`;\n  }\n\n  if (baseUrl.endsWith(\"/\")) {\n    baseUrl = baseUrl.slice(0, -1);\n  }\n\n  console.log(\"[Proxy] \", path);\n  console.log(\"[Base Url]\", baseUrl);\n\n  const timeoutId = setTimeout(\n    () => {\n      controller.abort();\n    },\n    10 * 60 * 1000,\n  );\n\n  const fetchUrl = `${baseUrl}${path}`;\n\n  const fetchOptions: RequestInit = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: req.headers.get(\"Authorization\") ?? \"\",\n    },\n    method: req.method,\n    body: req.body,\n    redirect: \"manual\",\n    // @ts-ignore\n    duplex: \"half\",\n    signal: controller.signal,\n  };\n\n  // #1815 try to refuse some request to some models\n  if (serverConfig.customModels && req.body) {\n    try {\n      const clonedBody = await req.text();\n      fetchOptions.body = clonedBody;\n\n      const jsonBody = JSON.parse(clonedBody) as { model?: string };\n\n      // not undefined and is false\n      if (\n        isModelAvailableInServer(\n          serverConfig.customModels,\n          jsonBody?.model as string,\n          ServiceProvider.ByteDance as string,\n        )\n      ) {\n        return NextResponse.json(\n          {\n            error: true,\n            message: `you are not allowed to use ${jsonBody?.model} model`,\n          },\n          {\n            status: 403,\n          },\n        );\n      }\n    } catch (e) {\n      console.error(`[ByteDance] filter`, e);\n    }\n  }\n\n  try {\n    const res = await fetch(fetchUrl, fetchOptions);\n\n    // to prevent browser prompt for credentials\n    const newHeaders = new Headers(res.headers);\n    newHeaders.delete(\"www-authenticate\");\n    // to disable nginx buffering\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\n\n    return new Response(res.body, {\n      status: res.status,\n      statusText: res.statusText,\n      headers: newHeaders,\n    });\n  } finally {\n    clearTimeout(timeoutId);\n  }\n}\n","import { getServerSideConfig } from \"@/app/config/server\";\nimport {\n  Alibaba,\n  ALIBABA_BASE_URL,\n  ApiPath,\n  ModelProvider,\n  ServiceProvider,\n} from \"@/app/constant\";\nimport { prettyObject } from \"@/app/utils/format\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { auth } from \"@/app/api/auth\";\nimport { isModelAvailableInServer } from \"@/app/utils/model\";\nimport type { RequestPayload } from \"@/app/client/platforms/openai\";\n\nconst serverConfig = getServerSideConfig();\n\nexport async function handle(\n  req: NextRequest,\n  { params }: { params: { path: string[] } },\n) {\n  console.log(\"[Alibaba Route] params \", params);\n\n  if (req.method === \"OPTIONS\") {\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\n  }\n\n  const authResult = auth(req, ModelProvider.Qwen);\n  if (authResult.error) {\n    return NextResponse.json(authResult, {\n      status: 401,\n    });\n  }\n\n  try {\n    const response = await request(req);\n    return response;\n  } catch (e) {\n    console.error(\"[Alibaba] \", e);\n    return NextResponse.json(prettyObject(e));\n  }\n}\n\nasync function request(req: NextRequest) {\n  const controller = new AbortController();\n\n  // alibaba use base url or just remove the path\n  let path = `${req.nextUrl.pathname}`.replaceAll(ApiPath.Alibaba, \"\");\n\n  let baseUrl = serverConfig.alibabaUrl || ALIBABA_BASE_URL;\n\n  if (!baseUrl.startsWith(\"http\")) {\n    baseUrl = `https://${baseUrl}`;\n  }\n\n  if (baseUrl.endsWith(\"/\")) {\n    baseUrl = baseUrl.slice(0, -1);\n  }\n\n  console.log(\"[Proxy] \", path);\n  console.log(\"[Base Url]\", baseUrl);\n\n  const timeoutId = setTimeout(\n    () => {\n      controller.abort();\n    },\n    10 * 60 * 1000,\n  );\n\n  const fetchUrl = `${baseUrl}${path}`;\n  const fetchOptions: RequestInit = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: req.headers.get(\"Authorization\") ?? \"\",\n      \"X-DashScope-SSE\": req.headers.get(\"X-DashScope-SSE\") ?? \"disable\",\n    },\n    method: req.method,\n    body: req.body,\n    redirect: \"manual\",\n    // @ts-ignore\n    duplex: \"half\",\n    signal: controller.signal,\n  };\n\n  // #1815 try to refuse some request to some models\n  if (serverConfig.customModels && req.body) {\n    try {\n      const clonedBody = await req.text();\n      fetchOptions.body = clonedBody;\n\n      const jsonBody = JSON.parse(clonedBody) as { model?: string };\n\n      // not undefined and is false\n      if (\n        isModelAvailableInServer(\n          serverConfig.customModels,\n          jsonBody?.model as string,\n          ServiceProvider.Alibaba as string,\n        )\n      ) {\n        return NextResponse.json(\n          {\n            error: true,\n            message: `you are not allowed to use ${jsonBody?.model} model`,\n          },\n          {\n            status: 403,\n          },\n        );\n      }\n    } catch (e) {\n      console.error(`[Alibaba] filter`, e);\n    }\n  }\n  try {\n    const res = await fetch(fetchUrl, fetchOptions);\n\n    // to prevent browser prompt for credentials\n    const newHeaders = new Headers(res.headers);\n    newHeaders.delete(\"www-authenticate\");\n    // to disable nginx buffering\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\n\n    return new Response(res.body, {\n      status: res.status,\n      statusText: res.statusText,\n      headers: newHeaders,\n    });\n  } finally {\n    clearTimeout(timeoutId);\n  }\n}\n","import { getServerSideConfig } from \"@/app/config/server\";\nimport {\n  Moonshot,\n  MOONSHOT_BASE_URL,\n  ApiPath,\n  ModelProvider,\n  ServiceProvider,\n} from \"@/app/constant\";\nimport { prettyObject } from \"@/app/utils/format\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { auth } from \"@/app/api/auth\";\nimport { isModelAvailableInServer } from \"@/app/utils/model\";\nimport type { RequestPayload } from \"@/app/client/platforms/openai\";\n\nconst serverConfig = getServerSideConfig();\n\nexport async function handle(\n  req: NextRequest,\n  { params }: { params: { path: string[] } },\n) {\n  console.log(\"[Moonshot Route] params \", params);\n\n  if (req.method === \"OPTIONS\") {\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\n  }\n\n  const authResult = auth(req, ModelProvider.Moonshot);\n  if (authResult.error) {\n    return NextResponse.json(authResult, {\n      status: 401,\n    });\n  }\n\n  try {\n    const response = await request(req);\n    return response;\n  } catch (e) {\n    console.error(\"[Moonshot] \", e);\n    return NextResponse.json(prettyObject(e));\n  }\n}\n\nasync function request(req: NextRequest) {\n  const controller = new AbortController();\n\n  // alibaba use base url or just remove the path\n  let path = `${req.nextUrl.pathname}`.replaceAll(ApiPath.Moonshot, \"\");\n\n  let baseUrl = serverConfig.moonshotUrl || MOONSHOT_BASE_URL;\n\n  if (!baseUrl.startsWith(\"http\")) {\n    baseUrl = `https://${baseUrl}`;\n  }\n\n  if (baseUrl.endsWith(\"/\")) {\n    baseUrl = baseUrl.slice(0, -1);\n  }\n\n  console.log(\"[Proxy] \", path);\n  console.log(\"[Base Url]\", baseUrl);\n\n  const timeoutId = setTimeout(\n    () => {\n      controller.abort();\n    },\n    10 * 60 * 1000,\n  );\n\n  const fetchUrl = `${baseUrl}${path}`;\n  const fetchOptions: RequestInit = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: req.headers.get(\"Authorization\") ?? \"\",\n    },\n    method: req.method,\n    body: req.body,\n    redirect: \"manual\",\n    // @ts-ignore\n    duplex: \"half\",\n    signal: controller.signal,\n  };\n\n  // #1815 try to refuse some request to some models\n  if (serverConfig.customModels && req.body) {\n    try {\n      const clonedBody = await req.text();\n      fetchOptions.body = clonedBody;\n\n      const jsonBody = JSON.parse(clonedBody) as { model?: string };\n\n      // not undefined and is false\n      if (\n        isModelAvailableInServer(\n          serverConfig.customModels,\n          jsonBody?.model as string,\n          ServiceProvider.Moonshot as string,\n        )\n      ) {\n        return NextResponse.json(\n          {\n            error: true,\n            message: `you are not allowed to use ${jsonBody?.model} model`,\n          },\n          {\n            status: 403,\n          },\n        );\n      }\n    } catch (e) {\n      console.error(`[Moonshot] filter`, e);\n    }\n  }\n  try {\n    const res = await fetch(fetchUrl, fetchOptions);\n\n    // to prevent browser prompt for credentials\n    const newHeaders = new Headers(res.headers);\n    newHeaders.delete(\"www-authenticate\");\n    // to disable nginx buffering\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\n\n    return new Response(res.body, {\n      status: res.status,\n      statusText: res.statusText,\n      headers: newHeaders,\n    });\n  } finally {\n    clearTimeout(timeoutId);\n  }\n}\n","import { NextRequest, NextResponse } from \"next/server\";\nimport { getServerSideConfig } from \"@/app/config/server\";\nimport { ModelProvider, STABILITY_BASE_URL } from \"@/app/constant\";\nimport { auth } from \"@/app/api/auth\";\n\nexport async function handle(\n  req: NextRequest,\n  { params }: { params: { path: string[] } },\n) {\n  console.log(\"[Stability] params \", params);\n\n  if (req.method === \"OPTIONS\") {\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\n  }\n\n  const controller = new AbortController();\n\n  const serverConfig = getServerSideConfig();\n\n  let baseUrl = serverConfig.stabilityUrl || STABILITY_BASE_URL;\n\n  if (!baseUrl.startsWith(\"http\")) {\n    baseUrl = `https://${baseUrl}`;\n  }\n\n  if (baseUrl.endsWith(\"/\")) {\n    baseUrl = baseUrl.slice(0, -1);\n  }\n\n  let path = `${req.nextUrl.pathname}`.replaceAll(\"/api/stability/\", \"\");\n\n  console.log(\"[Stability Proxy] \", path);\n  console.log(\"[Stability Base Url]\", baseUrl);\n\n  const timeoutId = setTimeout(\n    () => {\n      controller.abort();\n    },\n    10 * 60 * 1000,\n  );\n\n  const authResult = auth(req, ModelProvider.Stability);\n\n  if (authResult.error) {\n    return NextResponse.json(authResult, {\n      status: 401,\n    });\n  }\n\n  const bearToken = req.headers.get(\"Authorization\") ?? \"\";\n  const token = bearToken.trim().replaceAll(\"Bearer \", \"\").trim();\n\n  const key = token ? token : serverConfig.stabilityApiKey;\n\n  if (!key) {\n    return NextResponse.json(\n      {\n        error: true,\n        message: `missing STABILITY_API_KEY in server env vars`,\n      },\n      {\n        status: 401,\n      },\n    );\n  }\n\n  const fetchUrl = `${baseUrl}/${path}`;\n  console.log(\"[Stability Url] \", fetchUrl);\n  const fetchOptions: RequestInit = {\n    headers: {\n      \"Content-Type\": req.headers.get(\"Content-Type\") || \"multipart/form-data\",\n      Accept: req.headers.get(\"Accept\") || \"application/json\",\n      Authorization: `Bearer ${key}`,\n    },\n    method: req.method,\n    body: req.body,\n    // to fix #2485: https://stackoverflow.com/questions/55920957/cloudflare-worker-typeerror-one-time-use-body\n    redirect: \"manual\",\n    // @ts-ignore\n    duplex: \"half\",\n    signal: controller.signal,\n  };\n\n  try {\n    const res = await fetch(fetchUrl, fetchOptions);\n    // to prevent browser prompt for credentials\n    const newHeaders = new Headers(res.headers);\n    newHeaders.delete(\"www-authenticate\");\n    // to disable nginx buffering\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\n    return new Response(res.body, {\n      status: res.status,\n      statusText: res.statusText,\n      headers: newHeaders,\n    });\n  } finally {\n    clearTimeout(timeoutId);\n  }\n}\n","import { getServerSideConfig } from \"@/app/config/server\";\nimport {\n  Iflytek,\n  IFLYTEK_BASE_URL,\n  ApiPath,\n  ModelProvider,\n  ServiceProvider,\n} from \"@/app/constant\";\nimport { prettyObject } from \"@/app/utils/format\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { auth } from \"@/app/api/auth\";\nimport { isModelAvailableInServer } from \"@/app/utils/model\";\nimport type { RequestPayload } from \"@/app/client/platforms/openai\";\n// iflytek\n\nconst serverConfig = getServerSideConfig();\n\nexport async function handle(\n  req: NextRequest,\n  { params }: { params: { path: string[] } },\n) {\n  console.log(\"[Iflytek Route] params \", params);\n\n  if (req.method === \"OPTIONS\") {\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\n  }\n\n  const authResult = auth(req, ModelProvider.Iflytek);\n  if (authResult.error) {\n    return NextResponse.json(authResult, {\n      status: 401,\n    });\n  }\n\n  try {\n    const response = await request(req);\n    return response;\n  } catch (e) {\n    console.error(\"[Iflytek] \", e);\n    return NextResponse.json(prettyObject(e));\n  }\n}\n\nasync function request(req: NextRequest) {\n  const controller = new AbortController();\n\n  // iflytek use base url or just remove the path\n  let path = `${req.nextUrl.pathname}`.replaceAll(ApiPath.Iflytek, \"\");\n\n  let baseUrl = serverConfig.iflytekUrl || IFLYTEK_BASE_URL;\n\n  if (!baseUrl.startsWith(\"http\")) {\n    baseUrl = `https://${baseUrl}`;\n  }\n\n  if (baseUrl.endsWith(\"/\")) {\n    baseUrl = baseUrl.slice(0, -1);\n  }\n\n  console.log(\"[Proxy] \", path);\n  console.log(\"[Base Url]\", baseUrl);\n\n  const timeoutId = setTimeout(\n    () => {\n      controller.abort();\n    },\n    10 * 60 * 1000,\n  );\n\n  const fetchUrl = `${baseUrl}${path}`;\n  const fetchOptions: RequestInit = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: req.headers.get(\"Authorization\") ?? \"\",\n    },\n    method: req.method,\n    body: req.body,\n    redirect: \"manual\",\n    // @ts-ignore\n    duplex: \"half\",\n    signal: controller.signal,\n  };\n\n  // try to refuse some request to some models\n  if (serverConfig.customModels && req.body) {\n    try {\n      const clonedBody = await req.text();\n      fetchOptions.body = clonedBody;\n\n      const jsonBody = JSON.parse(clonedBody) as { model?: string };\n\n      // not undefined and is false\n      if (\n        isModelAvailableInServer(\n          serverConfig.customModels,\n          jsonBody?.model as string,\n          ServiceProvider.Iflytek as string,\n        )\n      ) {\n        return NextResponse.json(\n          {\n            error: true,\n            message: `you are not allowed to use ${jsonBody?.model} model`,\n          },\n          {\n            status: 403,\n          },\n        );\n      }\n    } catch (e) {\n      console.error(`[Iflytek] filter`, e);\n    }\n  }\n  try {\n    const res = await fetch(fetchUrl, fetchOptions);\n\n    // to prevent browser prompt for credentials\n    const newHeaders = new Headers(res.headers);\n    newHeaders.delete(\"www-authenticate\");\n    // to disable nginx buffering\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\n\n    return new Response(res.body, {\n      status: res.status,\n      statusText: res.statusText,\n      headers: newHeaders,\n    });\n  } finally {\n    clearTimeout(timeoutId);\n  }\n}\n","import { ApiPath } from \"@/app/constant\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { handle as openaiHandler } from \"../../openai\";\nimport { handle as azureHandler } from \"../../azure\";\nimport { handle as googleHandler } from \"../../google\";\nimport { handle as anthropicHandler } from \"../../anthropic\";\nimport { handle as baiduHandler } from \"../../baidu\";\nimport { handle as bytedanceHandler } from \"../../bytedance\";\nimport { handle as alibabaHandler } from \"../../alibaba\";\nimport { handle as moonshotHandler } from \"../../moonshot\";\nimport { handle as stabilityHandler } from \"../../stability\";\nimport { handle as iflytekHandler } from \"../../iflytek\";\nasync function handle(\n  req: NextRequest,\n  { params }: { params: { provider: string; path: string[] } },\n) {\n  const apiPath = `/api/${params.provider}`;\n  console.log(`[${params.provider} Route] params `, params);\n  switch (apiPath) {\n    case ApiPath.Azure:\n      return azureHandler(req, { params });\n    case ApiPath.Google:\n      return googleHandler(req, { params });\n    case ApiPath.Anthropic:\n      return anthropicHandler(req, { params });\n    case ApiPath.Baidu:\n      return baiduHandler(req, { params });\n    case ApiPath.ByteDance:\n      return bytedanceHandler(req, { params });\n    case ApiPath.Alibaba:\n      return alibabaHandler(req, { params });\n    // case ApiPath.Tencent: using \"/api/tencent\"\n    case ApiPath.Moonshot:\n      return moonshotHandler(req, { params });\n    case ApiPath.Stability:\n      return stabilityHandler(req, { params });\n    case ApiPath.Iflytek:\n      return iflytekHandler(req, { params });\n    default:\n      return openaiHandler(req, { params });\n  }\n}\n\nexport const GET = handle;\nexport const POST = handle;\n\nexport const runtime = \"edge\";\nexport const preferredRegion = [\n  \"arn1\",\n  \"bom1\",\n  \"cdg1\",\n  \"cle1\",\n  \"cpt1\",\n  \"dub1\",\n  \"fra1\",\n  \"gru1\",\n  \"hnd1\",\n  \"iad1\",\n  \"icn1\",\n  \"kix1\",\n  \"lhr1\",\n  \"pdx1\",\n  \"sfo1\",\n  \"sin1\",\n  \"syd1\",\n];\n","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/Volumes/D/github/ChatGPT-Next-Web/app/api/[provider]/[...path]/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/[provider]/[...path]/route\",\n        pathname: \"/api/[provider]/[...path]\",\n        filename: \"route\",\n        bundlePath: \"app/api/[provider]/[...path]/route\"\n    },\n    resolvedPagePath: \"/Volumes/D/github/ChatGPT-Next-Web/app/api/[provider]/[...path]/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/[provider]/[...path]/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2F%5Bprovider%5D%2F%5B...path%5D%2Froute&page=%2Fapi%2F%5Bprovider%5D%2F%5B...path%5D%2Froute&pagePath=private-next-app-dir%2Fapi%2F%5Bprovider%5D%2F%5B...path%5D%2Froute.ts&appDir=%2FVolumes%2FD%2Fgithub%2FChatGPT-Next-Web%2Fapp&appPaths=%2Fapi%2F%5Bprovider%5D%2F%5B...path%5D%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=arn1&preferredRegion=bom1&preferredRegion=cdg1&preferredRegion=cle1&preferredRegion=cpt1&preferredRegion=dub1&preferredRegion=fra1&preferredRegion=gru1&preferredRegion=hnd1&preferredRegion=iad1&preferredRegion=icn1&preferredRegion=kix1&preferredRegion=lhr1&preferredRegion=pdx1&preferredRegion=sfo1&preferredRegion=sin1&preferredRegion=syd1&middlewareConfig=e30%3D!private-next-app-dir/api/[provider]/[...path]/route.ts?__next_edge_ssr_entry__\";\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule);\n\n//# sourceMappingURL=edge-app-route.js.map"],"names":["module","exports","require","CustomSeq","val","cache","Map","next","has","id","get","seq","set","customProvider","providerName","toLowerCase","providerType","sorted","isModelAvailableInServer","customModels","modelName","fullName","modelTable","collectModelTable","models","forEach","m","name","provider","displayName","split","filter","v","length","available","startsWith","nameConfig","slice","Object","values","model","customModelName","customProviderName","count","undefined","DEFAULT_MODELS","cloudflareAIGatewayUrl","fetchUrl","paths","concat","join","serverConfig","getServerSideConfig","requestOpenai","req","controller","AbortController","isAzure","nextUrl","pathname","includes","authValue","authHeaderName","headers","trim","replaceAll","path","search","baseUrl","azureUrl","OPENAI_BASE_URL","endsWith","console","log","timeoutId","setTimeout","abort","azureApiVersion","searchParams","shift","realDeployName","_","deployId","fetchOptions","openaiOrgId","method","body","redirect","duplex","signal","clonedBody","text","jsonBody","JSON","parse","ServiceProvider","OpenAI","Azure","NextResponse","json","error","message","status","e","res","fetch","openaiOrganizationHeader","newHeaders","Headers","delete","Response","statusText","clearTimeout","ALLOWD_PATH","Set","OpenaiPath","handle","params","subpath","msg","authResult","auth","ModelProvider","GPT","response","ListModelPath","remoteModelRes","availableModels","config","disableGPT4","data","prettyObject","GeminiPro","apiKey","token","googleApiKey","request","googleUrl","GEMINI_BASE_URL","ApiPath","Google","Anthropic","ChatPath","ChatPath1","Claude","anthropicApiKey","anthropicUrl","ANTHROPIC_BASE_URL","anthropicApiVersion","Vision","getAccessToken","clientId","clientSecret","BAIDU_OATUH_URL","mode","Ernie","baiduApiKey","baiduSecretKey","Baidu","baiduUrl","BAIDU_BASE_URL","access_token","Doubao","ByteDance","bytedanceUrl","BYTEDANCE_BASE_URL","Authorization","Qwen","Alibaba","alibabaUrl","ALIBABA_BASE_URL","Moonshot","moonshotUrl","MOONSHOT_BASE_URL","stabilityUrl","STABILITY_BASE_URL","Stability","key","stabilityApiKey","Accept","Iflytek","iflytekUrl","IFLYTEK_BASE_URL","apiPath","azureHandler","googleHandler","anthropicHandler","baiduHandler","bytedanceHandler","alibabaHandler","moonshotHandler","stabilityHandler","iflytekHandler","openaiHandler","GET","POST","runtime","preferredRegion","routeModule","module_compiled","AppRouteRouteModule","definition","kind","route_kind","x","APP_ROUTE","page","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","requestAsyncStorage","staticGenerationAsyncStorage","serverHooks","headerHooks","staticGenerationBailout","originalPathname","patchFetch","patch_fetch","XH","ComponentMod","route_next_edge_ssr_entry_namespaceObject","next_edge_app_route_loaderabsolutePagePath_private_next_app_dir_2Fapi_2F_5Bprovider_5D_2F_5B_path_5D_2Froute_ts_page_2Fapi_2F_5Bprovider_5D_2F_5B_path_5D_2Froute_appDirLoader_bmV4dC1hcHAtbG9hZGVyP25hbWU9YXBwJTJGYXBpJTJGJTVCcHJvdmlkZXIlNUQlMkYlNUIuLi5wYXRoJTVEJTJGcm91dGUmcGFnZT0lMkZhcGklMkYlNUJwcm92aWRlciU1RCUyRiU1Qi4uLnBhdGglNUQlMkZyb3V0ZSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRiU1QnByb3ZpZGVyJTVEJTJGJTVCLi4ucGF0aCU1RCUyRnJvdXRlLnRzJmFwcERpcj0lMkZWb2x1bWVzJTJGRCUyRmdpdGh1YiUyRkNoYXRHUFQtTmV4dC1XZWIlMkZhcHAmYXBwUGF0aHM9JTJGYXBpJTJGJTVCcHJvdmlkZXIlNUQlMkYlNUIuLi5wYXRoJTVEJTJGcm91dGUmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9c3RhbmRhbG9uZSZwcmVmZXJyZWRSZWdpb249YXJuMSZwcmVmZXJyZWRSZWdpb249Ym9tMSZwcmVmZXJyZWRSZWdpb249Y2RnMSZwcmVmZXJyZWRSZWdpb249Y2xlMSZwcmVmZXJyZWRSZWdpb249Y3B0MSZwcmVmZXJyZWRSZWdpb249ZHViMSZwcmVmZXJyZWRSZWdpb249ZnJhMSZwcmVmZXJyZWRSZWdpb249Z3J1MSZwcmVmZXJyZWRSZWdpb249aG5kMSZwcmVmZXJyZWRSZWdpb249aWFkMSZwcmVmZXJyZWRSZWdpb249aWNuMSZwcmVmZXJyZWRSZWdpb249a2l4MSZwcmVmZXJyZWRSZWdpb249bGhyMSZwcmVmZXJyZWRSZWdpb249cGR4MSZwcmVmZXJyZWRSZWdpb249c2ZvMSZwcmVmZXJyZWRSZWdpb249c2luMSZwcmVmZXJyZWRSZWdpb249c3lkMSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCE_3D_nextConfigOutput_standalone_preferredRegion_arn1_preferredRegion_bom1_preferredRegion_cdg1_preferredRegion_cle1_preferredRegion_cpt1_preferredRegion_dub1_preferredRegion_fra1_preferredRegion_gru1_preferredRegion_hnd1_preferredRegion_iad1_preferredRegion_icn1_preferredRegion_kix1_preferredRegion_lhr1_preferredRegion_pdx1_preferredRegion_sfo1_preferredRegion_sin1_preferredRegion_syd1_middlewareConfig_e30_3D_","edge_route_module_wrapper","a","wrap"],"sourceRoot":""}